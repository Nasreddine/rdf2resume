{"ast":null,"code":"import _objectSpread from \"/home/eelezi/thesis/rdf2resume/UI/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/eelezi/thesis/rdf2resume/UI/src/components/Dashboard/Forms/Modals/FormPublication/PublicationModal.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport { Combobox } from \"react-widgets\";\nimport { Modal, Row, Col, Button } from \"react-bootstrap\";\nimport CustomTextarea from \"../../../../core/CustomTextarea\";\nimport CustomInput from \"../../../../core/CustomInput\";\nimport { createPublication, updatePublication, updateCVLastUpdate } from \"../../../../../actions\";\nimport { fetchMainPropertiess, updateLanguage } from \"../../../../../actions/utilityActions\";\nimport { retrieveMainProperties } from \"../../../../../utilities/utilityQueries\";\nimport { cancelLabel, resetLabel, saveLabel, updateLabel, publicationUpdateTitle, publicationAddTitle, successTitle } from \"../../../../../translations/translations\";\nimport { ListItem, languages } from \"../../../../core/LanguageToggle\";\n\nclass PublicationModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      language: '',\n      publication: {\n        \"@type\": \"my0:Publication\",\n        \"my0:publicationTitle\": [{\n          \"@value\": \"\",\n          \"@language\": \"en\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"it\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"fr\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"de\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"sq\"\n        }],\n        \"my0:publicationPublisher\": \"\",\n        \"my0:publicationDate\": \"\",\n        \"my0:publicationAuthor\": \"\",\n        \"my0:publicationURL\": \"\",\n        \"my0:publicationDescription\": [{\n          \"@value\": \"\",\n          \"@language\": \"en\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"it\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"fr\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"de\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"sq\"\n        }]\n      }\n    };\n\n    this.setInitialValues = () => {\n      if (this.props.id !== null && this.props.isUpdate === true) {\n        let inputRef = this.props.initialValues;\n\n        let publication = _objectSpread({}, this.state.publication);\n\n        publication[\"my0:publicationTitle\"] = inputRef[\"my0:publicationTitle\"];\n        publication[\"my0:publicationPublisher\"] = inputRef[\"my0:publicationPublisher\"];\n        publication[\"my0:publicationDate\"] = inputRef[\"my0:publicationDate\"];\n        publication[\"my0:publicationAuthor\"] = inputRef[\"my0:publicationAuthor\"];\n        publication[\"my0:publicationURL\"] = inputRef[\"my0:publicationURL\"];\n        publication[\"my0:publicationDescription\"] = inputRef[\"my0:publicationDescription\"];\n        this.setState({\n          publication\n        });\n      }\n    };\n\n    this.clearForm = () => {\n      if (!this.props.isUpdate) {\n        this.setState({\n          publication: {\n            \"@type\": \"my0:Publication\",\n            \"my0:publicationTitle\": [{\n              \"@value\": \"\",\n              \"@language\": \"en\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"it\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"fr\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"de\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"sq\"\n            }],\n            \"my0:publicationPublisher\": \"\",\n            \"my0:publicationDate\": \"\",\n            \"my0:publicationAuthor\": \"\",\n            \"my0:publicationURL\": \"\",\n            \"my0:publicationDescription\": [{\n              \"@value\": \"\",\n              \"@language\": \"en\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"it\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"fr\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"de\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"sq\"\n            }]\n          }\n        });\n      } else {\n        this.setInitialValues();\n      }\n    };\n\n    this.handleInputChange = (e, lang) => {\n      let obj = _objectSpread({}, this.state.publication);\n\n      let label = e.target.id;\n\n      if (lang) {\n        obj[label] = this.replaceLanguageValue(obj[label], lang, e.target.value);\n      } else {\n        obj[label] = e.target.value;\n      }\n\n      this.setState({\n        publication: obj\n      });\n    };\n\n    this.handleSave = () => {\n      this.props.createPublication(this.state.publication);\n      this.props.updateCVLastUpdate();\n      Swal.fire({\n        title: successTitle[this.props.language],\n        type: \"success\",\n        confirmButtonColor: \"#4bb3cc\",\n        heightAuto: false,\n        confirmButtonText: \"Okay\"\n      });\n    };\n\n    this.handleUpdate = () => {\n      this.props.updatePublication({\n        object: this.state.publication,\n        index: this.props.id\n      });\n      this.props.updateCVLastUpdate();\n      Swal.fire({\n        title: successTitle[this.props.language],\n        type: \"success\",\n        confirmButtonColor: \"#4bb3cc\",\n        heightAuto: false,\n        confirmButtonText: \"Okay\"\n      });\n    };\n\n    this.handleRenderingSubmitButton = lang => {\n      let disabled = this.state.publication[\"my0:publicationTitle\"] === \"\";\n\n      if (!this.props.isUpdate) {\n        return React.createElement(Button, {\n          disabled: disabled,\n          type: \"submit\",\n          variant: \"primary\",\n          onClick: this.handleSave,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }, saveLabel[lang]);\n      } else {\n        return React.createElement(Button, {\n          disabled: disabled,\n          type: \"submit\",\n          variant: \"primary\",\n          onClick: this.handleUpdate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        }, updateLabel[lang]);\n      }\n    };\n  }\n\n  componentWillMount() {\n    this.props.fetchMainPropertiess(\"my0:Publication\");\n    this.setInitialValues();\n    this.setState({\n      language: this.props.language\n    });\n  }\n\n  replaceLanguageValue(data, language, value) {\n    let length = data.length;\n\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@language\"] === language) {\n        data[i][\"@value\"] = value;\n        break;\n      }\n    }\n\n    return data;\n  }\n\n  findTranslatedValue(data, lang) {\n    let length = data.length;\n\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@language\"] === lang) {\n        return data[i][\"@value\"];\n      }\n    }\n  }\n\n  findInArray(data, name) {\n    let length = data.length;\n\n    for (let i = 0; i < length; i++) {\n      let index = data[i][\"@type\"].indexOf(name);\n      let newlength = data[i][\"@type\"].length;\n\n      if (index >= 0 && index + name.length >= newlength) {\n        return i;\n      }\n    }\n  }\n\n  renderLabel(translated, name, lang) {\n    let index = this.findInArray(translated, name);\n\n    if (translated[index] === undefined || translated[index][lang] === undefined) {\n      return name;\n    } else {\n      return translated[index][lang];\n    }\n  }\n\n  render() {\n    let _this$state$publicati = this.state.publication,\n        publicationTitle = _this$state$publicati[\"my0:publicationTitle\"],\n        publicationPublisher = _this$state$publicati[\"my0:publicationPublisher\"],\n        publicationDate = _this$state$publicati[\"my0:publicationDate\"],\n        publicationAuthor = _this$state$publicati[\"my0:publicationAuthor\"],\n        publicationURL = _this$state$publicati[\"my0:publicationURL\"],\n        publicationDescription = _this$state$publicati[\"my0:publicationDescription\"];\n    let onHide = this.props.onHide;\n    let lang = this.state.language;\n    let translatedProps = this.props.translatedProps;\n\n    let changeLanguage = value => this.setState({\n      language: value\n    });\n\n    return React.createElement(Modal, {\n      show: this.props.show,\n      onHide: this.props.onHide,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      className: \"reference-modal\",\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      id: \"contained-modal-title-vcenter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, this.props.isUpdate ? publicationUpdateTitle[lang] : publicationAddTitle[lang])))), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: {\n        alignItems: \"flex-start\",\n        margin: \"0px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: {\n        justifyContent: \"flex-start\",\n        alignItems: \"flex-start\",\n        display: \"flex\",\n        margin: \"0px\",\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 9,\n      style: {\n        paddingLeft: \"0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:publicationTitle\",\n      name: \"publication\",\n      label: this.renderLabel(translatedProps, \"publicationTitle\", lang) + \" *\",\n      type: \"text\",\n      value: this.findTranslatedValue(publicationTitle, lang),\n      handleChange: e => this.handleInputChange(e, lang),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    })), React.createElement(Col, {\n      md: 3,\n      style: {\n        paddingRight: \"0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:publicationDate\",\n      name: \"publication\",\n      label: this.renderLabel(translatedProps, \"publicationDate\", lang),\n      type: \"date\",\n      value: publicationDate,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        marginTop: \"5px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:publicationPublisher\",\n      name: \"publication\",\n      label: this.renderLabel(translatedProps, \"publicationPublisher\", lang),\n      type: \"text\",\n      value: publicationPublisher,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        marginTop: \"5px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:publicationAuthor\",\n      name: \"publication\",\n      label: this.renderLabel(translatedProps, \"publicationAuthor\", lang),\n      type: \"text\",\n      value: publicationAuthor,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        marginTop: \"5px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:publicationURL\",\n      name: \"publication\",\n      label: this.renderLabel(translatedProps, \"publicationURL\", lang),\n      value: publicationURL,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        marginTop: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, React.createElement(CustomTextarea, {\n      id: \"my0:publicationDescription\",\n      name: \"publication\",\n      label: this.renderLabel(translatedProps, \"publicationDescription\", lang),\n      value: this.findTranslatedValue(publicationDescription, lang),\n      handleChange: e => this.handleInputChange(e, lang),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    })))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, React.createElement(Combobox, {\n      onChange: changeLanguage,\n      value: lang,\n      defaultValue: \"en\",\n      containerClassName: \"languagebox\",\n      data: languages,\n      itemComponent: ListItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }), this.handleRenderingSubmitButton(lang), React.createElement(Button, {\n      className: \"btn-reset\",\n      onClick: this.clearForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, resetLabel[lang]), React.createElement(Button, {\n      variant: \"danger\",\n      onClick: onHide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }, cancelLabel[lang])));\n  }\n\n}\n\nconst mapstateToProps = (state, ownProps) => {\n  return {\n    initialValues: state.cv[\"my0:hasPublication\"][ownProps.id],\n    language: state.utility.language,\n    translatedProps: retrieveMainProperties(state.utility[\"my0:Publication\"])\n  };\n};\n\nexport default connect(mapstateToProps, {\n  createPublication,\n  updateLanguage,\n  updateCVLastUpdate,\n  updatePublication,\n  fetchMainPropertiess\n})(PublicationModal);","map":{"version":3,"sources":["/home/eelezi/thesis/rdf2resume/UI/src/components/Dashboard/Forms/Modals/FormPublication/PublicationModal.jsx"],"names":["React","Component","connect","Swal","Combobox","Modal","Row","Col","Button","CustomTextarea","CustomInput","createPublication","updatePublication","updateCVLastUpdate","fetchMainPropertiess","updateLanguage","retrieveMainProperties","cancelLabel","resetLabel","saveLabel","updateLabel","publicationUpdateTitle","publicationAddTitle","successTitle","ListItem","languages","PublicationModal","state","language","publication","setInitialValues","props","id","isUpdate","inputRef","initialValues","setState","clearForm","handleInputChange","e","lang","obj","label","target","replaceLanguageValue","value","handleSave","fire","title","type","confirmButtonColor","heightAuto","confirmButtonText","handleUpdate","object","index","handleRenderingSubmitButton","disabled","componentWillMount","data","length","i","findTranslatedValue","findInArray","name","indexOf","newlength","renderLabel","translated","undefined","render","publicationTitle","publicationPublisher","publicationDate","publicationAuthor","publicationURL","publicationDescription","onHide","translatedProps","changeLanguage","show","alignItems","margin","justifyContent","display","width","paddingLeft","paddingRight","marginTop","mapstateToProps","ownProps","cv","utility"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport { Combobox } from \"react-widgets\";\nimport { Modal, Row, Col, Button } from \"react-bootstrap\";\nimport CustomTextarea from \"../../../../core/CustomTextarea\";\nimport CustomInput from \"../../../../core/CustomInput\";\nimport { createPublication, updatePublication, updateCVLastUpdate } from \"../../../../../actions\";\nimport { fetchMainPropertiess, updateLanguage } from \"../../../../../actions/utilityActions\";\nimport { retrieveMainProperties } from \"../../../../../utilities/utilityQueries\";\nimport {\n  cancelLabel,\n  resetLabel,\n  saveLabel,\n  updateLabel,\n  publicationUpdateTitle,\n  publicationAddTitle,\n  successTitle\n} from \"../../../../../translations/translations\";\nimport { ListItem, languages } from \"../../../../core/LanguageToggle\";\n\nclass PublicationModal extends Component {\n  state = {\n    language: '',\n    publication: {\n      \"@type\": \"my0:Publication\",\n      \"my0:publicationTitle\": [{\n        \"@value\": \"\",\n        \"@language\": \"en\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"it\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"fr\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"de\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"sq\"\n      },\n      ],\n      \"my0:publicationPublisher\": \"\",\n      \"my0:publicationDate\": \"\",\n      \"my0:publicationAuthor\": \"\",\n      \"my0:publicationURL\": \"\",\n      \"my0:publicationDescription\": [{\n        \"@value\": \"\",\n        \"@language\": \"en\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"it\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"fr\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"de\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"sq\"\n      },\n      ]\n    }\n  };\n\n  componentWillMount() {\n    this.props.fetchMainPropertiess(\"my0:Publication\");\n    this.setInitialValues();\n    this.setState({\n      language: this.props.language\n    })\n  }\n\n  setInitialValues = () => {\n    if (this.props.id !== null && this.props.isUpdate === true) {\n      let inputRef = this.props.initialValues;\n      let publication = { ...this.state.publication };\n      publication[\"my0:publicationTitle\"] = inputRef[\"my0:publicationTitle\"];\n      publication[\"my0:publicationPublisher\"] =\n        inputRef[\"my0:publicationPublisher\"];\n      publication[\"my0:publicationDate\"] = inputRef[\"my0:publicationDate\"];\n      publication[\"my0:publicationAuthor\"] = inputRef[\"my0:publicationAuthor\"];\n      publication[\"my0:publicationURL\"] = inputRef[\"my0:publicationURL\"];\n      publication[\"my0:publicationDescription\"] =\n        inputRef[\"my0:publicationDescription\"];\n      this.setState({\n        publication\n      });\n    }\n  };\n\n  clearForm = () => {\n    if (!this.props.isUpdate) {\n      this.setState({\n        publication: {\n          \"@type\": \"my0:Publication\",\n          \"my0:publicationTitle\": [{\n            \"@value\": \"\",\n            \"@language\": \"en\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"it\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"fr\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"de\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"sq\"\n          },\n          ],\n          \"my0:publicationPublisher\": \"\",\n          \"my0:publicationDate\": \"\",\n          \"my0:publicationAuthor\": \"\",\n          \"my0:publicationURL\": \"\",\n          \"my0:publicationDescription\": [{\n            \"@value\": \"\",\n            \"@language\": \"en\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"it\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"fr\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"de\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"sq\"\n          },\n          ]\n        }\n      });\n    } else {\n      this.setInitialValues();\n    }\n  };\n\n  replaceLanguageValue(data, language, value) {\n    let length = data.length;\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@language\"] === language) {\n        data[i][\"@value\"] = value;\n        break;\n      }\n    }\n    return data;\n  }\n\n  findTranslatedValue(data, lang) {\n    let length = data.length;\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@language\"] === lang) {\n        return data[i][\"@value\"];\n      }\n    }\n  }\n\n  handleInputChange = (e, lang) => {\n    let obj = { ...this.state.publication };\n    let label = e.target.id;\n    if (lang) {\n      obj[label] = this.replaceLanguageValue(obj[label], lang, e.target.value);\n    } else {\n      obj[label] = e.target.value;\n    }\n    this.setState({\n      publication: obj\n    });\n  };\n\n  handleSave = () => {\n    this.props.createPublication(this.state.publication);\n    this.props.updateCVLastUpdate();\n    Swal.fire({\n      title: successTitle[this.props.language],\n      type: \"success\",\n      confirmButtonColor: \"#4bb3cc\",\n      heightAuto: false,\n      confirmButtonText: \"Okay\"\n    });\n  };\n\n  handleUpdate = () => {\n    this.props.updatePublication({\n      object: this.state.publication,\n      index: this.props.id\n    });\n    this.props.updateCVLastUpdate();\n    Swal.fire({\n      title: successTitle[this.props.language],\n      type: \"success\",\n      confirmButtonColor: \"#4bb3cc\",\n      heightAuto: false,\n      confirmButtonText: \"Okay\"\n    });\n  };\n\n  findInArray(data, name) {\n    let length = data.length;\n    for (let i = 0; i < length; i++) {\n      let index = data[i][\"@type\"].indexOf(name);\n      let newlength = data[i][\"@type\"].length;\n      if (index >= 0 && index + name.length >= newlength) {\n        return i;\n      }\n    }\n  }\n\n  renderLabel(translated, name, lang) {\n    let index = this.findInArray(translated, name);\n    if (\n      translated[index] === undefined ||\n      translated[index][lang] === undefined\n    ) {\n      return name;\n    } else {\n      return translated[index][lang];\n    }\n  }\n\n  handleRenderingSubmitButton = lang => {\n    let disabled = this.state.publication[\"my0:publicationTitle\"] === \"\";\n    if (!this.props.isUpdate) {\n      return (\n        <Button\n          disabled={disabled}\n          type=\"submit\"\n          variant=\"primary\"\n          onClick={this.handleSave}\n        >\n          {saveLabel[lang]}\n        </Button>\n      );\n    } else {\n      return (\n        <Button\n          disabled={disabled}\n          type=\"submit\"\n          variant=\"primary\"\n          onClick={this.handleUpdate}\n        >\n          {updateLabel[lang]}\n        </Button>\n      );\n    }\n  };\n\n  render() {\n    let {\n      \"my0:publicationTitle\": publicationTitle,\n      \"my0:publicationPublisher\": publicationPublisher,\n      \"my0:publicationDate\": publicationDate,\n      \"my0:publicationAuthor\": publicationAuthor,\n      \"my0:publicationURL\": publicationURL,\n      \"my0:publicationDescription\": publicationDescription\n    } = this.state.publication;\n\n    let { onHide } = this.props;\n\n    let lang = this.state.language;\n\n    let { translatedProps } = this.props;\n\n    let changeLanguage = (value) => this.setState({ language: value });\n\n    return (\n      <Modal\n        show={this.props.show}\n        onHide={this.props.onHide}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        className=\"reference-modal\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            <Row>\n              <Col md={12}>\n                {this.props.isUpdate\n                  ? publicationUpdateTitle[lang]\n                  : publicationAddTitle[lang]}\n              </Col>\n            </Row>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Row style={{ alignItems: \"flex-start\", margin: \"0px\" }}>\n            <Row\n              style={{\n                justifyContent: \"flex-start\",\n                alignItems: \"flex-start\",\n                display: \"flex\",\n                margin: \"0px\",\n                width: \"100%\"\n              }}\n            >\n              <Col md={9} style={{ paddingLeft: \"0\" }}>\n                <CustomInput\n                  id=\"my0:publicationTitle\"\n                  name=\"publication\"\n                  label={\n                    this.renderLabel(\n                      translatedProps,\n                      \"publicationTitle\",\n                      lang\n                    ) + \" *\"\n                  }\n                  type=\"text\"\n                  value={this.findTranslatedValue(publicationTitle, lang)}\n                  handleChange={(e) => this.handleInputChange(e, lang)}\n                />\n              </Col>\n              <Col md={3} style={{ paddingRight: \"0\" }}>\n                <CustomInput\n                  id=\"my0:publicationDate\"\n                  name=\"publication\"\n                  label={this.renderLabel(\n                    translatedProps,\n                    \"publicationDate\",\n                    lang\n                  )}\n                  type=\"date\"\n                  value={publicationDate}\n                  handleChange={this.handleInputChange}\n                />\n              </Col>\n            </Row>\n            <div style={{ width: \"100%\", marginTop: \"5px\" }}>\n              <CustomInput\n                id=\"my0:publicationPublisher\"\n                name=\"publication\"\n                label={this.renderLabel(\n                  translatedProps,\n                  \"publicationPublisher\",\n                  lang\n                )}\n                type=\"text\"\n                value={publicationPublisher}\n                handleChange={this.handleInputChange}\n              />\n            </div>\n            <div style={{ width: \"100%\", marginTop: \"5px\" }}>\n              <CustomInput\n                id=\"my0:publicationAuthor\"\n                name=\"publication\"\n                label={this.renderLabel(\n                  translatedProps,\n                  \"publicationAuthor\",\n                  lang\n                )}\n                type=\"text\"\n                value={publicationAuthor}\n                handleChange={this.handleInputChange}\n              />\n            </div>\n            <div style={{ width: \"100%\", marginTop: \"5px\" }}>\n              <CustomInput\n                id=\"my0:publicationURL\"\n                name=\"publication\"\n                label={this.renderLabel(\n                  translatedProps,\n                  \"publicationURL\",\n                  lang\n                )}\n                value={publicationURL}\n                handleChange={this.handleInputChange}\n              />\n            </div>\n            <div style={{ width: \"100%\", marginTop: \"10px\" }}>\n              <CustomTextarea\n                id=\"my0:publicationDescription\"\n                name=\"publication\"\n                label={this.renderLabel(\n                  translatedProps,\n                  \"publicationDescription\",\n                  lang\n                )}\n                value={this.findTranslatedValue(publicationDescription, lang)}\n                handleChange={(e) => this.handleInputChange(e, lang)}\n              />\n            </div>\n          </Row>\n        </Modal.Body>\n        <Modal.Footer>\n          <Combobox onChange={changeLanguage} value={lang} defaultValue={\"en\"} containerClassName=\"languagebox\" data={languages} itemComponent={ListItem} />\n          {this.handleRenderingSubmitButton(lang)}\n          <Button className=\"btn-reset\" onClick={this.clearForm}>\n            {resetLabel[lang]}\n          </Button>\n          <Button variant=\"danger\" onClick={onHide}>\n            {cancelLabel[lang]}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapstateToProps = (state, ownProps) => {\n  return {\n    initialValues: state.cv[\"my0:hasPublication\"][ownProps.id],\n    language: state.utility.language,\n    translatedProps: retrieveMainProperties(state.utility[\"my0:Publication\"])\n  };\n};\n\nexport default connect(\n  mapstateToProps,\n  { createPublication, updateLanguage, updateCVLastUpdate, updatePublication, fetchMainPropertiess }\n)(PublicationModal);\n"]},"metadata":{},"sourceType":"module"}