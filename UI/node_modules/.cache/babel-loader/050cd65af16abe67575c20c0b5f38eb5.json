{"ast":null,"code":"var _jsxFileName = \"/home/eelezi/thesis/rdf2resume/src/components/Dashboard/Forms/Modals/FormSkill/SkillView.jsx\";\nimport React, { Component } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { removeOtherSkill } from \"../../../../../actions\";\nimport { connect } from \"react-redux\";\nimport { faEdit, faTrash, faCaretDown, faCaretUp } from \"@fortawesome/free-solid-svg-icons\";\nimport SkillModal from \"./SkillModal\";\nimport CustomLevelButton from \"../../../../core/CustomLevelButton\";\n\nclass SkillView extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editMode: false,\n      key: 0 // showCollapse: false\n\n    };\n\n    this.handleCloseEdit = () => {\n      let key = this.state.key;\n      this.setState({\n        editMode: false,\n        key: ++key\n      });\n    };\n\n    this.handleShowEdit = () => {\n      let key = this.state.key;\n      this.setState({\n        editMode: true,\n        key: ++key\n      });\n    };\n\n    this.handleUpdateClick = () => {\n      this.setState({\n        editMode: true\n      });\n    };\n\n    this.handleLevelClick = () => {\n      return;\n    };\n  }\n\n  render() {\n    let _this$props$skillObj = this.props.skillObj,\n        skillName = _this$props$skillObj[\"my0:skillName\"],\n        skillLevel = _this$props$skillObj[\"my0:skillLevel\"];\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: {\n        justifyContent: \"flex-start\",\n        alignItems: \"flex-start\",\n        marginLeft: \"0px\"\n      },\n      className: \"skill-cell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 8,\n      style: {\n        paddingLeft: \"0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, skillName, \" \", React.createElement(CustomLevelButton, {\n      handleClick: this.handleLevelClick,\n      filledNumber: skillLevel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faEdit,\n      onClick: () => this.handleUpdateClick(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(FontAwesomeIcon, {\n      icon: faTrash,\n      onClick: () => this.props.removeOtherSkill(this.props.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }))), React.createElement(SkillModal, {\n      show: this.state.editMode,\n      id: this.props.id,\n      isUpdate: true,\n      onHide: this.handleCloseEdit,\n      skillObj: this.props.skillObj,\n      key: this.state.key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default connect(null, {\n  removeOtherSkill\n})(SkillView);","map":{"version":3,"sources":["/home/eelezi/thesis/rdf2resume/src/components/Dashboard/Forms/Modals/FormSkill/SkillView.jsx"],"names":["React","Component","Row","Col","FontAwesomeIcon","removeOtherSkill","connect","faEdit","faTrash","faCaretDown","faCaretUp","SkillModal","CustomLevelButton","SkillView","state","editMode","key","handleCloseEdit","setState","handleShowEdit","handleUpdateClick","handleLevelClick","render","props","skillObj","skillName","skillLevel","justifyContent","alignItems","marginLeft","paddingLeft","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { removeOtherSkill } from \"../../../../../actions\";\nimport { connect } from \"react-redux\";\nimport { faEdit, faTrash, faCaretDown, faCaretUp } from \"@fortawesome/free-solid-svg-icons\";\nimport SkillModal from \"./SkillModal\";\nimport CustomLevelButton from \"../../../../core/CustomLevelButton\";\n\nclass SkillView extends Component {\n  state = {\n    editMode: false,\n    key: 0,\n    // showCollapse: false\n  };\n\n  // handleCollapseToggle = (e) => {\n  //   this.setState({ showCollapse: !this.state.showCollapse })\n  // }\n\n  handleCloseEdit = () => {\n    let key = this.state.key;\n    this.setState({ editMode: false, key: ++key });\n  };\n\n  handleShowEdit = () => {\n    let key = this.state.key;\n    this.setState({ editMode: true, key: ++key });\n  };\n\n  handleUpdateClick = () => {\n    this.setState({\n      editMode: true\n    });\n  };\n\n  handleLevelClick = () => {\n    return;\n  };\n\n  render() {\n    let {\n      \"my0:skillName\": skillName,\n      // \"my0:skillDescription\": skillDescription,\n      //\"my0:skillHasCertificate\": skillHasCertificate,\n      \"my0:skillLevel\": skillLevel\n    } = this.props.skillObj;\n\n    return (\n      <React.Fragment>\n        <Row\n          style={{\n            justifyContent: \"flex-start\",\n            alignItems: \"flex-start\",\n            marginLeft: \"0px\"\n          }}\n          className=\"skill-cell\"\n        >\n          <Col md={8} style={{ paddingLeft: \"0\" }}>\n            {skillName}{\" \"}\n            <CustomLevelButton\n              handleClick={this.handleLevelClick}\n              filledNumber={skillLevel}\n            />\n          </Col>\n          <Col md={4}>\n            {/* {this.state.showCollapse ? <FontAwesomeIcon\n              icon={faCaretUp}\n              onClick={() => this.handleCollapseToggle(this.props.id)}\n            /> :\n              <FontAwesomeIcon\n                icon={faCaretDown}\n                onClick={() => this.handleCollapseToggle(this.props.id)}\n              />} */}\n            <FontAwesomeIcon\n              icon={faEdit}\n              onClick={() => this.handleUpdateClick()}\n            />\n            <FontAwesomeIcon\n              icon={faTrash}\n              onClick={() => this.props.removeOtherSkill(this.props.id)}\n            />\n\n          </Col>\n        </Row>\n        {/* {this.state.showCollapse ? <Row\n          style={{\n            justifyContent: \"flex-start\",\n            alignItems: \"flex-start\",\n            marginLeft: \"0px\"\n          }}\n        >\n          <p\n            style={{\n              width: \"80%\"\n            }}\n\n            className=\"content\"\n          >\n            {skillDescription}\n          </p>\n        </Row> : ''} */}\n\n        <SkillModal\n          show={this.state.editMode}\n          id={this.props.id}\n          isUpdate={true}\n          onHide={this.handleCloseEdit}\n          skillObj={this.props.skillObj}\n          key={this.state.key}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { removeOtherSkill }\n)(SkillView);\n"]},"metadata":{},"sourceType":"module"}