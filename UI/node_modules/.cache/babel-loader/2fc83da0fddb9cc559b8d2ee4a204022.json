{"ast":null,"code":"import _objectSpread from \"/home/eelezi/thesis/rdf2resume/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/eelezi/thesis/rdf2resume/src/components/Dashboard/Forms/Modals/FormWorkHistory/WorkHistoryModal.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Modal, Row, Col, Button } from \"react-bootstrap\";\nimport { Combobox } from \"react-widgets\";\nimport Swal from \"sweetalert2\";\nimport CustomTextarea from \"../../../../core/CustomTextarea\";\nimport CustomInput from \"../../../../core/CustomInput\";\nimport CustomCheckbox from \"../../../../core/CustomCheckbox\";\nimport { createWorkHistory, updateWorkHistory } from \"../../../../../actions\";\nimport { fetchCVJobModes, fetchCVCareerLevels, fetchCountries, fetchCompanySizes, fetchMainPropertiess, fetchAllIndustryTypess } from \"../../../../../actions/utilityActions\";\nimport { retrieveCountryValues, retrieveMainProperties, retrieveBaseProperties } from \"../../../../../utilities/utilityQueries\";\nimport { cancelLabel, resetLabel, saveLabel, updateLabel, startDate, endDate, workAddTitle, workUpdateTitle } from \"../../../../../translations/translations\";\n\nclass WorkHistoryModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      workHistory: {\n        \"@type\": \"my0:WorkHistory\",\n        \"my0:startDate\": \"\",\n        \"my0:endDate\": \"\",\n        \"my0:jobTitle\": [{\n          \"@value\": \"\",\n          \"@language\": \"en\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"it\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"fr\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"de\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"sq\"\n        }],\n        \"my0:jobDescription\": [{\n          \"@value\": \"\",\n          \"@language\": \"en\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"it\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"fr\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"de\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"sq\"\n        }],\n        \"my0:careerLevel\": \"\",\n        \"my0:jobMode\": \"\",\n        \"my0:isCurrent\": false,\n        \"my0:employedIn\": {\n          \"@type\": \"my0:Company\",\n          \"my0:orgName\": \"\",\n          \"my0:orgAddress\": {\n            \"@type\": \"Address\",\n            \"my0:city\": [{\n              \"@value\": \"\",\n              \"@language\": \"en\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"it\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"fr\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"de\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"sq\"\n            }],\n            \"my0:country\": \"\",\n            \"my0:street\": [{\n              \"@value\": \"\",\n              \"@language\": \"en\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"it\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"fr\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"de\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"sq\"\n            }],\n            \"my0:postalCode\": \"\"\n          },\n          \"my0:orgDescription\": [{\n            \"@value\": \"\",\n            \"@language\": \"en\"\n          }, {\n            \"@value\": \"\",\n            \"@language\": \"it\"\n          }, {\n            \"@value\": \"\",\n            \"@language\": \"fr\"\n          }, {\n            \"@value\": \"\",\n            \"@language\": \"de\"\n          }, {\n            \"@value\": \"\",\n            \"@language\": \"sq\"\n          }],\n          \"my0:orgPhoneNumber\": \"\",\n          \"my0:orgWebsite\": \"\",\n          \"my0:orgField\": \"\"\n        }\n      }\n    };\n\n    this.setInitialValues = () => {\n      if (this.props.id !== null && this.props.isUpdate === true) {\n        let inputRef = this.props.initialValues;\n\n        let workHistory = _objectSpread({}, this.state.workHistories);\n\n        workHistory[\"@type\"] = \"my0:WorkHistory\";\n        workHistory[\"my0:startDate\"] = inputRef[\"my0:startDate\"];\n        workHistory[\"my0:endDate\"] = inputRef[\"my0:endDate\"];\n        workHistory[\"my0:jobTitle\"] = inputRef[\"my0:jobTitle\"];\n        workHistory[\"my0:jobDescription\"] = inputRef[\"my0:jobDescription\"];\n        workHistory[\"my0:jobMode\"] = inputRef[\"my0:jobMode\"];\n        workHistory[\"my0:careerLevel\"] = inputRef[\"my0:careerLevel\"];\n        workHistory[\"my0:isCurrent\"] = inputRef[\"my0:isCurrent\"];\n        workHistory[\"my0:employedIn\"] = inputRef[\"my0:employedIn\"];\n        this.setState({\n          workHistory\n        });\n      }\n    };\n\n    this.clearForm = () => {\n      if (!this.props.isUpdate) {\n        this.setState({\n          workHistory: {\n            \"@type\": \"my0:WorkHistory\",\n            \"my0:startDate\": \"\",\n            \"my0:endDate\": \"\",\n            \"my0:jobTitle\": [{\n              \"@value\": \"\",\n              \"@language\": \"en\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"it\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"fr\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"de\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"sq\"\n            }],\n            \"my0:jobDescription\": [{\n              \"@value\": \"\",\n              \"@language\": \"en\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"it\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"fr\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"de\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"sq\"\n            }],\n            \"my0:careerLevel\": \"\",\n            \"my0:jobMode\": \"\",\n            \"my0:isCurrent\": false,\n            \"my0:employedIn\": {\n              \"@type\": \"my0:Company\",\n              \"my0:orgName\": \"\",\n              \"my0:orgAddress\": {\n                \"@type\": \"Address\",\n                \"my0:city\": [{\n                  \"@value\": \"\",\n                  \"@language\": \"en\"\n                }, {\n                  \"@value\": \"\",\n                  \"@language\": \"it\"\n                }, {\n                  \"@value\": \"\",\n                  \"@language\": \"fr\"\n                }, {\n                  \"@value\": \"\",\n                  \"@language\": \"de\"\n                }, {\n                  \"@value\": \"\",\n                  \"@language\": \"sq\"\n                }],\n                \"my0:country\": \"\",\n                \"my0:street\": [{\n                  \"@value\": \"\",\n                  \"@language\": \"en\"\n                }, {\n                  \"@value\": \"\",\n                  \"@language\": \"it\"\n                }, {\n                  \"@value\": \"\",\n                  \"@language\": \"fr\"\n                }, {\n                  \"@value\": \"\",\n                  \"@language\": \"de\"\n                }, {\n                  \"@value\": \"\",\n                  \"@language\": \"sq\"\n                }],\n                \"my0:postalCode\": \"\"\n              },\n              \"my0:orgDescription\": [{\n                \"@value\": \"\",\n                \"@language\": \"en\"\n              }, {\n                \"@value\": \"\",\n                \"@language\": \"it\"\n              }, {\n                \"@value\": \"\",\n                \"@language\": \"fr\"\n              }, {\n                \"@value\": \"\",\n                \"@language\": \"de\"\n              }, {\n                \"@value\": \"\",\n                \"@language\": \"sq\"\n              }],\n              \"my0:orgPhoneNumber\": \"\",\n              \"my0:orgWebsite\": \"\",\n              \"my0:companyIndustry\": \"\"\n            }\n          }\n        });\n      } else {\n        this.setInitialValues();\n      }\n    };\n\n    this.handleCheckboxChange = e => {\n      let workHistory = _objectSpread({}, this.state.workHistory);\n\n      workHistory[e.target.id] = e.target.checked;\n      this.setState({\n        workHistory\n      });\n    };\n\n    this.handleInputChange = (e, lang) => {\n      let obj = _objectSpread({}, this.state.workHistory);\n\n      let label = e.target.id;\n\n      if (label === \"my0:startDate\") {\n        if (e.target.value > new Date().toJSON().slice(0, 10).replace(/-/g, \"-\")) {\n          Swal.fire({\n            title: \"Warning!\",\n            text: startDate[this.props.language],\n            type: \"warning\",\n            confirmButtonColor: \"#4bb3cc\",\n            heightAuto: false,\n            confirmButtonText: \"Okay\"\n          });\n          return;\n        }\n      }\n\n      if (label === \"my0:endDate\") {\n        if (e.target.value < this.state.workHistory[\"my0:startDate\"]) {\n          Swal.fire({\n            title: \"Warning!\",\n            text: endDate[this.props.language],\n            type: \"warning\",\n            confirmButtonColor: \"#4bb3cc\",\n            heightAuto: false,\n            confirmButtonText: \"Okay\"\n          });\n          return;\n        }\n      }\n\n      if (e.target.name === \"org\") {\n        if (lang) {\n          obj[\"my0:employedIn\"][label] = this.replaceLanguageValue(obj[\"my0:employedIn\"][label], lang, e.target.value);\n        } else {\n          obj[\"my0:employedIn\"][label] = e.target.value;\n        }\n      } else if (e.target.name === \"address\") {\n        if (lang) {\n          obj[\"my0:employedIn\"][\"my0:orgAddress\"][label] = this.replaceLanguageValue(obj[\"my0:employedIn\"][\"my0:orgAddress\"][label], lang, e.target.value);\n        } else {\n          obj[\"my0:employedIn\"][\"my0:orgAddress\"][label] = e.target.value;\n        }\n      } else {\n        if (lang) {\n          obj[label] = this.replaceLanguageValue(obj[label], lang, e.target.value);\n        } else {\n          obj[label] = e.target.value;\n        }\n      }\n\n      this.setState({\n        workHistory: obj\n      });\n    };\n\n    this.handleSelectChange = (value, id, name) => {\n      let obj = _objectSpread({}, this.state.workHistory);\n\n      let label = id;\n\n      if (name === \"org\") {\n        obj[\"my0:employedIn\"][label] = value[\"@type\"];\n      } else if (name === \"address\") {\n        obj[\"my0:employedIn\"][\"my0:orgAddress\"][label] = value[\"@type\"];\n      } else {\n        obj[label] = value[\"@type\"];\n      }\n\n      this.setState({\n        workHistory: obj\n      });\n    };\n\n    this.handleSave = e => {\n      e.preventDefault();\n      this.props.createWorkHistory(this.state.workHistory);\n    };\n\n    this.handleUpdate = e => {\n      e.preventDefault();\n      this.props.updateWorkHistory({\n        object: this.state.workHistory,\n        index: this.props.id\n      });\n    };\n\n    this.handleRenderingSubmitButton = lang => {\n      let isDisabled = this.state.workHistory[\"my0:startDate\"] === \"\" || this.state.workHistory[\"my0:employedIn\"][\"my0:orgName\"] === \"\" || this.state.workHistory[\"my0:jobTitle\"] === \"\";\n\n      if (!this.props.isUpdate) {\n        return React.createElement(Button, {\n          disabled: isDisabled,\n          type: \"submit\",\n          variant: \"primary\",\n          onClick: this.handleSave,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 450\n          },\n          __self: this\n        }, saveLabel[lang]);\n      } else {\n        return React.createElement(Button, {\n          disabled: isDisabled,\n          type: \"submit\",\n          variant: \"primary\",\n          onClick: this.handleUpdate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 461\n          },\n          __self: this\n        }, updateLabel[lang]);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchCVCareerLevels();\n    this.props.fetchCVJobModes();\n    this.props.fetchCompanySizes();\n    this.props.fetchCountries();\n    this.props.fetchAllIndustryTypess();\n    this.props.fetchMainPropertiess(\"my0:WorkHistory\");\n    this.props.fetchMainPropertiess(\"my0:Organization\");\n    this.props.fetchMainPropertiess(\"my0:Address\");\n    this.setInitialValues();\n  }\n\n  replaceLanguageValue(data, language, value) {\n    let length = data.length;\n\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@language\"] === language) {\n        data[i][\"@value\"] = value;\n        break;\n      }\n    }\n\n    return data;\n  }\n\n  findTranslatedValue(data, lang) {\n    let length = data.length;\n\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@language\"] === lang) {\n        return data[i][\"@value\"];\n      }\n    }\n  }\n\n  findInArray(data, name) {\n    let length = data.length;\n\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@type\"].indexOf(name) >= 0) {\n        return i;\n      }\n    }\n  }\n\n  renderLabel(translated, name, lang) {\n    let index = this.findInArray(translated, name);\n\n    if (translated[index] === undefined || translated[index][lang] === undefined) {\n      return name;\n    } else {\n      return translated[index][lang];\n    }\n  }\n\n  render() {\n    let _this$state$workHisto = this.state.workHistory,\n        startDate = _this$state$workHisto[\"my0:startDate\"],\n        endDate = _this$state$workHisto[\"my0:endDate\"],\n        jobTitle = _this$state$workHisto[\"my0:jobTitle\"],\n        jobMode = _this$state$workHisto[\"my0:jobMode\"],\n        careerLevel = _this$state$workHisto[\"my0:careerLevel\"],\n        jobDescription = _this$state$workHisto[\"my0:jobDescription\"],\n        isCurrent = _this$state$workHisto[\"my0:isCurrent\"],\n        employedIn = _this$state$workHisto[\"my0:employedIn\"];\n    let orgName = employedIn[\"my0:orgName\"],\n        orgField = employedIn[\"my0:orgField\"],\n        orgWebsite = employedIn[\"my0:orgWebsite\"],\n        orgDescription = employedIn[\"my0:orgDescription\"],\n        orgPhoneNumber = employedIn[\"my0:orgPhoneNumber\"],\n        address = employedIn[\"my0:orgAddress\"];\n    let onHide = this.props.onHide;\n    let lang = this.props.language;\n    let _this$props = this.props,\n        translatedProps = _this$props.translatedProps,\n        translatedPropsOrg = _this$props.translatedPropsOrg,\n        translatedPropsAddr = _this$props.translatedPropsAddr;\n    return React.createElement(Modal, {\n      show: this.props.show,\n      onHide: this.props.onHide,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      className: \"reference-modal\",\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      id: \"contained-modal-title-vcenter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538\n      },\n      __self: this\n    }, this.props.isUpdate ? workUpdateTitle[lang] : workAddTitle[lang]), React.createElement(Col, {\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543\n      },\n      __self: this\n    }, React.createElement(CustomCheckbox, {\n      id: \"my0:isCurrent\",\n      type: \"checkbox\",\n      label: this.renderLabel(translatedProps, \"isCurrent\", lang),\n      checked: isCurrent,\n      handleChange: this.handleCheckboxChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544\n      },\n      __self: this\n    })), React.createElement(Col, {\n      md: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552\n      },\n      __self: this\n    })))), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: {\n        alignItems: \"flex-start\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 6,\n      style: {\n        paddingRight: \"25px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: {\n        justifyContent: \"flex-start\",\n        alignItems: \"flex-start\",\n        display: \"flex\",\n        marginLeft: \"0px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:startDate\",\n      name: \"workHistory\",\n      label: this.renderLabel(translatedProps, \"startDate\", lang) + \" *\",\n      type: \"date\",\n      value: startDate,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567\n      },\n      __self: this\n    })), React.createElement(Row, {\n      style: {\n        justifyContent: \"flex-start\",\n        alignItems: \"flex-start\",\n        display: \"flex\",\n        marginLeft: \"0px\",\n        marginTop: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:endDate\",\n      label: this.renderLabel(translatedProps, \"endDate\", lang),\n      name: \"workHistory\",\n      type: \"date\",\n      value: endDate,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588\n      },\n      __self: this\n    })), React.createElement(Row, {\n      style: {\n        justifyContent: \"flex-start\",\n        alignItems: \"flex-start\",\n        display: \"flex\",\n        marginLeft: \"0px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:orgName\",\n      name: \"org\",\n      label: this.renderLabel(translatedPropsOrg, \"orgName\", lang) + \" *\",\n      type: \"text\",\n      value: orgName,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:orgWebsite\",\n      name: \"org\",\n      label: this.renderLabel(translatedPropsOrg, \"orgWebsite\", lang),\n      type: \"text\",\n      value: orgWebsite,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 622\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        marginTop: \"5px\",\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 635\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:orgPhoneNumber\",\n      name: \"org\",\n      label: this.renderLabel(translatedPropsOrg, \"orgPhoneNumber\", lang),\n      value: orgPhoneNumber,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636\n      },\n      __self: this\n    })), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:postalCode\",\n      label: this.renderLabel(translatedPropsAddr, \"postalCode\", lang),\n      name: \"address\",\n      value: address[\"my0:postalCode\"],\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 651\n      },\n      __self: this\n    })), React.createElement(Col, {\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:city\",\n      name: \"address\",\n      label: this.renderLabel(translatedPropsAddr, \"city\", lang),\n      value: this.findTranslatedValue(address[\"my0:city\"], lang),\n      handleChange: e => this.handleInputChange(e, lang),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 664\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      style: {\n        width: \"100%\",\n        justifyContent: \"left\",\n        marginLeft: \"0px\",\n        marginBottom: \"8px\",\n        marginTop: \"5px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 677\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label-rw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686\n      },\n      __self: this\n    }, this.renderLabel(translatedPropsAddr, \"country\", lang)), React.createElement(Combobox, {\n      name: \"my0:country\",\n      placeholder: this.renderLabel(translatedPropsAddr, \"country\", lang),\n      data: this.props.countries,\n      textField: lang,\n      valueField: \"@type\",\n      value: address[\"my0:country\"],\n      caseSensitive: false,\n      minLength: 3,\n      filter: \"contains\",\n      onChange: value => this.handleSelectChange(value, \"my0:country\", \"address\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689\n      },\n      __self: this\n    })), React.createElement(Row, {\n      style: {\n        width: \"100%\",\n        justifyContent: \"left\",\n        marginLeft: \"0px\",\n        marginBottom: \"8px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 708\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label-rw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 716\n      },\n      __self: this\n    }, this.renderLabel(translatedPropsOrg, \"orgField\", lang)), React.createElement(Combobox, {\n      name: \"my0:orgField\",\n      placeholder: this.renderLabel(translatedPropsOrg, \"orgField\", lang),\n      data: this.props.industries,\n      value: orgField,\n      textField: lang,\n      valueField: \"@type\",\n      caseSensitive: false,\n      minLength: 3,\n      filter: \"contains\",\n      onChange: value => this.handleSelectChange(value, \"my0:orgField\", \"org\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 723\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 746\n      },\n      __self: this\n    }, React.createElement(CustomTextarea, {\n      id: \"my0:orgDescription\",\n      name: \"org\",\n      label: this.renderLabel(translatedPropsOrg, \"orgDescription\", lang),\n      value: this.findTranslatedValue(orgDescription, lang),\n      handleChange: e => this.handleInputChange(e, lang),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 747\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 761\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:jobTitle\",\n      name: \"workHistory\",\n      label: this.renderLabel(translatedProps, \"jobTitle\", lang) + \" *\",\n      type: \"text\",\n      value: this.findTranslatedValue(jobTitle, lang),\n      handleChange: e => this.handleInputChange(e, lang),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 762\n      },\n      __self: this\n    }), React.createElement(Row, {\n      style: {\n        width: \"100%\",\n        justifyContent: \"left\",\n        marginLeft: \"0px\",\n        marginBottom: \"8px\",\n        marginTop: \"5px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 772\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label-rw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 781\n      },\n      __self: this\n    }, this.renderLabel(translatedProps, \"jobMode\", lang)), React.createElement(Combobox, {\n      name: \"my0:jobMode\",\n      placeholder: this.renderLabel(translatedProps, \"jobMode\", lang),\n      data: this.props.jobmodes,\n      textField: lang,\n      valueField: \"@type\",\n      value: jobMode,\n      caseSensitive: false,\n      minLength: 3,\n      filter: \"contains\",\n      onChange: value => this.handleSelectChange(value, \"my0:jobMode\", \"workHistory\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 784\n      },\n      __self: this\n    })), React.createElement(Row, {\n      style: {\n        width: \"100%\",\n        justifyContent: \"left\",\n        marginLeft: \"0px\",\n        marginBottom: \"8px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 807\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label-rw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 815\n      },\n      __self: this\n    }, this.renderLabel(translatedProps, \"careerLevel\", lang)), React.createElement(Combobox, {\n      name: \"my0:careerLevel\",\n      placeholder: this.renderLabel(translatedProps, \"careerLevel\", lang),\n      data: this.props.careerlevels,\n      textField: lang,\n      valueField: \"@type\",\n      value: careerLevel,\n      caseSensitive: false,\n      minLength: 3,\n      filter: \"contains\",\n      onChange: value => this.handleSelectChange(value, \"my0:careerLevel\", \"workHistory\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 818\n      },\n      __self: this\n    })), React.createElement(CustomTextarea, {\n      id: \"my0:jobDescription\",\n      name: \"workHistory\",\n      label: this.renderLabel(translatedProps, \"jobDescription\", lang),\n      value: this.findTranslatedValue(jobDescription, lang),\n      handleChange: e => this.handleInputChange(e, lang),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 841\n      },\n      __self: this\n    })))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 855\n      },\n      __self: this\n    }, this.handleRenderingSubmitButton(lang), React.createElement(Button, {\n      className: \"btn-reset\",\n      onClick: this.clearForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 857\n      },\n      __self: this\n    }, resetLabel[lang]), React.createElement(Button, {\n      variant: \"danger\",\n      onClick: onHide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 860\n      },\n      __self: this\n    }, cancelLabel[lang]))));\n  }\n\n}\n\nconst mapstateToProps = (state, ownProps) => {\n  return {\n    language: state.utility.language,\n    industries: retrieveBaseProperties(state.utility.industries),\n    translatedPropsOrg: retrieveMainProperties(state.utility[\"my0:Organization\"]),\n    translatedPropsAddr: retrieveMainProperties(state.utility[\"my0:Address\"]),\n    translatedProps: retrieveMainProperties(state.utility[\"my0:WorkHistory\"]),\n    initialValues: state.cv[\"my0:hasWorkHistory\"][ownProps.id],\n    countries: retrieveCountryValues(state.utility.countryValues),\n    jobmodes: retrieveBaseProperties(state.utility.jobModeValues),\n    careerlevels: retrieveBaseProperties(state.utility.careerLevelValues),\n    companysizes: retrieveBaseProperties(state.utility.companySizeValues)\n  };\n};\n\nexport default connect(mapstateToProps, {\n  createWorkHistory,\n  updateWorkHistory,\n  fetchCVJobModes,\n  fetchCVCareerLevels,\n  fetchCountries,\n  fetchCompanySizes,\n  fetchAllIndustryTypess,\n  fetchMainPropertiess\n})(WorkHistoryModal);","map":{"version":3,"sources":["/home/eelezi/thesis/rdf2resume/src/components/Dashboard/Forms/Modals/FormWorkHistory/WorkHistoryModal.jsx"],"names":["React","Component","connect","Modal","Row","Col","Button","Combobox","Swal","CustomTextarea","CustomInput","CustomCheckbox","createWorkHistory","updateWorkHistory","fetchCVJobModes","fetchCVCareerLevels","fetchCountries","fetchCompanySizes","fetchMainPropertiess","fetchAllIndustryTypess","retrieveCountryValues","retrieveMainProperties","retrieveBaseProperties","cancelLabel","resetLabel","saveLabel","updateLabel","startDate","endDate","workAddTitle","workUpdateTitle","WorkHistoryModal","state","workHistory","setInitialValues","props","id","isUpdate","inputRef","initialValues","workHistories","setState","clearForm","handleCheckboxChange","e","target","checked","handleInputChange","lang","obj","label","value","Date","toJSON","slice","replace","fire","title","text","language","type","confirmButtonColor","heightAuto","confirmButtonText","name","replaceLanguageValue","handleSelectChange","handleSave","preventDefault","handleUpdate","object","index","handleRenderingSubmitButton","isDisabled","componentDidMount","data","length","i","findTranslatedValue","findInArray","indexOf","renderLabel","translated","undefined","render","jobTitle","jobMode","careerLevel","jobDescription","isCurrent","employedIn","orgName","orgField","orgWebsite","orgDescription","orgPhoneNumber","address","onHide","translatedProps","translatedPropsOrg","translatedPropsAddr","show","alignItems","paddingRight","justifyContent","display","marginLeft","marginTop","width","marginBottom","countries","industries","jobmodes","careerlevels","mapstateToProps","ownProps","utility","cv","countryValues","jobModeValues","careerLevelValues","companysizes","companySizeValues"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Modal, Row, Col, Button } from \"react-bootstrap\";\nimport { Combobox } from \"react-widgets\";\nimport Swal from \"sweetalert2\";\nimport CustomTextarea from \"../../../../core/CustomTextarea\";\nimport CustomInput from \"../../../../core/CustomInput\";\nimport CustomCheckbox from \"../../../../core/CustomCheckbox\";\nimport { createWorkHistory, updateWorkHistory } from \"../../../../../actions\";\nimport {\n  fetchCVJobModes,\n  fetchCVCareerLevels,\n  fetchCountries,\n  fetchCompanySizes,\n  fetchMainPropertiess,\n  fetchAllIndustryTypess\n} from \"../../../../../actions/utilityActions\";\nimport {\n  retrieveCountryValues,\n  retrieveMainProperties,\n  retrieveBaseProperties\n} from \"../../../../../utilities/utilityQueries\";\nimport {\n  cancelLabel,\n  resetLabel,\n  saveLabel,\n  updateLabel,\n  startDate,\n  endDate,\n  workAddTitle,\n  workUpdateTitle\n} from \"../../../../../translations/translations\";\n\nclass WorkHistoryModal extends Component {\n  state = {\n    workHistory: {\n      \"@type\": \"my0:WorkHistory\",\n      \"my0:startDate\": \"\",\n      \"my0:endDate\": \"\",\n      \"my0:jobTitle\": [{\n        \"@value\": \"\",\n        \"@language\": \"en\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"it\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"fr\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"de\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"sq\"\n      },\n      ],\n      \"my0:jobDescription\": [{\n        \"@value\": \"\",\n        \"@language\": \"en\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"it\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"fr\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"de\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"sq\"\n      },\n      ],\n      \"my0:careerLevel\": \"\",\n      \"my0:jobMode\": \"\",\n      \"my0:isCurrent\": false,\n      \"my0:employedIn\": {\n        \"@type\": \"my0:Company\",\n        \"my0:orgName\": \"\",\n        \"my0:orgAddress\": {\n          \"@type\": \"Address\",\n          \"my0:city\": [{\n            \"@value\": \"\",\n            \"@language\": \"en\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"it\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"fr\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"de\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"sq\"\n          },\n          ],\n          \"my0:country\": \"\",\n          \"my0:street\": [{\n            \"@value\": \"\",\n            \"@language\": \"en\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"it\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"fr\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"de\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"sq\"\n          },\n          ],\n          \"my0:postalCode\": \"\"\n        },\n        \"my0:orgDescription\": [{\n          \"@value\": \"\",\n          \"@language\": \"en\"\n        },\n        {\n          \"@value\": \"\",\n          \"@language\": \"it\"\n        },\n        {\n          \"@value\": \"\",\n          \"@language\": \"fr\"\n        },\n        {\n          \"@value\": \"\",\n          \"@language\": \"de\"\n        },\n        {\n          \"@value\": \"\",\n          \"@language\": \"sq\"\n        },\n        ],\n        \"my0:orgPhoneNumber\": \"\",\n        \"my0:orgWebsite\": \"\",\n        \"my0:orgField\": \"\"\n      }\n    }\n  };\n\n  componentDidMount() {\n    this.props.fetchCVCareerLevels();\n    this.props.fetchCVJobModes();\n    this.props.fetchCompanySizes();\n    this.props.fetchCountries();\n    this.props.fetchAllIndustryTypess();\n    this.props.fetchMainPropertiess(\"my0:WorkHistory\");\n    this.props.fetchMainPropertiess(\"my0:Organization\");\n    this.props.fetchMainPropertiess(\"my0:Address\");\n    this.setInitialValues();\n  }\n\n  setInitialValues = () => {\n    if (this.props.id !== null && this.props.isUpdate === true) {\n      let inputRef = this.props.initialValues;\n      let workHistory = { ...this.state.workHistories };\n      workHistory[\"@type\"] = \"my0:WorkHistory\";\n      workHistory[\"my0:startDate\"] = inputRef[\"my0:startDate\"];\n      workHistory[\"my0:endDate\"] = inputRef[\"my0:endDate\"];\n      workHistory[\"my0:jobTitle\"] = inputRef[\"my0:jobTitle\"];\n      workHistory[\"my0:jobDescription\"] = inputRef[\"my0:jobDescription\"];\n      workHistory[\"my0:jobMode\"] = inputRef[\"my0:jobMode\"];\n      workHistory[\"my0:careerLevel\"] = inputRef[\"my0:careerLevel\"];\n      workHistory[\"my0:isCurrent\"] = inputRef[\"my0:isCurrent\"];\n      workHistory[\"my0:employedIn\"] = inputRef[\"my0:employedIn\"];\n      this.setState({\n        workHistory\n      });\n    }\n  };\n\n  clearForm = () => {\n    if (!this.props.isUpdate) {\n      this.setState({\n        workHistory: {\n          \"@type\": \"my0:WorkHistory\",\n          \"my0:startDate\": \"\",\n          \"my0:endDate\": \"\",\n          \"my0:jobTitle\": [{\n            \"@value\": \"\",\n            \"@language\": \"en\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"it\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"fr\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"de\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"sq\"\n          },\n          ],\n          \"my0:jobDescription\": [{\n            \"@value\": \"\",\n            \"@language\": \"en\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"it\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"fr\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"de\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"sq\"\n          },\n          ],\n          \"my0:careerLevel\": \"\",\n          \"my0:jobMode\": \"\",\n          \"my0:isCurrent\": false,\n          \"my0:employedIn\": {\n            \"@type\": \"my0:Company\",\n            \"my0:orgName\": \"\",\n            \"my0:orgAddress\": {\n              \"@type\": \"Address\",\n              \"my0:city\": [{\n                \"@value\": \"\",\n                \"@language\": \"en\"\n              },\n              {\n                \"@value\": \"\",\n                \"@language\": \"it\"\n              },\n              {\n                \"@value\": \"\",\n                \"@language\": \"fr\"\n              },\n              {\n                \"@value\": \"\",\n                \"@language\": \"de\"\n              },\n              {\n                \"@value\": \"\",\n                \"@language\": \"sq\"\n              },\n              ],\n              \"my0:country\": \"\",\n              \"my0:street\": [{\n                \"@value\": \"\",\n                \"@language\": \"en\"\n              },\n              {\n                \"@value\": \"\",\n                \"@language\": \"it\"\n              },\n              {\n                \"@value\": \"\",\n                \"@language\": \"fr\"\n              },\n              {\n                \"@value\": \"\",\n                \"@language\": \"de\"\n              },\n              {\n                \"@value\": \"\",\n                \"@language\": \"sq\"\n              },\n              ],\n              \"my0:postalCode\": \"\"\n            },\n            \"my0:orgDescription\": [{\n              \"@value\": \"\",\n              \"@language\": \"en\"\n            },\n            {\n              \"@value\": \"\",\n              \"@language\": \"it\"\n            },\n            {\n              \"@value\": \"\",\n              \"@language\": \"fr\"\n            },\n            {\n              \"@value\": \"\",\n              \"@language\": \"de\"\n            },\n            {\n              \"@value\": \"\",\n              \"@language\": \"sq\"\n            },\n            ],\n            \"my0:orgPhoneNumber\": \"\",\n            \"my0:orgWebsite\": \"\",\n            \"my0:companyIndustry\": \"\"\n          }\n        }\n      });\n    } else {\n      this.setInitialValues();\n    }\n  };\n\n  handleCheckboxChange = e => {\n    let workHistory = { ...this.state.workHistory };\n    workHistory[e.target.id] = e.target.checked;\n    this.setState({\n      workHistory\n    });\n  };\n\n  replaceLanguageValue(data, language, value) {\n    let length = data.length;\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@language\"] === language) {\n        data[i][\"@value\"] = value;\n        break;\n      }\n    }\n    return data;\n  }\n\n  findTranslatedValue(data, lang) {\n    let length = data.length;\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@language\"] === lang) {\n        return data[i][\"@value\"];\n      }\n    }\n  }\n\n  handleInputChange = (e, lang) => {\n    let obj = { ...this.state.workHistory };\n    let label = e.target.id;\n    if (label === \"my0:startDate\") {\n      if (\n        e.target.value >\n        new Date()\n          .toJSON()\n          .slice(0, 10)\n          .replace(/-/g, \"-\")\n      ) {\n        Swal.fire({\n          title: \"Warning!\",\n          text: startDate[this.props.language],\n          type: \"warning\",\n          confirmButtonColor: \"#4bb3cc\",\n          heightAuto: false,\n          confirmButtonText: \"Okay\"\n        });\n        return;\n      }\n    }\n    if (label === \"my0:endDate\") {\n      if (e.target.value < this.state.workHistory[\"my0:startDate\"]) {\n        Swal.fire({\n          title: \"Warning!\",\n          text: endDate[this.props.language],\n          type: \"warning\",\n          confirmButtonColor: \"#4bb3cc\",\n          heightAuto: false,\n          confirmButtonText: \"Okay\"\n        });\n        return;\n      }\n    }\n    if (e.target.name === \"org\") {\n      if (lang) {\n        obj[\"my0:employedIn\"][label] = this.replaceLanguageValue(obj[\"my0:employedIn\"][label], lang, e.target.value);\n      } else {\n        obj[\"my0:employedIn\"][label] = e.target.value;\n      }\n    } else if (e.target.name === \"address\") {\n      if (lang) {\n        obj[\"my0:employedIn\"][\"my0:orgAddress\"][label] = this.replaceLanguageValue(obj[\"my0:employedIn\"][\"my0:orgAddress\"][label], lang, e.target.value);\n      } else {\n        obj[\"my0:employedIn\"][\"my0:orgAddress\"][label] = e.target.value;\n      }\n    } else {\n      if (lang) {\n        obj[label] = this.replaceLanguageValue(obj[label], lang, e.target.value);\n      } else {\n        obj[label] = e.target.value;\n      }\n    }\n    this.setState({\n      workHistory: obj\n    });\n  };\n\n  handleSelectChange = (value, id, name) => {\n    let obj = { ...this.state.workHistory };\n    let label = id;\n    if (name === \"org\") {\n      obj[\"my0:employedIn\"][label] = value[\"@type\"];\n    } else if (name === \"address\") {\n      obj[\"my0:employedIn\"][\"my0:orgAddress\"][label] = value[\"@type\"];\n    } else {\n      obj[label] = value[\"@type\"];\n    }\n    this.setState({\n      workHistory: obj\n    });\n  };\n\n  handleSave = e => {\n    e.preventDefault();\n    this.props.createWorkHistory(this.state.workHistory);\n  };\n\n  handleUpdate = e => {\n    e.preventDefault();\n    this.props.updateWorkHistory({\n      object: this.state.workHistory,\n      index: this.props.id\n    });\n  };\n\n  handleRenderingSubmitButton = lang => {\n    let isDisabled =\n      this.state.workHistory[\"my0:startDate\"] === \"\" ||\n      this.state.workHistory[\"my0:employedIn\"][\"my0:orgName\"] === \"\" ||\n      this.state.workHistory[\"my0:jobTitle\"] === \"\";\n    if (!this.props.isUpdate) {\n      return (\n        <Button\n          disabled={isDisabled}\n          type=\"submit\"\n          variant=\"primary\"\n          onClick={this.handleSave}\n        >\n          {saveLabel[lang]}\n        </Button>\n      );\n    } else {\n      return (\n        <Button\n          disabled={isDisabled}\n          type=\"submit\"\n          variant=\"primary\"\n          onClick={this.handleUpdate}\n        >\n          {updateLabel[lang]}\n        </Button>\n      );\n    }\n  };\n\n  findInArray(data, name) {\n    let length = data.length;\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@type\"].indexOf(name) >= 0) {\n        return i;\n      }\n    }\n  }\n\n  renderLabel(translated, name, lang) {\n    let index = this.findInArray(translated, name);\n    if (\n      translated[index] === undefined ||\n      translated[index][lang] === undefined\n    ) {\n      return name;\n    } else {\n      return translated[index][lang];\n    }\n  }\n\n  render() {\n    let {\n      \"my0:startDate\": startDate,\n      \"my0:endDate\": endDate,\n      \"my0:jobTitle\": jobTitle,\n      \"my0:jobMode\": jobMode,\n      \"my0:careerLevel\": careerLevel,\n      \"my0:jobDescription\": jobDescription,\n      \"my0:isCurrent\": isCurrent,\n      \"my0:employedIn\": employedIn\n    } = this.state.workHistory;\n\n    let {\n      \"my0:orgName\": orgName,\n      \"my0:orgField\": orgField,\n      \"my0:orgWebsite\": orgWebsite,\n      \"my0:orgDescription\": orgDescription,\n      \"my0:orgPhoneNumber\": orgPhoneNumber,\n      \"my0:orgAddress\": address\n    } = employedIn;\n\n    let { onHide } = this.props;\n\n    let lang = this.props.language;\n\n    let {\n      translatedProps,\n      translatedPropsOrg,\n      translatedPropsAddr\n    } = this.props;\n\n    return (\n      <Modal\n        show={this.props.show}\n        onHide={this.props.onHide}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        className=\"reference-modal\"\n        centered\n      >\n        <form>\n          <Modal.Header closeButton>\n            <Modal.Title id=\"contained-modal-title-vcenter\">\n              <Row>\n                <Col md={9}>\n                  {this.props.isUpdate\n                    ? workUpdateTitle[lang]\n                    : workAddTitle[lang]}\n                </Col>\n                <Col md={2}>\n                  <CustomCheckbox\n                    id=\"my0:isCurrent\"\n                    type=\"checkbox\"\n                    label={this.renderLabel(translatedProps, \"isCurrent\", lang)}\n                    checked={isCurrent}\n                    handleChange={this.handleCheckboxChange}\n                  />\n                </Col>\n                <Col md={1} />\n              </Row>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Row style={{ alignItems: \"flex-start\" }}>\n              <Col md={6} style={{ paddingRight: \"25px\" }}>\n                <Row\n                  style={{\n                    justifyContent: \"flex-start\",\n                    alignItems: \"flex-start\",\n                    display: \"flex\",\n                    marginLeft: \"0px\"\n                  }}\n                >\n                  <CustomInput\n                    id=\"my0:startDate\"\n                    name=\"workHistory\"\n                    label={\n                      this.renderLabel(translatedProps, \"startDate\", lang) +\n                      \" *\"\n                    }\n                    type=\"date\"\n                    value={startDate}\n                    handleChange={this.handleInputChange}\n                  />\n                </Row>\n                <Row\n                  style={{\n                    justifyContent: \"flex-start\",\n                    alignItems: \"flex-start\",\n                    display: \"flex\",\n                    marginLeft: \"0px\",\n                    marginTop: \"10px\"\n                  }}\n                >\n                  <CustomInput\n                    id=\"my0:endDate\"\n                    label={this.renderLabel(translatedProps, \"endDate\", lang)}\n                    name=\"workHistory\"\n                    type=\"date\"\n                    value={endDate}\n                    handleChange={this.handleInputChange}\n                  />\n                </Row>\n                <Row\n                  style={{\n                    justifyContent: \"flex-start\",\n                    alignItems: \"flex-start\",\n                    display: \"flex\",\n                    marginLeft: \"0px\"\n                  }}\n                >\n                  <div style={{ width: \"100%\" }}>\n                    <CustomInput\n                      id=\"my0:orgName\"\n                      name=\"org\"\n                      label={\n                        this.renderLabel(\n                          translatedPropsOrg,\n                          \"orgName\",\n                          lang\n                        ) + \" *\"\n                      }\n                      type=\"text\"\n                      value={orgName}\n                      handleChange={this.handleInputChange}\n                    />\n                  </div>\n                  <div style={{ width: \"100%\" }}>\n                    <CustomInput\n                      id=\"my0:orgWebsite\"\n                      name=\"org\"\n                      label={this.renderLabel(\n                        translatedPropsOrg,\n                        \"orgWebsite\",\n                        lang\n                      )}\n                      type=\"text\"\n                      value={orgWebsite}\n                      handleChange={this.handleInputChange}\n                    />\n                  </div>\n                  <div style={{ marginTop: \"5px\", width: \"100%\" }}>\n                    <CustomInput\n                      id=\"my0:orgPhoneNumber\"\n                      name=\"org\"\n                      label={this.renderLabel(\n                        translatedPropsOrg,\n                        \"orgPhoneNumber\",\n                        lang\n                      )}\n                      value={orgPhoneNumber}\n                      handleChange={this.handleInputChange}\n                    />\n                  </div>\n\n                  <Row>\n                    <Col sm={6}>\n                      <CustomInput\n                        id=\"my0:postalCode\"\n                        label={this.renderLabel(\n                          translatedPropsAddr,\n                          \"postalCode\",\n                          lang\n                        )}\n                        name=\"address\"\n                        value={address[\"my0:postalCode\"]}\n                        handleChange={this.handleInputChange}\n                      />\n                    </Col>\n                    <Col sm={6}>\n                      <CustomInput\n                        id=\"my0:city\"\n                        name=\"address\"\n                        label={this.renderLabel(\n                          translatedPropsAddr,\n                          \"city\",\n                          lang\n                        )}\n                        value={this.findTranslatedValue(address[\"my0:city\"], lang)}\n                        handleChange={(e) => this.handleInputChange(e, lang)}\n                      />\n                    </Col>\n                  </Row>\n                  <Row\n                    style={{\n                      width: \"100%\",\n                      justifyContent: \"left\",\n                      marginLeft: \"0px\",\n                      marginBottom: \"8px\",\n                      marginTop: \"5px\"\n                    }}\n                  >\n                    <label className=\"label-rw\">\n                      {this.renderLabel(translatedPropsAddr, \"country\", lang)}\n                    </label>\n                    <Combobox\n                      name=\"my0:country\"\n                      placeholder={this.renderLabel(\n                        translatedPropsAddr,\n                        \"country\",\n                        lang\n                      )}\n                      data={this.props.countries}\n                      textField={lang}\n                      valueField=\"@type\"\n                      value={address[\"my0:country\"]}\n                      caseSensitive={false}\n                      minLength={3}\n                      filter=\"contains\"\n                      onChange={value =>\n                        this.handleSelectChange(value, \"my0:country\", \"address\")\n                      }\n                    />\n                  </Row>\n                  <Row\n                    style={{\n                      width: \"100%\",\n                      justifyContent: \"left\",\n                      marginLeft: \"0px\",\n                      marginBottom: \"8px\"\n                    }}\n                  >\n                    <label className=\"label-rw\">\n                      {this.renderLabel(\n                        translatedPropsOrg,\n                        \"orgField\",\n                        lang\n                      )}\n                    </label>\n                    <Combobox\n                      name=\"my0:orgField\"\n                      placeholder={this.renderLabel(\n                        translatedPropsOrg,\n                        \"orgField\",\n                        lang\n                      )}\n                      data={this.props.industries}\n                      value={orgField}\n                      textField={lang}\n                      valueField=\"@type\"\n                      caseSensitive={false}\n                      minLength={3}\n                      filter=\"contains\"\n                      onChange={value =>\n                        this.handleSelectChange(\n                          value,\n                          \"my0:orgField\",\n                          \"org\"\n                        )\n                      }\n                    />\n                  </Row>\n                  <div style={{ width: \"100%\" }}>\n                    <CustomTextarea\n                      id=\"my0:orgDescription\"\n                      name=\"org\"\n                      label={this.renderLabel(\n                        translatedPropsOrg,\n                        \"orgDescription\",\n                        lang\n                      )}\n                      value={this.findTranslatedValue(orgDescription, lang)}\n                      handleChange={(e) => this.handleInputChange(e, lang)}\n                    />\n                  </div>\n                </Row>\n              </Col>\n              <Col md={6}>\n                <CustomInput\n                  id=\"my0:jobTitle\"\n                  name=\"workHistory\"\n                  label={\n                    this.renderLabel(translatedProps, \"jobTitle\", lang) + \" *\"\n                  }\n                  type=\"text\"\n                  value={this.findTranslatedValue(jobTitle, lang)}\n                  handleChange={(e) => this.handleInputChange(e, lang)}\n                />\n                <Row\n                  style={{\n                    width: \"100%\",\n                    justifyContent: \"left\",\n                    marginLeft: \"0px\",\n                    marginBottom: \"8px\",\n                    marginTop: \"5px\"\n                  }}\n                >\n                  <label className=\"label-rw\">\n                    {this.renderLabel(translatedProps, \"jobMode\", lang)}\n                  </label>\n                  <Combobox\n                    name=\"my0:jobMode\"\n                    placeholder={this.renderLabel(\n                      translatedProps,\n                      \"jobMode\",\n                      lang\n                    )}\n                    data={this.props.jobmodes}\n                    textField={lang}\n                    valueField=\"@type\"\n                    value={jobMode}\n                    caseSensitive={false}\n                    minLength={3}\n                    filter=\"contains\"\n                    onChange={value =>\n                      this.handleSelectChange(\n                        value,\n                        \"my0:jobMode\",\n                        \"workHistory\"\n                      )\n                    }\n                  />\n                </Row>\n                <Row\n                  style={{\n                    width: \"100%\",\n                    justifyContent: \"left\",\n                    marginLeft: \"0px\",\n                    marginBottom: \"8px\"\n                  }}\n                >\n                  <label className=\"label-rw\">\n                    {this.renderLabel(translatedProps, \"careerLevel\", lang)}\n                  </label>\n                  <Combobox\n                    name=\"my0:careerLevel\"\n                    placeholder={this.renderLabel(\n                      translatedProps,\n                      \"careerLevel\",\n                      lang\n                    )}\n                    data={this.props.careerlevels}\n                    textField={lang}\n                    valueField=\"@type\"\n                    value={careerLevel}\n                    caseSensitive={false}\n                    minLength={3}\n                    filter=\"contains\"\n                    onChange={value =>\n                      this.handleSelectChange(\n                        value,\n                        \"my0:careerLevel\",\n                        \"workHistory\"\n                      )\n                    }\n                  />\n                </Row>\n                <CustomTextarea\n                  id=\"my0:jobDescription\"\n                  name=\"workHistory\"\n                  label={this.renderLabel(\n                    translatedProps,\n                    \"jobDescription\",\n                    lang\n                  )}\n                  value={this.findTranslatedValue(jobDescription, lang)}\n                  handleChange={(e) => this.handleInputChange(e, lang)}\n                />\n              </Col>\n            </Row>\n          </Modal.Body>\n          <Modal.Footer>\n            {this.handleRenderingSubmitButton(lang)}\n            <Button className=\"btn-reset\" onClick={this.clearForm}>\n              {resetLabel[lang]}\n            </Button>\n            <Button variant=\"danger\" onClick={onHide}>\n              {cancelLabel[lang]}\n            </Button>\n          </Modal.Footer>\n        </form>\n      </Modal>\n    );\n  }\n}\n\nconst mapstateToProps = (state, ownProps) => {\n  return {\n    language: state.utility.language,\n    industries: retrieveBaseProperties(state.utility.industries),\n    translatedPropsOrg: retrieveMainProperties(\n      state.utility[\"my0:Organization\"]\n    ),\n    translatedPropsAddr: retrieveMainProperties(state.utility[\"my0:Address\"]),\n    translatedProps: retrieveMainProperties(state.utility[\"my0:WorkHistory\"]),\n    initialValues: state.cv[\"my0:hasWorkHistory\"][ownProps.id],\n    countries: retrieveCountryValues(state.utility.countryValues),\n    jobmodes: retrieveBaseProperties(state.utility.jobModeValues),\n    careerlevels: retrieveBaseProperties(state.utility.careerLevelValues),\n    companysizes: retrieveBaseProperties(state.utility.companySizeValues)\n  };\n};\n\nexport default connect(\n  mapstateToProps,\n  {\n    createWorkHistory,\n    updateWorkHistory,\n    fetchCVJobModes,\n    fetchCVCareerLevels,\n    fetchCountries,\n    fetchCompanySizes,\n    fetchAllIndustryTypess,\n    fetchMainPropertiess\n  }\n)(WorkHistoryModal);\n"]},"metadata":{},"sourceType":"module"}