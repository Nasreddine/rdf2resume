{"ast":null,"code":"import _objectSpread from \"/home/eelezi/thesis/rdf2resume/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/eelezi/thesis/rdf2resume/src/components/Dashboard/Forms/Modals/FormPatent/PatentModal.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Modal, Row, Col, Button } from \"react-bootstrap\";\nimport CustomTextarea from \"../../../../core/CustomTextarea\";\nimport CustomRadioGroup from \"../../../../core/CustomRadioGroup\";\nimport CustomInput from \"../../../../core/CustomInput\";\nimport { createPatent, updatePatent } from \"../../../../../actions\";\nimport { fetchMainPropertiess, fetchAllPatentStatusess } from \"../../../../../actions/utilityActions\";\nimport { retrieveMainProperties, retrieveBaseProperties } from \"../../../../../utilities/utilityQueries\";\nimport { cancelLabel, resetLabel, saveLabel, updateLabel, patentAddTitle, patentUpdateTitle } from \"../../../../../translations/translations\";\n\nclass PatentModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      patent: {\n        \"@type\": \"my0:Patent\",\n        \"my0:patentTitle\": [{\n          \"@value\": \"\",\n          \"@language\": \"en\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"it\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"fr\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"de\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"sq\"\n        }],\n        \"my0:patentOffice\": [{\n          \"@value\": \"\",\n          \"@language\": \"en\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"it\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"fr\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"de\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"sq\"\n        }],\n        \"my0:patentNumber\": \"\",\n        \"my0:patentInventor\": \"\",\n        \"my0:patentURL\": \"\",\n        \"my0:patentIssuedDate\": \"\",\n        \"my0:patentStatus\": \"\",\n        \"my0:patentDescription\": [{\n          \"@value\": \"\",\n          \"@language\": \"en\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"it\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"fr\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"de\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"sq\"\n        }]\n      }\n    };\n\n    this.setInitialValues = () => {\n      if (this.props.id !== null && this.props.isUpdate === true) {\n        let inputRef = this.props.initialValues;\n\n        let patent = _objectSpread({}, this.state.patent);\n\n        patent[\"my0:patentTitle\"] = inputRef[\"my0:patentTitle\"];\n        patent[\"my0:patentOffice\"] = inputRef[\"my0:patentOffice\"];\n        patent[\"my0:patentNumber\"] = inputRef[\"my0:patentNumber\"];\n        patent[\"my0:patentInventor\"] = inputRef[\"my0:patentInventor\"];\n        patent[\"my0:patentURL\"] = inputRef[\"my0:patentURL\"];\n        patent[\"my0:patentIssuedDate\"] = inputRef[\"my0:patentIssuedDate\"];\n        patent[\"my0:patentStatus\"] = inputRef[\"my0:patentStatus\"];\n        patent[\"my0:patentDescription\"] = inputRef[\"my0:patentDescription\"];\n        this.setState({\n          patent\n        });\n      }\n    };\n\n    this.clearForm = () => {\n      if (!this.props.isUpdate) {\n        this.setState({\n          patent: {\n            \"@type\": \"my0:Patent\",\n            \"my0:patentTitle\": [{\n              \"@value\": \"\",\n              \"@language\": \"en\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"it\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"fr\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"de\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"sq\"\n            }],\n            \"my0:patentOffice\": [{\n              \"@value\": \"\",\n              \"@language\": \"en\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"it\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"fr\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"de\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"sq\"\n            }],\n            \"my0:patentNumber\": \"\",\n            \"my0:patentInventor\": \"\",\n            \"my0:patentURL\": \"\",\n            \"my0:patentIssuedDate\": \"\",\n            \"my0:patentStatus\": \"\",\n            \"my0:patentDescription\": [{\n              \"@value\": \"\",\n              \"@language\": \"en\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"it\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"fr\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"de\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"sq\"\n            }]\n          }\n        });\n      } else {\n        this.setInitialValues();\n      }\n    };\n\n    this.handleInputChange = (e, lang) => {\n      let obj = _objectSpread({}, this.state.patent);\n\n      let label = e.target.id;\n\n      if (lang) {\n        obj[label] = this.replaceLanguageValue(obj[label], lang, e.target.value);\n      } else {\n        obj[label] = e.target.value;\n      }\n\n      this.setState({\n        patent: obj\n      });\n    };\n\n    this.handleSave = () => {\n      this.props.createPatent(this.state.patent);\n    };\n\n    this.handleUpdate = () => {\n      this.props.updatePatent({\n        object: this.state.patent,\n        index: this.props.id\n      });\n    };\n\n    this.handleRenderingSubmitButton = lang => {\n      let isDisabled = this.state.patent[\"my0:patentTitle\"] === \"\" || this.state.patent[\"my0:patentOffice\"] === \"\" || this.state.patent[\"my0:patentNumber\"] === \"\";\n\n      if (!this.props.isUpdate) {\n        return React.createElement(Button, {\n          disabled: isDisabled,\n          type: \"submit\",\n          variant: \"primary\",\n          onClick: this.handleSave,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278\n          },\n          __self: this\n        }, saveLabel[lang]);\n      } else {\n        return React.createElement(Button, {\n          disabled: isDisabled,\n          type: \"submit\",\n          variant: \"primary\",\n          onClick: this.handleUpdate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289\n          },\n          __self: this\n        }, updateLabel[lang]);\n      }\n    };\n\n    this.handleRadioChange = e => {\n      let obj = _objectSpread({}, this.state.patent);\n\n      let label = e.target.name;\n      console.log(label);\n      console.log(e.target.id);\n      obj[label] = e.target.id;\n      this.setState({\n        patent: obj\n      });\n    };\n  }\n\n  componentWillMount() {\n    this.props.fetchMainPropertiess(\"my0:Patent\");\n    this.props.fetchAllPatentStatusess();\n    this.setInitialValues();\n  }\n\n  replaceLanguageValue(data, language, value) {\n    let length = data.length;\n\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@language\"] === language) {\n        data[i][\"@value\"] = value;\n        break;\n      }\n    }\n\n    return data;\n  }\n\n  findTranslatedValue(data, lang) {\n    let length = data.length;\n\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@language\"] === lang) {\n        return data[i][\"@value\"];\n      }\n    }\n  }\n\n  findInArray(data, name) {\n    let length = data.length;\n\n    for (let i = 0; i < length; i++) {\n      let index = data[i][\"@type\"].indexOf(name);\n      let newlength = data[i][\"@type\"].length;\n\n      if (index >= 0 && index + name.length >= newlength) {\n        return i;\n      }\n    }\n  }\n\n  renderLabel(translated, name, lang) {\n    let index = this.findInArray(translated, name);\n\n    if (translated[index] === undefined || translated[index][lang] === undefined) {\n      return name;\n    } else {\n      return translated[index][lang];\n    }\n  }\n\n  render() {\n    let _this$state$patent = this.state.patent,\n        patentTitle = _this$state$patent[\"my0:patentTitle\"],\n        patentOffice = _this$state$patent[\"my0:patentOffice\"],\n        patentNumber = _this$state$patent[\"my0:patentNumber\"],\n        patentInventor = _this$state$patent[\"my0:patentInventor\"],\n        patentURL = _this$state$patent[\"my0:patentURL\"],\n        patentIssuedDate = _this$state$patent[\"my0:patentIssuedDate\"],\n        patentStatus = _this$state$patent[\"my0:patentStatus\"],\n        patentDescription = _this$state$patent[\"my0:patentDescription\"];\n    let onHide = this.props.onHide;\n    let lang = this.props.language;\n    let translatedProps = this.props.translatedProps;\n    return React.createElement(Modal, {\n      show: this.props.show,\n      onHide: this.props.onHide,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      className: \"reference-modal\",\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      id: \"contained-modal-title-vcenter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, this.props.isUpdate ? patentUpdateTitle[lang] : patentAddTitle[lang])))), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: {\n        alignItems: \"flex-start\",\n        margin: \"0 40px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: {\n        justifyContent: \"flex-start\",\n        alignItems: \"flex-start\",\n        display: \"flex\",\n        margin: \"0px\",\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 9,\n      style: {\n        paddingLeft: \"0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:patentTitle\",\n      name: \"patent\",\n      label: this.renderLabel(translatedProps, \"patentTitle\", lang) + \" *\",\n      type: \"text\",\n      value: this.findTranslatedValue(patentTitle, lang),\n      handleChange: e => this.handleInputChange(e, lang),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    })), React.createElement(Col, {\n      md: 3,\n      style: {\n        paddingRight: \"0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:patentIssuedDate\",\n      name: \"patent\",\n      label: this.renderLabel(translatedProps, \"patentIssuedDate\", lang),\n      type: \"date\",\n      value: patentIssuedDate,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      style: {\n        justifyContent: \"flex-start\",\n        alignItems: \"flex-start\",\n        display: \"flex\",\n        margin: \"0px\",\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 6,\n      style: {\n        paddingLeft: \"0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:patentOffice\",\n      name: \"patent\",\n      label: this.renderLabel(translatedProps, \"patentOffice\", lang) + \" *\",\n      type: \"text\",\n      value: this.findTranslatedValue(patentOffice, lang),\n      handleChange: e => this.handleInputChange(e, lang),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    })), React.createElement(Col, {\n      md: 6,\n      style: {\n        paddingRight: \"0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:patentNumber\",\n      name: \"patent\",\n      label: this.renderLabel(translatedProps, \"patentNumber\", lang) + \" *\",\n      type: \"text\",\n      value: patentNumber,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      style: {\n        justifyContent: \"flex-start\",\n        alignItems: \"flex-start\",\n        display: \"flex\",\n        margin: \"0px\",\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 9,\n      style: {\n        paddingLeft: \"0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:patentInventor\",\n      name: \"patent\",\n      label: this.renderLabel(translatedProps, \"patentInventor\", lang),\n      type: \"text\",\n      value: patentInventor,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }), React.createElement(CustomInput, {\n      id: \"my0:patentURL\",\n      name: \"patent\",\n      label: this.renderLabel(translatedProps, \"patentURL\", lang),\n      value: patentURL,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    })), React.createElement(Col, {\n      md: 3,\n      style: {\n        paddingRight: \"0\",\n        paddingTop: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, React.createElement(CustomRadioGroup, {\n      items: this.props.statuses,\n      lang: lang,\n      name: \"my0:patentStatus\",\n      value: patentStatus,\n      handleChange: this.handleRadioChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        marginTop: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465\n      },\n      __self: this\n    }, React.createElement(CustomTextarea, {\n      id: \"my0:patentDescription\",\n      name: \"patent\",\n      label: this.renderLabel(translatedProps, \"patentDescription\", lang),\n      value: this.findTranslatedValue(patentDescription, lang),\n      handleChange: e => this.handleInputChange(e, lang),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466\n      },\n      __self: this\n    })))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480\n      },\n      __self: this\n    }, this.handleRenderingSubmitButton(lang), React.createElement(Button, {\n      className: \"btn-reset\",\n      onClick: this.clearForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    }, resetLabel[lang]), React.createElement(Button, {\n      variant: \"danger\",\n      onClick: onHide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485\n      },\n      __self: this\n    }, cancelLabel[lang])));\n  }\n\n}\n\nconst mapstateToProps = (state, ownProps) => {\n  return {\n    initialValues: state.cv[\"my0:hasPatent\"][ownProps.id],\n    language: state.utility.language,\n    statuses: retrieveBaseProperties(state.utility.patents),\n    translatedProps: retrieveMainProperties(state.utility[\"my0:Patent\"])\n  };\n};\n\nexport default connect(mapstateToProps, {\n  createPatent,\n  updatePatent,\n  fetchMainPropertiess,\n  fetchAllPatentStatusess\n})(PatentModal);","map":{"version":3,"sources":["/home/eelezi/thesis/rdf2resume/src/components/Dashboard/Forms/Modals/FormPatent/PatentModal.jsx"],"names":["React","Component","connect","Modal","Row","Col","Button","CustomTextarea","CustomRadioGroup","CustomInput","createPatent","updatePatent","fetchMainPropertiess","fetchAllPatentStatusess","retrieveMainProperties","retrieveBaseProperties","cancelLabel","resetLabel","saveLabel","updateLabel","patentAddTitle","patentUpdateTitle","PatentModal","state","patent","setInitialValues","props","id","isUpdate","inputRef","initialValues","setState","clearForm","handleInputChange","e","lang","obj","label","target","replaceLanguageValue","value","handleSave","handleUpdate","object","index","handleRenderingSubmitButton","isDisabled","handleRadioChange","name","console","log","componentWillMount","data","language","length","i","findTranslatedValue","findInArray","indexOf","newlength","renderLabel","translated","undefined","render","patentTitle","patentOffice","patentNumber","patentInventor","patentURL","patentIssuedDate","patentStatus","patentDescription","onHide","translatedProps","show","alignItems","margin","justifyContent","display","width","paddingLeft","paddingRight","paddingTop","statuses","marginTop","mapstateToProps","ownProps","cv","utility","patents"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Modal, Row, Col, Button } from \"react-bootstrap\";\nimport CustomTextarea from \"../../../../core/CustomTextarea\";\nimport CustomRadioGroup from \"../../../../core/CustomRadioGroup\";\nimport CustomInput from \"../../../../core/CustomInput\";\nimport { createPatent, updatePatent } from \"../../../../../actions\";\nimport {\n  fetchMainPropertiess,\n  fetchAllPatentStatusess\n} from \"../../../../../actions/utilityActions\";\nimport {\n  retrieveMainProperties,\n  retrieveBaseProperties\n} from \"../../../../../utilities/utilityQueries\";\nimport {\n  cancelLabel,\n  resetLabel,\n  saveLabel,\n  updateLabel,\n  patentAddTitle,\n  patentUpdateTitle\n} from \"../../../../../translations/translations\";\n\nclass PatentModal extends Component {\n  state = {\n    patent: {\n      \"@type\": \"my0:Patent\",\n      \"my0:patentTitle\": [{\n        \"@value\": \"\",\n        \"@language\": \"en\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"it\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"fr\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"de\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"sq\"\n      },\n      ],\n      \"my0:patentOffice\": [{\n        \"@value\": \"\",\n        \"@language\": \"en\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"it\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"fr\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"de\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"sq\"\n      },\n      ],\n      \"my0:patentNumber\": \"\",\n      \"my0:patentInventor\": \"\",\n      \"my0:patentURL\": \"\",\n      \"my0:patentIssuedDate\": \"\",\n      \"my0:patentStatus\": \"\",\n      \"my0:patentDescription\": [{\n        \"@value\": \"\",\n        \"@language\": \"en\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"it\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"fr\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"de\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"sq\"\n      },\n      ]\n    }\n  };\n\n  componentWillMount() {\n    this.props.fetchMainPropertiess(\"my0:Patent\");\n    this.props.fetchAllPatentStatusess();\n    this.setInitialValues();\n  }\n\n  setInitialValues = () => {\n    if (this.props.id !== null && this.props.isUpdate === true) {\n      let inputRef = this.props.initialValues;\n      let patent = { ...this.state.patent };\n      patent[\"my0:patentTitle\"] = inputRef[\"my0:patentTitle\"];\n      patent[\"my0:patentOffice\"] = inputRef[\"my0:patentOffice\"];\n      patent[\"my0:patentNumber\"] = inputRef[\"my0:patentNumber\"];\n      patent[\"my0:patentInventor\"] = inputRef[\"my0:patentInventor\"];\n      patent[\"my0:patentURL\"] = inputRef[\"my0:patentURL\"];\n      patent[\"my0:patentIssuedDate\"] = inputRef[\"my0:patentIssuedDate\"];\n      patent[\"my0:patentStatus\"] = inputRef[\"my0:patentStatus\"];\n      patent[\"my0:patentDescription\"] = inputRef[\"my0:patentDescription\"];\n      this.setState({\n        patent\n      });\n    }\n  };\n\n  clearForm = () => {\n    if (!this.props.isUpdate) {\n      this.setState({\n        patent: {\n          \"@type\": \"my0:Patent\",\n          \"my0:patentTitle\": [{\n            \"@value\": \"\",\n            \"@language\": \"en\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"it\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"fr\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"de\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"sq\"\n          },\n          ],\n          \"my0:patentOffice\": [{\n            \"@value\": \"\",\n            \"@language\": \"en\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"it\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"fr\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"de\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"sq\"\n          },\n          ],\n          \"my0:patentNumber\": \"\",\n          \"my0:patentInventor\": \"\",\n          \"my0:patentURL\": \"\",\n          \"my0:patentIssuedDate\": \"\",\n          \"my0:patentStatus\": \"\",\n          \"my0:patentDescription\": [{\n            \"@value\": \"\",\n            \"@language\": \"en\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"it\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"fr\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"de\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"sq\"\n          },\n          ]\n        }\n      });\n    } else {\n      this.setInitialValues();\n    }\n  };\n\n  replaceLanguageValue(data, language, value) {\n    let length = data.length;\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@language\"] === language) {\n        data[i][\"@value\"] = value;\n        break;\n      }\n    }\n    return data;\n  }\n\n  findTranslatedValue(data, lang) {\n    let length = data.length;\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@language\"] === lang) {\n        return data[i][\"@value\"];\n      }\n    }\n  }\n\n  handleInputChange = (e, lang) => {\n    let obj = { ...this.state.patent };\n    let label = e.target.id;\n    if (lang) {\n      obj[label] = this.replaceLanguageValue(obj[label], lang, e.target.value);\n    } else {\n      obj[label] = e.target.value;\n    }\n    this.setState({\n      patent: obj\n    });\n  };\n\n  handleSave = () => {\n    this.props.createPatent(this.state.patent);\n  };\n\n  handleUpdate = () => {\n    this.props.updatePatent({\n      object: this.state.patent,\n      index: this.props.id\n    });\n  };\n\n  findInArray(data, name) {\n    let length = data.length;\n    for (let i = 0; i < length; i++) {\n      let index = data[i][\"@type\"].indexOf(name);\n      let newlength = data[i][\"@type\"].length;\n      if (index >= 0 && index + name.length >= newlength) {\n        return i;\n      }\n    }\n  }\n\n  renderLabel(translated, name, lang) {\n    let index = this.findInArray(translated, name);\n    if (\n      translated[index] === undefined ||\n      translated[index][lang] === undefined\n    ) {\n      return name;\n    } else {\n      return translated[index][lang];\n    }\n  }\n\n  handleRenderingSubmitButton = lang => {\n    let isDisabled =\n      this.state.patent[\"my0:patentTitle\"] === \"\" ||\n      this.state.patent[\"my0:patentOffice\"] === \"\" ||\n      this.state.patent[\"my0:patentNumber\"] === \"\";\n    if (!this.props.isUpdate) {\n      return (\n        <Button\n          disabled={isDisabled}\n          type=\"submit\"\n          variant=\"primary\"\n          onClick={this.handleSave}\n        >\n          {saveLabel[lang]}\n        </Button>\n      );\n    } else {\n      return (\n        <Button\n          disabled={isDisabled}\n          type=\"submit\"\n          variant=\"primary\"\n          onClick={this.handleUpdate}\n        >\n          {updateLabel[lang]}\n        </Button>\n      );\n    }\n  };\n\n  handleRadioChange = e => {\n    let obj = { ...this.state.patent };\n    let label = e.target.name;\n    console.log(label);\n    console.log(e.target.id);\n    obj[label] = e.target.id;\n    this.setState({\n      patent: obj\n    });\n  };\n\n  render() {\n    let {\n      \"my0:patentTitle\": patentTitle,\n      \"my0:patentOffice\": patentOffice,\n      \"my0:patentNumber\": patentNumber,\n      \"my0:patentInventor\": patentInventor,\n      \"my0:patentURL\": patentURL,\n      \"my0:patentIssuedDate\": patentIssuedDate,\n      \"my0:patentStatus\": patentStatus,\n      \"my0:patentDescription\": patentDescription\n    } = this.state.patent;\n\n    let { onHide } = this.props;\n\n    let lang = this.props.language;\n\n    let { translatedProps } = this.props;\n\n    return (\n      <Modal\n        show={this.props.show}\n        onHide={this.props.onHide}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        className=\"reference-modal\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            <Row>\n              <Col md={12}>\n                {this.props.isUpdate\n                  ? patentUpdateTitle[lang]\n                  : patentAddTitle[lang]}\n              </Col>\n            </Row>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Row style={{ alignItems: \"flex-start\", margin: \"0 40px\" }}>\n            <Row\n              style={{\n                justifyContent: \"flex-start\",\n                alignItems: \"flex-start\",\n                display: \"flex\",\n                margin: \"0px\",\n                width: \"100%\"\n              }}\n            >\n              <Col md={9} style={{ paddingLeft: \"0\" }}>\n                <CustomInput\n                  id=\"my0:patentTitle\"\n                  name=\"patent\"\n                  label={\n                    this.renderLabel(translatedProps, \"patentTitle\", lang) +\n                    \" *\"\n                  }\n                  type=\"text\"\n                  value={this.findTranslatedValue(patentTitle, lang)}\n                  handleChange={(e) => this.handleInputChange(e, lang)}\n                />\n              </Col>\n              <Col md={3} style={{ paddingRight: \"0\" }}>\n                <CustomInput\n                  id=\"my0:patentIssuedDate\"\n                  name=\"patent\"\n                  label={this.renderLabel(\n                    translatedProps,\n                    \"patentIssuedDate\",\n                    lang\n                  )}\n                  type=\"date\"\n                  value={patentIssuedDate}\n                  handleChange={this.handleInputChange}\n                />\n              </Col>\n            </Row>\n            <Row\n              style={{\n                justifyContent: \"flex-start\",\n                alignItems: \"flex-start\",\n                display: \"flex\",\n                margin: \"0px\",\n                width: \"100%\"\n              }}\n            >\n              <Col md={6} style={{ paddingLeft: \"0\" }}>\n                <CustomInput\n                  id=\"my0:patentOffice\"\n                  name=\"patent\"\n                  label={\n                    this.renderLabel(translatedProps, \"patentOffice\", lang) +\n                    \" *\"\n                  }\n                  type=\"text\"\n                  value={this.findTranslatedValue(patentOffice, lang)}\n                  handleChange={(e) => this.handleInputChange(e, lang)}\n                />\n              </Col>\n              <Col md={6} style={{ paddingRight: \"0\" }}>\n                <CustomInput\n                  id=\"my0:patentNumber\"\n                  name=\"patent\"\n                  label={\n                    this.renderLabel(translatedProps, \"patentNumber\", lang) +\n                    \" *\"\n                  }\n                  type=\"text\"\n                  value={patentNumber}\n                  handleChange={this.handleInputChange}\n                />\n              </Col>\n            </Row>\n            <Row\n              style={{\n                justifyContent: \"flex-start\",\n                alignItems: \"flex-start\",\n                display: \"flex\",\n                margin: \"0px\",\n                width: \"100%\"\n              }}\n            >\n              <Col md={9} style={{ paddingLeft: \"0\" }}>\n                <CustomInput\n                  id=\"my0:patentInventor\"\n                  name=\"patent\"\n                  label={this.renderLabel(\n                    translatedProps,\n                    \"patentInventor\",\n                    lang\n                  )}\n                  type=\"text\"\n                  value={patentInventor}\n                  handleChange={this.handleInputChange}\n                />\n                <CustomInput\n                  id=\"my0:patentURL\"\n                  name=\"patent\"\n                  label={this.renderLabel(translatedProps, \"patentURL\", lang)}\n                  value={patentURL}\n                  handleChange={this.handleInputChange}\n                />\n              </Col>\n              <Col md={3} style={{ paddingRight: \"0\", paddingTop: \"20px\" }}>\n                <CustomRadioGroup\n                  items={this.props.statuses}\n                  lang={lang}\n                  name=\"my0:patentStatus\"\n                  value={patentStatus}\n                  handleChange={this.handleRadioChange}\n                />\n              </Col>\n            </Row>\n            <div style={{ width: \"100%\", marginTop: \"10px\" }}>\n              <CustomTextarea\n                id=\"my0:patentDescription\"\n                name=\"patent\"\n                label={this.renderLabel(\n                  translatedProps,\n                  \"patentDescription\",\n                  lang\n                )}\n                value={this.findTranslatedValue(patentDescription, lang)}\n                handleChange={(e) => this.handleInputChange(e, lang)}\n              />\n            </div>\n          </Row>\n        </Modal.Body>\n        <Modal.Footer>\n          {this.handleRenderingSubmitButton(lang)}\n          <Button className=\"btn-reset\" onClick={this.clearForm}>\n            {resetLabel[lang]}\n          </Button>\n          <Button variant=\"danger\" onClick={onHide}>\n            {cancelLabel[lang]}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapstateToProps = (state, ownProps) => {\n  return {\n    initialValues: state.cv[\"my0:hasPatent\"][ownProps.id],\n    language: state.utility.language,\n    statuses: retrieveBaseProperties(state.utility.patents),\n    translatedProps: retrieveMainProperties(state.utility[\"my0:Patent\"])\n  };\n};\n\nexport default connect(\n  mapstateToProps,\n  { createPatent, updatePatent, fetchMainPropertiess, fetchAllPatentStatusess }\n)(PatentModal);\n"]},"metadata":{},"sourceType":"module"}