{"ast":null,"code":"import _objectSpread from \"/home/eelezi/thesis/rdf2resume/UI/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/eelezi/thesis/rdf2resume/UI/src/components/Dashboard/Forms/Modals/FormReference/ReferenceModal.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport { Modal, Button, Row, Col } from \"react-bootstrap\";\nimport { Combobox } from \"react-widgets\";\nimport CustomTextarea from \"../../../../core/CustomTextarea\";\nimport CustomInput from \"../../../../core/CustomInput\";\nimport { createReference, updateReference, updateCVLastUpdate } from \"../../../../../actions\";\nimport { fetchCountries, fetchTitleProperties, fetchMainPropertiess, updateLanguage } from \"../../../../../actions/utilityActions\";\nimport { retrieveCountryValues, retrieveMainProperties, retrieveBaseProperties } from \"../../../../../utilities/utilityQueries\";\nimport { cancelLabel, resetLabel, saveLabel, updateLabel, referenceAddTitle, referenceUpdateTitle, successTitle } from \"../../../../../translations/translations\";\nimport { ListItem, languages } from \"../../../../core/LanguageToggle\";\n\nclass ReferenceModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      language: '',\n      reference: {\n        \"@type\": \"my0:Reference\",\n        \"my0:refRelationDescription\": [{\n          \"@value\": \"\",\n          \"@language\": \"en\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"it\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"fr\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"de\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"sq\"\n        }],\n        \"my0:referenceBy\": {\n          \"@type\": \"my0:Person\",\n          \"my0:title\": \"\",\n          \"my0:firstName\": \"\",\n          \"my0:lastName\": \"\",\n          \"my0:address\": {\n            \"@type\": \"my0:Address\",\n            \"my0:city\": [{\n              \"@value\": \"\",\n              \"@language\": \"en\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"it\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"fr\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"de\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"sq\"\n            }],\n            \"my0:country\": \"\",\n            \"my0:street\": [{\n              \"@value\": \"\",\n              \"@language\": \"en\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"it\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"fr\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"de\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"sq\"\n            }],\n            \"my0:postalCode\": \"\"\n          },\n          \"my0:phoneNumberWork\": \"\",\n          \"my0:email\": \"\"\n        }\n      }\n    };\n\n    this.setInitialValues = () => {\n      if (this.props.id !== null && this.props.isUpdate === true) {\n        let inputRef = this.props.initialValues;\n\n        let reference = _objectSpread({}, this.state.reference);\n\n        reference[\"my0:refRelationDescription\"] = inputRef[\"my0:refRelationDescription\"];\n        reference[\"my0:referenceBy\"] = inputRef[\"my0:referenceBy\"];\n        this.setState({\n          reference\n        });\n      }\n    };\n\n    this.clearForm = () => {\n      if (!this.props.isUpdate) {\n        this.setState({\n          reference: {\n            \"@type\": \"my0:Reference\",\n            \"my0:refRelationDescription\": [{\n              \"@value\": \"\",\n              \"@language\": \"en\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"it\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"fr\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"de\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"sq\"\n            }],\n            \"my0:referenceBy\": {\n              \"@type\": \"my0:Person\",\n              \"my0:title\": \"\",\n              \"my0:firstName\": \"\",\n              \"my0:lastName\": \"\",\n              \"my0:address\": {\n                \"@type\": \"my0:Address\",\n                \"my0:city\": [{\n                  \"@value\": \"\",\n                  \"@language\": \"en\"\n                }, {\n                  \"@value\": \"\",\n                  \"@language\": \"it\"\n                }, {\n                  \"@value\": \"\",\n                  \"@language\": \"fr\"\n                }, {\n                  \"@value\": \"\",\n                  \"@language\": \"de\"\n                }, {\n                  \"@value\": \"\",\n                  \"@language\": \"sq\"\n                }],\n                \"my0:country\": \"\",\n                \"my0:street\": [{\n                  \"@value\": \"\",\n                  \"@language\": \"en\"\n                }, {\n                  \"@value\": \"\",\n                  \"@language\": \"it\"\n                }, {\n                  \"@value\": \"\",\n                  \"@language\": \"fr\"\n                }, {\n                  \"@value\": \"\",\n                  \"@language\": \"de\"\n                }, {\n                  \"@value\": \"\",\n                  \"@language\": \"sq\"\n                }],\n                \"my0:postalCode\": \"\"\n              },\n              \"my0:phoneNumberWork\": \"\",\n              \"my0:email\": \"\"\n            }\n          }\n        });\n      } else {\n        this.setInitialValues();\n      }\n    };\n\n    this.handleSelectChange = (value, id, name) => {\n      let obj = _objectSpread({}, this.state.reference);\n\n      let label = id;\n\n      if (name === \"person\") {\n        obj[\"my0:referenceBy\"][label] = value[\"@type\"];\n      } else if (name === \"address\") {\n        obj[\"my0:referenceBy\"][\"my0:address\"][label] = value[\"@type\"];\n      } else {\n        obj[label] = value[\"@type\"];\n      }\n\n      this.setState({\n        reference: obj\n      });\n    };\n\n    this.handleInputChange = (e, lang) => {\n      let obj = _objectSpread({}, this.state.reference);\n\n      let label = e.target.id;\n\n      if (e.target.name === \"person\") {\n        if (lang) {\n          obj[\"my0:referenceBy\"][label] = this.replaceLanguageValue(obj[\"my0:referenceBy\"][label], lang, e.target.value);\n        } else {\n          obj[\"my0:referenceBy\"][label] = e.target.value;\n        }\n      } else if (e.target.name === \"address\") {\n        if (lang) {\n          obj[\"my0:referenceBy\"][\"my0:address\"][label] = this.replaceLanguageValue(obj[\"my0:referenceBy\"][\"my0:address\"][label], lang, e.target.value);\n        } else {\n          obj[\"my0:referenceBy\"][\"my0:address\"][label] = e.target.value;\n        }\n      } else {\n        if (lang) {\n          obj[label] = this.replaceLanguageValue(obj[label], lang, e.target.value);\n        } else {\n          obj[label] = e.target.value;\n        }\n      }\n\n      this.setState({\n        reference: obj\n      });\n    };\n\n    this.handleSave = () => {\n      this.props.createReference(this.state.reference);\n      this.props.updateCVLastUpdate();\n      this.props.onHide();\n      Swal.fire({\n        title: successTitle[this.props.language],\n        type: \"success\",\n        confirmButtonColor: \"#4bb3cc\",\n        heightAuto: false,\n        confirmButtonText: \"Okay\"\n      });\n    };\n\n    this.handleUpdate = () => {\n      this.props.updateReference({\n        object: this.state.reference,\n        index: this.props.id\n      });\n      this.props.updateCVLastUpdate();\n      this.props.onHide();\n      Swal.fire({\n        title: successTitle[this.props.language],\n        type: \"success\",\n        confirmButtonColor: \"#4bb3cc\",\n        heightAuto: false,\n        confirmButtonText: \"Okay\"\n      });\n    };\n\n    this.handleRenderingSubmitButton = lang => {\n      let disabled = this.state.reference[\"my0:referenceBy\"][\"my0:firstName\"] === \"\" || this.state.reference[\"my0:referenceBy\"][\"my0:lastName\"] === \"\" || this.state.reference[\"my0:referenceBy\"][\"my0:email\"] === \"\";\n\n      if (!this.props.isUpdate) {\n        return React.createElement(Button, {\n          disabled: disabled,\n          type: \"submit\",\n          variant: \"primary\",\n          onClick: this.handleSave,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325\n          },\n          __self: this\n        }, saveLabel[lang]);\n      } else {\n        return React.createElement(Button, {\n          disabled: disabled,\n          type: \"submit\",\n          variant: \"primary\",\n          onClick: this.handleUpdate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 336\n          },\n          __self: this\n        }, updateLabel[lang]);\n      }\n    };\n  }\n\n  componentWillMount() {\n    this.props.fetchCountries();\n    this.props.fetchTitleProperties();\n    this.props.fetchMainPropertiess(\"my0:Person\");\n    this.props.fetchMainPropertiess(\"my0:Reference\");\n    this.props.fetchMainPropertiess(\"my0:Address\");\n    this.setInitialValues();\n    this.setState({\n      language: this.props.language\n    });\n  }\n\n  replaceLanguageValue(data, language, value) {\n    let length = data.length;\n\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@language\"] === language) {\n        data[i][\"@value\"] = value;\n        break;\n      }\n    }\n\n    return data;\n  }\n\n  findTranslatedValue(data, lang) {\n    let length = data.length;\n\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@language\"] === lang) {\n        return data[i][\"@value\"];\n      }\n    }\n  }\n\n  findInArray(data, name) {\n    let length = data.length;\n\n    for (let i = 0; i < length; i++) {\n      let index = data[i][\"@type\"].indexOf(name);\n      let newlength = data[i][\"@type\"].length;\n\n      if (index >= 0 && index + name.length >= newlength) {\n        return i;\n      }\n    }\n  }\n\n  renderLabel(translated, name, lang) {\n    let index = this.findInArray(translated, name);\n\n    if (translated[index] === undefined || translated[index][lang] === undefined) {\n      return name;\n    } else {\n      return translated[index][lang];\n    }\n  }\n\n  render() {\n    let _this$state$reference = this.state.reference[\"my0:referenceBy\"],\n        title = _this$state$reference[\"my0:title\"],\n        firstName = _this$state$reference[\"my0:firstName\"],\n        lastName = _this$state$reference[\"my0:lastName\"],\n        email = _this$state$reference[\"my0:email\"],\n        phoneNumberWork = _this$state$reference[\"my0:phoneNumberWork\"],\n        address = _this$state$reference[\"my0:address\"];\n    let refRelationDescription = this.state.reference[\"my0:refRelationDescription\"];\n    let lang = this.state.language;\n\n    let changeLanguage = value => this.setState({\n      language: value\n    });\n\n    let _this$props = this.props,\n        translatedProps = _this$props.translatedProps,\n        translatedPropsAddr = _this$props.translatedPropsAddr,\n        translatedPropsRef = _this$props.translatedPropsRef;\n    const onHide = this.props.onHide;\n    return React.createElement(Modal, {\n      show: this.props.show,\n      onHide: this.props.onHide,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      className: \"reference-modal\",\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      id: \"contained-modal-title-vcenter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }, this.props.isUpdate ? referenceUpdateTitle[lang] : referenceAddTitle[lang])))), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 4,\n      style: {\n        marginTop: \"7px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: {\n        width: \"100%\",\n        justifyContent: \"left\",\n        marginLeft: \"0px\",\n        marginBottom: \"8px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label-rw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }, this.renderLabel(translatedProps, \"title\", lang)), React.createElement(Combobox, {\n      name: \"title\",\n      placeholder: this.renderLabel(translatedProps, \"title\", lang),\n      data: this.props.titles,\n      textField: lang,\n      valueField: \"@type\",\n      value: title,\n      caseSensitive: false,\n      minLength: 3,\n      filter: \"contains\",\n      onChange: value => this.handleSelectChange(value, \"my0:title\", \"person\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:firstName\",\n      name: \"person\",\n      label: this.renderLabel(translatedProps, \"firstName\", lang) + \" *\",\n      type: \"text\",\n      value: firstName,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    })), React.createElement(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:lastName\",\n      label: this.renderLabel(translatedProps, \"lastName\", lang) + \" *\",\n      name: \"person\",\n      type: \"text\",\n      value: lastName,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:street\",\n      name: \"address\",\n      label: this.renderLabel(translatedPropsAddr, \"street\", lang),\n      type: \"text\",\n      value: this.findTranslatedValue(address[\"my0:street\"], lang),\n      handleChange: e => this.handleInputChange(e, lang),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:postalCode\",\n      label: this.renderLabel(translatedPropsAddr, \"postalCode\", lang),\n      name: \"address\",\n      type: \"text\",\n      value: address[\"my0:postalCode\"],\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    })), React.createElement(Col, {\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:city\",\n      name: \"address\",\n      label: this.renderLabel(translatedPropsAddr, \"city\", lang),\n      type: \"text\",\n      value: this.findTranslatedValue(address[\"my0:city\"], lang),\n      handleChange: e => this.handleInputChange(e, lang),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      style: {\n        width: \"100%\",\n        justifyContent: \"left\",\n        marginLeft: \"0px\",\n        marginBottom: \"8px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label-rw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514\n      },\n      __self: this\n    }, this.renderLabel(translatedPropsAddr, \"country\", lang)), React.createElement(Combobox, {\n      name: \"my0:country\",\n      placeholder: this.renderLabel(translatedPropsAddr, \"country\", lang),\n      data: this.props.countries,\n      textField: lang,\n      valueField: \"@type\",\n      value: address[\"my0:country\"],\n      caseSensitive: false,\n      minLength: 3,\n      filter: \"contains\",\n      onChange: value => this.handleSelectChange(value, \"my0:country\", \"address\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517\n      },\n      __self: this\n    }))), React.createElement(CustomInput, {\n      id: \"my0:phoneNumberWork\",\n      name: \"person\",\n      label: this.renderLabel(translatedProps, \"phoneNumberWork\", lang),\n      type: \"text\",\n      value: phoneNumberWork,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537\n      },\n      __self: this\n    }), React.createElement(CustomInput, {\n      id: \"my0:email\",\n      label: this.renderLabel(translatedProps, \"email\", lang) + \" *\",\n      name: \"person\",\n      type: \"text\",\n      value: email,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553\n      },\n      __self: this\n    }), React.createElement(CustomTextarea, {\n      id: \"my0:refRelationDescription\",\n      name: \"reference\",\n      label: this.renderLabel(translatedPropsRef, \"refRelationDescription\", lang),\n      value: this.findTranslatedValue(refRelationDescription, lang),\n      handleChange: e => this.handleInputChange(e, lang),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554\n      },\n      __self: this\n    })), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566\n      },\n      __self: this\n    }, React.createElement(Combobox, {\n      onChange: changeLanguage,\n      value: lang,\n      defaultValue: \"en\",\n      containerClassName: \"languagebox\",\n      data: languages,\n      itemComponent: ListItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567\n      },\n      __self: this\n    }), this.handleRenderingSubmitButton(lang), React.createElement(Button, {\n      className: \"btn-reset\",\n      onClick: this.clearForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569\n      },\n      __self: this\n    }, resetLabel[lang]), React.createElement(Button, {\n      variant: \"danger\",\n      onClick: onHide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572\n      },\n      __self: this\n    }, cancelLabel[lang])));\n  }\n\n}\n\nconst mapstateToProps = (state, ownProps) => {\n  return {\n    initialValues: state.cv[\"my0:hasReference\"][ownProps.id],\n    language: state.utility.language,\n    countries: retrieveCountryValues(state.utility.countryValues),\n    titles: retrieveBaseProperties(state.utility.titleValues),\n    translatedPropsOrg: retrieveMainProperties(state.utility[\"my0:Organization\"]),\n    translatedPropsAddr: retrieveMainProperties(state.utility[\"my0:Address\"]),\n    translatedProps: retrieveMainProperties(state.utility[\"my0:Person\"]),\n    translatedPropsRef: retrieveMainProperties(state.utility[\"my0:Reference\"])\n  };\n};\n\nexport default connect(mapstateToProps, {\n  createReference,\n  fetchCountries,\n  fetchTitleProperties,\n  updateReference,\n  fetchMainPropertiess,\n  updateCVLastUpdate,\n  updateLanguage\n})(ReferenceModal);","map":{"version":3,"sources":["/home/eelezi/thesis/rdf2resume/UI/src/components/Dashboard/Forms/Modals/FormReference/ReferenceModal.jsx"],"names":["React","Component","connect","Swal","Modal","Button","Row","Col","Combobox","CustomTextarea","CustomInput","createReference","updateReference","updateCVLastUpdate","fetchCountries","fetchTitleProperties","fetchMainPropertiess","updateLanguage","retrieveCountryValues","retrieveMainProperties","retrieveBaseProperties","cancelLabel","resetLabel","saveLabel","updateLabel","referenceAddTitle","referenceUpdateTitle","successTitle","ListItem","languages","ReferenceModal","state","language","reference","setInitialValues","props","id","isUpdate","inputRef","initialValues","setState","clearForm","handleSelectChange","value","name","obj","label","handleInputChange","e","lang","target","replaceLanguageValue","handleSave","onHide","fire","title","type","confirmButtonColor","heightAuto","confirmButtonText","handleUpdate","object","index","handleRenderingSubmitButton","disabled","componentWillMount","data","length","i","findTranslatedValue","findInArray","indexOf","newlength","renderLabel","translated","undefined","render","firstName","lastName","email","phoneNumberWork","address","refRelationDescription","changeLanguage","translatedProps","translatedPropsAddr","translatedPropsRef","show","marginTop","width","justifyContent","marginLeft","marginBottom","titles","countries","mapstateToProps","ownProps","cv","utility","countryValues","titleValues","translatedPropsOrg"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport { Modal, Button, Row, Col } from \"react-bootstrap\";\nimport { Combobox } from \"react-widgets\";\nimport CustomTextarea from \"../../../../core/CustomTextarea\";\nimport CustomInput from \"../../../../core/CustomInput\";\nimport { createReference, updateReference, updateCVLastUpdate } from \"../../../../../actions\";\nimport {\n  fetchCountries,\n  fetchTitleProperties,\n  fetchMainPropertiess,\n  updateLanguage\n} from \"../../../../../actions/utilityActions\";\nimport {\n  retrieveCountryValues,\n  retrieveMainProperties,\n  retrieveBaseProperties\n} from \"../../../../../utilities/utilityQueries\";\nimport {\n  cancelLabel,\n  resetLabel,\n  saveLabel,\n  updateLabel,\n  referenceAddTitle,\n  referenceUpdateTitle,\n  successTitle\n} from \"../../../../../translations/translations\";\nimport { ListItem, languages } from \"../../../../core/LanguageToggle\";\n\nclass ReferenceModal extends Component {\n  state = {\n    language: '',\n    reference: {\n      \"@type\": \"my0:Reference\",\n      \"my0:refRelationDescription\": [{\n        \"@value\": \"\",\n        \"@language\": \"en\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"it\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"fr\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"de\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"sq\"\n      },\n      ],\n      \"my0:referenceBy\": {\n        \"@type\": \"my0:Person\",\n        \"my0:title\": \"\",\n        \"my0:firstName\": \"\",\n        \"my0:lastName\": \"\",\n        \"my0:address\": {\n          \"@type\": \"my0:Address\",\n          \"my0:city\": [{\n            \"@value\": \"\",\n            \"@language\": \"en\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"it\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"fr\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"de\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"sq\"\n          },\n          ],\n          \"my0:country\": \"\",\n          \"my0:street\": [{\n            \"@value\": \"\",\n            \"@language\": \"en\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"it\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"fr\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"de\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"sq\"\n          },\n          ],\n          \"my0:postalCode\": \"\"\n        },\n        \"my0:phoneNumberWork\": \"\",\n        \"my0:email\": \"\"\n      }\n    }\n  };\n\n  componentWillMount() {\n    this.props.fetchCountries();\n    this.props.fetchTitleProperties();\n    this.props.fetchMainPropertiess(\"my0:Person\");\n    this.props.fetchMainPropertiess(\"my0:Reference\");\n    this.props.fetchMainPropertiess(\"my0:Address\");\n    this.setInitialValues();\n    this.setState({\n      language: this.props.language\n    })\n  }\n\n  setInitialValues = () => {\n    if (this.props.id !== null && this.props.isUpdate === true) {\n      let inputRef = this.props.initialValues;\n      let reference = { ...this.state.reference };\n      reference[\"my0:refRelationDescription\"] = inputRef[\"my0:refRelationDescription\"];\n      reference[\"my0:referenceBy\"] = inputRef[\"my0:referenceBy\"];\n      this.setState({\n        reference\n      });\n    }\n  };\n\n  clearForm = () => {\n    if (!this.props.isUpdate) {\n      this.setState({\n        reference: {\n          \"@type\": \"my0:Reference\",\n          \"my0:refRelationDescription\": [{\n            \"@value\": \"\",\n            \"@language\": \"en\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"it\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"fr\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"de\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"sq\"\n          },\n          ],\n          \"my0:referenceBy\": {\n            \"@type\": \"my0:Person\",\n            \"my0:title\": \"\",\n            \"my0:firstName\": \"\",\n            \"my0:lastName\": \"\",\n            \"my0:address\": {\n              \"@type\": \"my0:Address\",\n              \"my0:city\": [{\n                \"@value\": \"\",\n                \"@language\": \"en\"\n              },\n              {\n                \"@value\": \"\",\n                \"@language\": \"it\"\n              },\n              {\n                \"@value\": \"\",\n                \"@language\": \"fr\"\n              },\n              {\n                \"@value\": \"\",\n                \"@language\": \"de\"\n              },\n              {\n                \"@value\": \"\",\n                \"@language\": \"sq\"\n              },\n              ],\n              \"my0:country\": \"\",\n              \"my0:street\": [{\n                \"@value\": \"\",\n                \"@language\": \"en\"\n              },\n              {\n                \"@value\": \"\",\n                \"@language\": \"it\"\n              },\n              {\n                \"@value\": \"\",\n                \"@language\": \"fr\"\n              },\n              {\n                \"@value\": \"\",\n                \"@language\": \"de\"\n              },\n              {\n                \"@value\": \"\",\n                \"@language\": \"sq\"\n              },\n              ],\n              \"my0:postalCode\": \"\"\n            },\n            \"my0:phoneNumberWork\": \"\",\n            \"my0:email\": \"\"\n          }\n        }\n      });\n    } else {\n      this.setInitialValues();\n    }\n  };\n\n  handleSelectChange = (value, id, name) => {\n    let obj = { ...this.state.reference };\n    let label = id;\n    if (name === \"person\") {\n      obj[\"my0:referenceBy\"][label] = value[\"@type\"];\n    } else if (name === \"address\") {\n      obj[\"my0:referenceBy\"][\"my0:address\"][label] = value[\"@type\"];\n    } else {\n      obj[label] = value[\"@type\"];\n    }\n    this.setState({\n      reference: obj\n    });\n  };\n\n  replaceLanguageValue(data, language, value) {\n    let length = data.length;\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@language\"] === language) {\n        data[i][\"@value\"] = value;\n        break;\n      }\n    }\n    return data;\n  }\n\n  findTranslatedValue(data, lang) {\n    let length = data.length;\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@language\"] === lang) {\n        return data[i][\"@value\"];\n      }\n    }\n  }\n\n  handleInputChange = (e, lang) => {\n    let obj = { ...this.state.reference };\n    let label = e.target.id;\n    if (e.target.name === \"person\") {\n      if (lang) {\n        obj[\"my0:referenceBy\"][label] = this.replaceLanguageValue(obj[\"my0:referenceBy\"][label], lang, e.target.value);\n      } else {\n        obj[\"my0:referenceBy\"][label] = e.target.value;\n      }\n    } else if (e.target.name === \"address\") {\n      if (lang) {\n        obj[\"my0:referenceBy\"][\"my0:address\"][label] = this.replaceLanguageValue(obj[\"my0:referenceBy\"][\"my0:address\"][label], lang, e.target.value);\n      } else {\n        obj[\"my0:referenceBy\"][\"my0:address\"][label] = e.target.value;\n      }\n    } else {\n      if (lang) {\n        obj[label] = this.replaceLanguageValue(obj[label], lang, e.target.value);\n      } else {\n        obj[label] = e.target.value;\n      }\n    }\n    this.setState({\n      reference: obj\n    });\n  };\n\n  handleSave = () => {\n    this.props.createReference(this.state.reference);\n    this.props.updateCVLastUpdate();\n    this.props.onHide();\n    Swal.fire({\n      title: successTitle[this.props.language],\n      type: \"success\",\n      confirmButtonColor: \"#4bb3cc\",\n      heightAuto: false,\n      confirmButtonText: \"Okay\"\n    });\n  };\n\n  handleUpdate = () => {\n    this.props.updateReference({\n      object: this.state.reference,\n      index: this.props.id\n    });\n    this.props.updateCVLastUpdate();\n    this.props.onHide();\n    Swal.fire({\n      title: successTitle[this.props.language],\n      type: \"success\",\n      confirmButtonColor: \"#4bb3cc\",\n      heightAuto: false,\n      confirmButtonText: \"Okay\"\n    });\n  };\n\n  handleRenderingSubmitButton = lang => {\n    let disabled =\n      this.state.reference[\"my0:referenceBy\"][\"my0:firstName\"] === \"\" ||\n      this.state.reference[\"my0:referenceBy\"][\"my0:lastName\"] === \"\" ||\n      this.state.reference[\"my0:referenceBy\"][\"my0:email\"] === \"\"\n    if (!this.props.isUpdate) {\n      return (\n        <Button\n          disabled={disabled}\n          type=\"submit\"\n          variant=\"primary\"\n          onClick={this.handleSave}\n        >\n          {saveLabel[lang]}\n        </Button>\n      );\n    } else {\n      return (\n        <Button\n          disabled={disabled}\n          type=\"submit\"\n          variant=\"primary\"\n          onClick={this.handleUpdate}\n        >\n          {updateLabel[lang]}\n        </Button>\n      );\n    }\n  };\n\n  findInArray(data, name) {\n    let length = data.length;\n    for (let i = 0; i < length; i++) {\n      let index = data[i][\"@type\"].indexOf(name);\n      let newlength = data[i][\"@type\"].length;\n      if (index >= 0 && index + name.length >= newlength) {\n        return i;\n      }\n    }\n  }\n\n  renderLabel(translated, name, lang) {\n    let index = this.findInArray(translated, name);\n    if (\n      translated[index] === undefined ||\n      translated[index][lang] === undefined\n    ) {\n      return name;\n    } else {\n      return translated[index][lang];\n    }\n  }\n\n  render() {\n    let {\n      \"my0:title\": title,\n      \"my0:firstName\": firstName,\n      \"my0:lastName\": lastName,\n      \"my0:email\": email,\n      \"my0:phoneNumberWork\": phoneNumberWork,\n      \"my0:address\": address\n    } = this.state.reference[\"my0:referenceBy\"];\n\n    let {\n      \"my0:refRelationDescription\": refRelationDescription\n    } = this.state.reference;\n\n    let lang = this.state.language;\n\n    let changeLanguage = (value) => this.setState({ language: value });\n\n    let {\n      translatedProps,\n      translatedPropsAddr,\n      translatedPropsRef,\n    } = this.props;\n\n    const { onHide } = this.props;\n    return (\n      <Modal\n        show={this.props.show}\n        onHide={this.props.onHide}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        className=\"reference-modal\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            <Row>\n              <Col md={12}>\n                {this.props.isUpdate\n                  ? referenceUpdateTitle[lang]\n                  : referenceAddTitle[lang]}\n              </Col>\n            </Row>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Row>\n            <Col md={4} style={{ marginTop: \"7px\" }}>\n              <Row\n                style={{\n                  width: \"100%\",\n                  justifyContent: \"left\",\n                  marginLeft: \"0px\",\n                  marginBottom: \"8px\"\n                }}\n              >\n                <label className=\"label-rw\">\n                  {this.renderLabel(translatedProps, \"title\", lang)}\n                </label>\n                <Combobox\n                  name=\"title\"\n                  placeholder={this.renderLabel(translatedProps, \"title\", lang)}\n                  data={this.props.titles}\n                  textField={lang}\n                  valueField=\"@type\"\n                  value={title}\n                  caseSensitive={false}\n                  minLength={3}\n                  filter=\"contains\"\n                  onChange={value =>\n                    this.handleSelectChange(value, \"my0:title\", \"person\")\n                  }\n                />\n              </Row>\n            </Col>\n            <Col md={4}>\n              <CustomInput\n                id=\"my0:firstName\"\n                name=\"person\"\n                label={\n                  this.renderLabel(translatedProps, \"firstName\", lang) + \" *\"\n                }\n                type=\"text\"\n                value={firstName}\n                handleChange={this.handleInputChange}\n              />\n            </Col>\n            <Col md={4}>\n              <CustomInput\n                id=\"my0:lastName\"\n                label={\n                  this.renderLabel(translatedProps, \"lastName\", lang) + \" *\"\n                }\n                name=\"person\"\n                type=\"text\"\n                value={lastName}\n                handleChange={this.handleInputChange}\n              />\n            </Col>\n          </Row>\n          <div>\n            <CustomInput\n              id=\"my0:street\"\n              name=\"address\"\n              label={this.renderLabel(translatedPropsAddr, \"street\", lang)}\n              type=\"text\"\n              value={this.findTranslatedValue(address[\"my0:street\"], lang)}\n              handleChange={(e) => this.handleInputChange(e, lang)}\n            />\n            <Row>\n              <Col md={6}>\n                <CustomInput\n                  id=\"my0:postalCode\"\n                  label={this.renderLabel(\n                    translatedPropsAddr,\n                    \"postalCode\",\n                    lang\n                  )}\n                  name=\"address\"\n                  type=\"text\"\n                  value={address[\"my0:postalCode\"]}\n                  handleChange={this.handleInputChange}\n                />\n              </Col>\n              <Col md={6}>\n                <CustomInput\n                  id=\"my0:city\"\n                  name=\"address\"\n                  label={this.renderLabel(translatedPropsAddr, \"city\", lang)}\n                  type=\"text\"\n                  value={this.findTranslatedValue(address[\"my0:city\"], lang)}\n                  handleChange={(e) => this.handleInputChange(e, lang)}\n                />\n              </Col>\n            </Row>\n            <Row\n              style={{\n                width: \"100%\",\n                justifyContent: \"left\",\n                marginLeft: \"0px\",\n                marginBottom: \"8px\"\n              }}\n            >\n              <label className=\"label-rw\">\n                {this.renderLabel(translatedPropsAddr, \"country\", lang)}\n              </label>\n              <Combobox\n                name=\"my0:country\"\n                placeholder={this.renderLabel(\n                  translatedPropsAddr,\n                  \"country\",\n                  lang\n                )}\n                data={this.props.countries}\n                textField={lang}\n                valueField=\"@type\"\n                value={address[\"my0:country\"]}\n                caseSensitive={false}\n                minLength={3}\n                filter=\"contains\"\n                onChange={value =>\n                  this.handleSelectChange(value, \"my0:country\", \"address\")\n                }\n              />\n            </Row>\n          </div>\n          <CustomInput\n            id=\"my0:phoneNumberWork\"\n            name=\"person\"\n            label={this.renderLabel(translatedProps, \"phoneNumberWork\", lang)}\n            type=\"text\"\n            value={phoneNumberWork}\n            handleChange={this.handleInputChange}\n          />\n          <CustomInput\n            id=\"my0:email\"\n            label={this.renderLabel(translatedProps, \"email\", lang) + \" *\"}\n            name=\"person\"\n            type=\"text\"\n            value={email}\n            handleChange={this.handleInputChange}\n          />\n          <br />\n          <CustomTextarea\n            id=\"my0:refRelationDescription\"\n            name=\"reference\"\n            label={this.renderLabel(\n              translatedPropsRef,\n              \"refRelationDescription\",\n              lang\n            )}\n            value={this.findTranslatedValue(refRelationDescription, lang)}\n            handleChange={(e) => this.handleInputChange(e, lang)}\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Combobox onChange={changeLanguage} value={lang} defaultValue={\"en\"} containerClassName=\"languagebox\" data={languages} itemComponent={ListItem} />\n          {this.handleRenderingSubmitButton(lang)}\n          <Button className=\"btn-reset\" onClick={this.clearForm}>\n            {resetLabel[lang]}\n          </Button>\n          <Button variant=\"danger\" onClick={onHide}>\n            {cancelLabel[lang]}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapstateToProps = (state, ownProps) => {\n  return {\n    initialValues: state.cv[\"my0:hasReference\"][ownProps.id],\n    language: state.utility.language,\n    countries: retrieveCountryValues(state.utility.countryValues),\n    titles: retrieveBaseProperties(state.utility.titleValues),\n    translatedPropsOrg: retrieveMainProperties(\n      state.utility[\"my0:Organization\"]\n    ),\n    translatedPropsAddr: retrieveMainProperties(state.utility[\"my0:Address\"]),\n    translatedProps: retrieveMainProperties(state.utility[\"my0:Person\"]),\n    translatedPropsRef: retrieveMainProperties(state.utility[\"my0:Reference\"])\n  };\n};\n\nexport default connect(\n  mapstateToProps,\n  {\n    createReference,\n    fetchCountries,\n    fetchTitleProperties,\n    updateReference,\n    fetchMainPropertiess,\n    updateCVLastUpdate,\n    updateLanguage\n  }\n)(ReferenceModal);\n"]},"metadata":{},"sourceType":"module"}