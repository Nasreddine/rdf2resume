{"ast":null,"code":"var _jsxFileName = \"/home/eelezi/thesis/rdf2resume/UI/src/components/Dashboard/Forms/FormPersonal.jsx\";\nimport React, { Component } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport AddButton from \"../../core/AddButton\";\nimport RemoveButton from \"../../core/RemoveButton\";\nimport CustomInput from \"../../core/CustomInput\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport CustomRadioGroup from \"../../core/CustomRadioGroup\";\nimport { Combobox, Multiselect } from \"react-widgets\";\nimport Swal from \"sweetalert2\";\nimport { connect } from \"react-redux\";\nimport CustomTextarea from \"../../core/CustomTextarea\";\nimport { updateAboutPerson, createIM, updateIM, removeIM, createWebsite, updateWebsite, removeWebsite, updateCVLastUpdate } from \"../../../actions\";\nimport { fetchCountries, fetchGenders, fetchTitleProperties, fetchAllWebsiteTypess, fetchAllIMTypess, updateError, fetchMainPropertiess } from \"../../../actions/utilityActions\";\nimport { retrieveCountryValues, retrieveMainProperties, retrieveBaseProperties } from \"../../../utilities/utilityQueries\";\nimport { personalAccepted, personalIM, personalSizeMax, personalWebsite, mainSidebar, warningLabel, photoWrongExtensionText, photoTooBigText } from // personalNationalityAlert\n\"../../../translations/translations\";\nimport axios from \"axios\";\n\nclass FormPersonal extends Component {\n  constructor(props) {\n    super(props); // Create the ref\n\n    this.handleInputChange = (e, secondLevel) => {\n      this.props.updateAboutPerson({\n        id: e.target.id,\n        value: e.target.value,\n        secondLevel\n      });\n      this.props.updateCVLastUpdate();\n    };\n\n    this.handleInputChangeWithLanguage = (e, lang, secondLevel) => {\n      this.props.updateAboutPerson({\n        id: e.target.id,\n        language: lang,\n        value: e.target.value,\n        secondLevel\n      });\n      this.props.updateCVLastUpdate();\n    };\n\n    this.handleSelectChange = (name, value, secondLevel) => {\n      this.props.updateAboutPerson({\n        id: name,\n        value: value[\"@type\"],\n        secondLevel\n      });\n      this.props.updateCVLastUpdate();\n    };\n\n    this.handleMultiSelectChange = (name, value, lang) => {\n      let myarr = [];\n      let length = value.length; // if (name === \"hasCitizenship\" || name === \"hasNationality\") {\n      //   if (value.length >= 3) {\n      //     Swal.fire({\n      //       title: \"Warning!\",\n      //       text: personalNationalityAlert[lang],\n      //       type: \"warning\",\n      //       confirmButtonColor: \"#4bb3cc\",\n      //       heightAuto: false,\n      //       confirmButtonText: \"Okay\"\n      //     });\n      //     return;\n      //   }\n      // }\n\n      for (let i = 0; i < length; i++) {\n        myarr.push(value[i][\"@type\"]);\n      }\n\n      this.props.updateAboutPerson({\n        id: name,\n        value: myarr\n      });\n      this.props.updateCVLastUpdate();\n    };\n\n    this.handleRadioChange = e => {\n      this.props.updateAboutPerson({\n        id: e.target.name,\n        value: e.target.id\n      });\n      this.props.updateCVLastUpdate();\n    };\n\n    this.addWebsite = id => {\n      this.props.createWebsite();\n      this.props.updateCVLastUpdate();\n    };\n\n    this.updateWebsite = (name, value, index) => {\n      if (value[\"@type\"]) {\n        this.props.updateWebsite({\n          id: index,\n          name: name,\n          value: value[\"@type\"]\n        });\n      } else {\n        this.props.updateWebsite({\n          id: index,\n          name: name,\n          value: value\n        });\n      }\n\n      this.props.updateCVLastUpdate();\n    };\n\n    this.removeWebsite = index => {\n      this.props.removeWebsite(index);\n      this.props.updateCVLastUpdate();\n    };\n\n    this.addInstantMessaging = id => {\n      this.props.createIM();\n      this.props.updateCVLastUpdate();\n    };\n\n    this.updateInstantMessaging = (name, value, index) => {\n      if (value[\"@type\"]) {\n        this.props.updateIM({\n          id: index,\n          name: name,\n          value: value[\"@type\"]\n        });\n      } else {\n        this.props.updateIM({\n          id: index,\n          name: name,\n          value: value\n        });\n      }\n\n      this.props.updateCVLastUpdate();\n    };\n\n    this.removeInstantMessaging = index => {\n      this.props.removeIM(index);\n      this.props.updateCVLastUpdate();\n    };\n\n    this.handleAddPhotoClick = () => {\n      this.inputHiddenRef.click();\n    };\n\n    this.onChangePhotoUpload = async e => {\n      let file = e.target.files[0]; //check file type and file size\n\n      let fileSize = file.size;\n      fileSize = fileSize / 1048576; //size in mb \n\n      let fileName = file.name;\n      let extension = fileName.replace(/^.*\\./, '');\n\n      if (fileSize >= 1) {\n        Swal.fire({\n          title: warningLabel[this.props.language],\n          text: photoTooBigText[this.props.language],\n          type: \"warning\",\n          confirmButtonColor: \"#4bb3cc\",\n          heightAuto: false,\n          confirmButtonText: \"Okay\"\n        });\n      } else if (extension === 'png' || extension === 'jpg') {\n        var formData = new FormData();\n        formData.append(\"file\", file);\n        axios.post(\"/upload_photo\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        }).then(resp => {\n          this.props.updateAboutPerson({\n            id: \"photo\",\n            value: resp.data\n          });\n          this.props.updateCVLastUpdate();\n        }).catch(error => {\n          console.log(error);\n        });\n      } else {\n        Swal.fire({\n          title: warningLabel[this.props.language],\n          text: photoWrongExtensionText[this.props.language],\n          type: \"warning\",\n          confirmButtonColor: \"#4bb3cc\",\n          heightAuto: false,\n          confirmButtonText: \"Okay\"\n        });\n      }\n    };\n\n    this.clearPhotoUpload = () => {\n      this.props.updateAboutPerson({\n        id: \"photo\",\n        value: \"\"\n      });\n    };\n\n    this.handleBlur = e => {\n      let label = e.target.id;\n\n      if (label === \"firstName\" || label === \"lastName\" || label === \"email\") {\n        if (e.target.value === \"\") {\n          this.props.updateError({\n            object: \"my0:\" + label,\n            value: true\n          });\n        } else {\n          this.props.updateError({\n            object: \"my0:\" + label,\n            value: false\n          });\n        }\n      }\n    };\n\n    this.inputHiddenRef = React.createRef();\n    this.state = {};\n  }\n\n  componentWillMount() {\n    this.props.fetchCountries();\n    this.props.fetchGenders();\n    this.props.fetchTitleProperties();\n    this.props.fetchAllWebsiteTypess();\n    this.props.fetchAllIMTypess();\n    this.props.fetchMainPropertiess(\"my0:Person\");\n    this.props.fetchMainPropertiess(\"my0:Address\");\n    this.props.fetchMainPropertiess(\"my0:Website\");\n    this.props.fetchMainPropertiess(\"my0:InstantMessaging\");\n  }\n\n  findInArray(data, name) {\n    let length = data.length;\n\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@type\"].indexOf(name) >= 0) {\n        return i;\n      }\n    }\n  }\n\n  renderLabel(translated, name, lang) {\n    let index = this.findInArray(translated, name);\n\n    if (translated[index] === undefined || translated[index][lang] === undefined) {\n      return name;\n    } else {\n      return translated[index][lang];\n    }\n  }\n\n  findTranslatedValue(data, lang) {\n    let length = data.length;\n\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@language\"] === lang) {\n        return data[i][\"@value\"];\n      }\n    }\n  }\n\n  render() {\n    let _this$props$aboutpers = this.props.aboutperson,\n        firstName = _this$props$aboutpers[\"my0:firstName\"],\n        lastName = _this$props$aboutpers[\"my0:lastName\"],\n        formerName = _this$props$aboutpers[\"my0:formerName\"],\n        hasNationality = _this$props$aboutpers[\"my0:hasNationality\"],\n        dateOfBirth = _this$props$aboutpers[\"my0:dateOfBirth\"],\n        gender = _this$props$aboutpers[\"my0:gender\"],\n        phoneNumberHome = _this$props$aboutpers[\"my0:phoneNumberHome\"],\n        phoneNumberWork = _this$props$aboutpers[\"my0:phoneNumberWork\"],\n        phoneNumberMobile = _this$props$aboutpers[\"my0:phoneNumberMobile\"],\n        email = _this$props$aboutpers[\"my0:email\"],\n        title = _this$props$aboutpers[\"my0:title\"],\n        driversLicence = _this$props$aboutpers[\"my0:driversLicence\"],\n        address = _this$props$aboutpers[\"my0:address\"],\n        personShortDescription = _this$props$aboutpers[\"my0:personShortDescription\"],\n        personLongDescription = _this$props$aboutpers[\"my0:personLongDescription\"],\n        hasWebsite = _this$props$aboutpers[\"my0:hasWebsite\"],\n        photo = _this$props$aboutpers[\"my0:photo\"];\n    let titlePage = mainSidebar[1];\n    let _this$props = this.props,\n        translatedProps = _this$props.translatedProps,\n        translatedPropsAddr = _this$props.translatedPropsAddr,\n        translatedPropsWeb = _this$props.translatedPropsWeb,\n        translatedPropsIM = _this$props.translatedPropsIM;\n    let lang = this.props.language;\n    let error = this.props.error;\n    let instantMessaging = this.props.aboutperson[\"my0:hasInstantMessaging\"];\n    return React.createElement(Row, {\n      className: \"main-content-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      style: {\n        marginTop: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, titlePage[lang]), React.createElement(CustomTextarea, {\n      id: \"personShortDescription\",\n      rows: \"5\",\n      label: this.renderLabel(translatedProps, \"personShortDescription\", lang),\n      value: this.findTranslatedValue(personShortDescription, lang),\n      handleChange: e => this.handleInputChangeWithLanguage(e, lang),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }), React.createElement(CustomTextarea, {\n      id: \"personLongDescription\",\n      rows: \"15\",\n      label: this.renderLabel(translatedProps, \"personLongDescription\", lang),\n      value: this.findTranslatedValue(personLongDescription, lang),\n      handleChange: e => this.handleInputChangeWithLanguage(e, lang),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    })), React.createElement(Col, {\n      md: 4,\n      className: \"pt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label-rw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, this.renderLabel(translatedProps, \"title\", lang)), React.createElement(Combobox, {\n      name: \"title\",\n      placeholder: this.renderLabel(translatedProps, \"title\", lang),\n      data: this.props.titles,\n      textField: lang,\n      valueField: \"@type\",\n      value: title,\n      caseSensitive: false,\n      minLength: 3,\n      filter: \"contains\",\n      onChange: value => this.handleSelectChange(\"title\", value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"firstName\",\n      label: this.renderLabel(translatedProps, \"firstName\", lang) + \" *\",\n      type: \"text\",\n      handleBlurEvent: this.handleBlur,\n      value: firstName,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }), error[\"my0:firstName\"] ? React.createElement(\"span\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, \"Required\") : \"\"), React.createElement(\"div\", {\n      className: \"col col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"lastName\",\n      label: this.renderLabel(translatedProps, \"lastName\", lang) + \" *\",\n      type: \"text\",\n      value: lastName,\n      handleBlurEvent: this.handleBlur,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }), error[\"my0:lastName\"] ? React.createElement(\"span\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, \"Required\") : \"\")), React.createElement(CustomInput, {\n      id: \"formerName\",\n      label: this.renderLabel(translatedProps, \"formerName\", lang),\n      type: \"text\",\n      value: formerName,\n      handleBlurEvent: this.handleBlur,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }), React.createElement(CustomInput, {\n      id: \"email\",\n      label: this.renderLabel(translatedProps, \"email\", lang) + \" *\",\n      type: \"text\",\n      handleBlurEvent: this.handleBlur,\n      value: email,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }), error[\"my0:email\"] ? React.createElement(\"span\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, \"Required\") : \"\", React.createElement(CustomInput, {\n      id: \"phoneNumberWork\",\n      label: this.renderLabel(translatedProps, \"phoneNumberWork\", lang),\n      type: \"text\",\n      value: phoneNumberWork,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }), React.createElement(CustomInput, {\n      id: \"phoneNumberHome\",\n      label: this.renderLabel(translatedProps, \"phoneNumberHome\", lang),\n      type: \"text\",\n      value: phoneNumberHome,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }), React.createElement(CustomInput, {\n      id: \"phoneNumberMobile\",\n      label: this.renderLabel(translatedProps, \"phoneNumberMobile\", lang),\n      type: \"text\",\n      value: phoneNumberMobile,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"street\",\n      label: this.renderLabel(translatedPropsAddr, \"street\", lang),\n      type: \"text\",\n      value: this.findTranslatedValue(address[\"my0:street\"], lang),\n      handleChange: e => this.handleInputChangeWithLanguage(e, lang, \"address\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"postalCode\",\n      label: this.renderLabel(translatedPropsAddr, \"postalCode\", lang),\n      type: \"text\",\n      value: address[\"my0:postalCode\"],\n      handleChange: e => this.handleInputChange(e, \"address\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    })), React.createElement(Col, {\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"city\",\n      label: this.renderLabel(translatedPropsAddr, \"city\", lang),\n      type: \"text\",\n      value: this.findTranslatedValue(address[\"my0:city\"], lang),\n      handleChange: e => this.handleInputChangeWithLanguage(e, lang, \"address\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }))), React.createElement(\"label\", {\n      className: \"label-rw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    }, this.renderLabel(translatedPropsAddr, \"country\", lang)), React.createElement(Combobox, {\n      name: \"country\",\n      placeholder: this.renderLabel(translatedPropsAddr, \"country\", lang),\n      data: this.props.countries,\n      textField: lang,\n      valueField: \"@type\",\n      value: address[\"my0:country\"],\n      caseSensitive: false,\n      minLength: 3,\n      filter: \"contains\",\n      onChange: value => this.handleSelectChange(\"country\", value, \"address\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    })), React.createElement(CustomInput, {\n      id: \"dateOfBirth\",\n      label: this.renderLabel(translatedProps, \"dateOfBirth\", lang),\n      type: \"date\",\n      value: dateOfBirth,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"label-rw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    }, this.renderLabel(translatedProps, \"hasNationality\", lang)), React.createElement(Multiselect, {\n      name: \"hasNationality\",\n      data: this.props.countries,\n      textField: lang,\n      valueField: \"@type\",\n      value: hasNationality,\n      placeholder: this.renderLabel(translatedProps, \"hasNationality\", lang),\n      caseSensitive: false,\n      minLength: 3,\n      filter: \"contains\",\n      onChange: value => this.handleMultiSelectChange(\"hasNationality\", value, lang),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485\n      },\n      __self: this\n    }), React.createElement(CustomInput, {\n      id: \"driversLicence\",\n      label: this.renderLabel(translatedProps, \"driversLicence\", lang),\n      type: \"text\",\n      value: driversLicence,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510\n      },\n      __self: this\n    }), React.createElement(Row, {\n      className: \"m-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 5,\n      className: \"p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513\n      },\n      __self: this\n    }, personalWebsite[lang])), React.createElement(Col, {\n      md: 5,\n      className: \"p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515\n      },\n      __self: this\n    }), React.createElement(Col, {\n      md: 2,\n      className: \"p-0 instant-add-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516\n      },\n      __self: this\n    }, React.createElement(AddButton, {\n      classnames: \"add-button small-button\",\n      handleClick: () => this.addWebsite(\"hasWebsite\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517\n      },\n      __self: this\n    }))), hasWebsite.map((member, index) => React.createElement(Row, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 4,\n      className: \"pr-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginTop: \"22px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526\n      },\n      __self: this\n    }, React.createElement(Combobox, {\n      name: \"websiteType\",\n      data: this.props.websites,\n      textField: lang,\n      valueField: \"@type\",\n      value: member[\"my0:websiteType\"],\n      placeholder: this.renderLabel(translatedPropsWeb, \"websiteType\", lang),\n      caseSensitive: false,\n      minLength: 3,\n      filter: \"contains\",\n      onChange: value => this.updateWebsite(\"my0:websiteType\", value, index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      md: 7,\n      style: {\n        marginTop: \"7px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"websiteURL\",\n      label: this.renderLabel(translatedPropsWeb, \"websiteURL\", lang),\n      type: \"text\",\n      value: member[\"my0:websiteURL\"],\n      handleChange: e => this.updateWebsite(\"my0:websiteURL\", e.target.value, index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548\n      },\n      __self: this\n    })), React.createElement(Col, {\n      md: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562\n      },\n      __self: this\n    }, React.createElement(RemoveButton, {\n      classnames: \"shift-left\",\n      handleClick: () => this.removeWebsite(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570\n      },\n      __self: this\n    }), React.createElement(Row, {\n      className: \"m-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 5,\n      className: \"p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573\n      },\n      __self: this\n    }, personalIM[lang])), React.createElement(Col, {\n      md: 5,\n      className: \"p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575\n      },\n      __self: this\n    }), React.createElement(Col, {\n      md: 2,\n      className: \"p-0 instant-add-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576\n      },\n      __self: this\n    }, React.createElement(AddButton, {\n      classnames: \"add-button small-button\",\n      handleClick: () => this.addInstantMessaging(\"hasInstantMessaging\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577\n      },\n      __self: this\n    }))), instantMessaging.map((member, index) => React.createElement(Row, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 6,\n      className: \"pr-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginTop: \"22px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589\n      },\n      __self: this\n    }, React.createElement(Combobox, {\n      name: \"instantMessagingName\",\n      data: this.props.ims,\n      textField: lang,\n      valueField: \"@type\",\n      value: member[\"my0:instantMessagingName\"],\n      placeholder: this.renderLabel(translatedPropsIM, \"instantMessagingName\", lang),\n      caseSensitive: false,\n      minLength: 3,\n      filter: \"contains\",\n      onChange: value => this.updateInstantMessaging(\"my0:instantMessagingName\", value, index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      md: 5,\n      style: {\n        marginTop: \"7px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:instantMessagingUsername\",\n      label: this.renderLabel(translatedPropsIM, \"instantMessagingUsername\", lang),\n      type: \"text\",\n      value: member[\"my0:instantMessagingUsername\"],\n      handleChange: e => this.updateInstantMessaging(\"my0:instantMessagingUsername\", e.target.value, index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615\n      },\n      __self: this\n    })), React.createElement(Col, {\n      md: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633\n      },\n      __self: this\n    }, React.createElement(RemoveButton, {\n      classnames: \"shift-left\",\n      handleClick: () => this.removeInstantMessaging(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634\n      },\n      __self: this\n    }))))), React.createElement(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 642\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginTop: \"75px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 643\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"photo-div-container\",\n      width: \"250px\",\n      height: \"300px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 644\n      },\n      __self: this\n    }, photo ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faTimesCircle,\n      onClick: this.clearPhotoUpload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: \"../../static/media/photos/\" + photo,\n      width: \"250px\",\n      height: \"300px\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 651\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      className: \"photo-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 659\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        textAlign: \"center\",\n        marginTop: \"10px\",\n        marginBottom: \"0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 660\n      },\n      __self: this\n    }, this.renderLabel(translatedProps, \"photo\", lang)), React.createElement(\"div\", {\n      className: \"photo-div-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 669\n      },\n      __self: this\n    }, React.createElement(AddButton, {\n      handleClick: this.handleAddPhotoClick,\n      classnames: \"add-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 670\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.onChangePhotoUpload,\n      ref: inputHiddenRef => this.inputHiddenRef = inputHiddenRef,\n      type: \"file\",\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"alert alert-warning\",\n      style: {\n        margin: 0,\n        padding: \"10px\",\n        fontSize: \"14px\",\n        marginTop: \"15px\",\n        maxWidth: \"250px\"\n      },\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686\n      },\n      __self: this\n    }, personalAccepted[lang], React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698\n      },\n      __self: this\n    }), personalSizeMax[lang]), React.createElement(CustomRadioGroup, {\n      items: this.props.genders,\n      lang: lang,\n      name: \"gender\",\n      value: gender,\n      handleChange: this.handleRadioChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 701\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapstateToProps = state => {\n  return {\n    language: state.utility.language,\n    countries: retrieveCountryValues(state.utility.countryValues),\n    genders: retrieveBaseProperties(state.utility.genderValues),\n    titles: retrieveBaseProperties(state.utility.titleValues),\n    ims: retrieveBaseProperties(state.utility.ims),\n    websites: retrieveBaseProperties(state.utility.websites),\n    translatedProps: retrieveMainProperties(state.utility[\"my0:Person\"]),\n    translatedPropsAddr: retrieveMainProperties(state.utility[\"my0:Address\"]),\n    translatedPropsWeb: retrieveMainProperties(state.utility[\"my0:Website\"]),\n    translatedPropsIM: retrieveMainProperties(state.utility[\"my0:InstantMessaging\"]),\n    aboutperson: state.cv[\"my0:aboutPerson\"],\n    error: state.utility.error\n  };\n};\n\nexport default connect(mapstateToProps, {\n  fetchCountries,\n  updateAboutPerson,\n  fetchGenders,\n  fetchTitleProperties,\n  fetchAllWebsiteTypess,\n  fetchMainPropertiess,\n  fetchAllIMTypess,\n  createIM,\n  updateIM,\n  removeIM,\n  updateError,\n  createWebsite,\n  updateWebsite,\n  removeWebsite,\n  updateCVLastUpdate\n})(FormPersonal);","map":{"version":3,"sources":["/home/eelezi/thesis/rdf2resume/UI/src/components/Dashboard/Forms/FormPersonal.jsx"],"names":["React","Component","Row","Col","AddButton","RemoveButton","CustomInput","FontAwesomeIcon","faTimesCircle","CustomRadioGroup","Combobox","Multiselect","Swal","connect","CustomTextarea","updateAboutPerson","createIM","updateIM","removeIM","createWebsite","updateWebsite","removeWebsite","updateCVLastUpdate","fetchCountries","fetchGenders","fetchTitleProperties","fetchAllWebsiteTypess","fetchAllIMTypess","updateError","fetchMainPropertiess","retrieveCountryValues","retrieveMainProperties","retrieveBaseProperties","personalAccepted","personalIM","personalSizeMax","personalWebsite","mainSidebar","warningLabel","photoWrongExtensionText","photoTooBigText","axios","FormPersonal","constructor","props","handleInputChange","e","secondLevel","id","target","value","handleInputChangeWithLanguage","lang","language","handleSelectChange","name","handleMultiSelectChange","myarr","length","i","push","handleRadioChange","addWebsite","index","addInstantMessaging","updateInstantMessaging","removeInstantMessaging","handleAddPhotoClick","inputHiddenRef","click","onChangePhotoUpload","file","files","fileSize","size","fileName","extension","replace","fire","title","text","type","confirmButtonColor","heightAuto","confirmButtonText","formData","FormData","append","post","headers","then","resp","data","catch","error","console","log","clearPhotoUpload","handleBlur","label","object","createRef","state","componentWillMount","findInArray","indexOf","renderLabel","translated","undefined","findTranslatedValue","render","aboutperson","firstName","lastName","formerName","hasNationality","dateOfBirth","gender","phoneNumberHome","phoneNumberWork","phoneNumberMobile","email","driversLicence","address","personShortDescription","personLongDescription","hasWebsite","photo","titlePage","translatedProps","translatedPropsAddr","translatedPropsWeb","translatedPropsIM","instantMessaging","marginTop","titles","countries","map","member","websites","ims","textAlign","marginBottom","margin","padding","fontSize","maxWidth","genders","mapstateToProps","utility","countryValues","genderValues","titleValues","cv"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport AddButton from \"../../core/AddButton\";\nimport RemoveButton from \"../../core/RemoveButton\";\nimport CustomInput from \"../../core/CustomInput\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport CustomRadioGroup from \"../../core/CustomRadioGroup\";\nimport { Combobox, Multiselect } from \"react-widgets\";\nimport Swal from \"sweetalert2\";\nimport { connect } from \"react-redux\";\nimport CustomTextarea from \"../../core/CustomTextarea\";\nimport {\n  updateAboutPerson,\n  createIM,\n  updateIM,\n  removeIM,\n  createWebsite,\n  updateWebsite,\n  removeWebsite,\n  updateCVLastUpdate\n} from \"../../../actions\";\nimport {\n  fetchCountries,\n  fetchGenders,\n  fetchTitleProperties,\n  fetchAllWebsiteTypess,\n  fetchAllIMTypess,\n  updateError,\n  fetchMainPropertiess\n} from \"../../../actions/utilityActions\";\nimport {\n  retrieveCountryValues,\n  retrieveMainProperties,\n  retrieveBaseProperties\n} from \"../../../utilities/utilityQueries\";\nimport {\n  personalAccepted,\n  personalIM,\n  personalSizeMax,\n  personalWebsite,\n  mainSidebar,\n  warningLabel,\n  photoWrongExtensionText,\n  photoTooBigText,\n  // personalNationalityAlert\n} from \"../../../translations/translations\";\nimport axios from \"axios\";\n\nclass FormPersonal extends Component {\n  constructor(props) {\n    super(props);\n    // Create the ref\n    this.inputHiddenRef = React.createRef();\n    this.state = {};\n  }\n\n  componentWillMount() {\n    this.props.fetchCountries();\n    this.props.fetchGenders();\n    this.props.fetchTitleProperties();\n    this.props.fetchAllWebsiteTypess();\n    this.props.fetchAllIMTypess();\n    this.props.fetchMainPropertiess(\"my0:Person\");\n    this.props.fetchMainPropertiess(\"my0:Address\");\n    this.props.fetchMainPropertiess(\"my0:Website\");\n    this.props.fetchMainPropertiess(\"my0:InstantMessaging\");\n  }\n\n  handleInputChange = (e, secondLevel) => {\n    this.props.updateAboutPerson({\n      id: e.target.id,\n      value: e.target.value,\n      secondLevel\n    });\n    this.props.updateCVLastUpdate();\n  };\n\n  handleInputChangeWithLanguage = (e, lang, secondLevel) => {\n    this.props.updateAboutPerson({\n      id: e.target.id,\n      language: lang,\n      value: e.target.value,\n      secondLevel\n    });\n    this.props.updateCVLastUpdate();\n  };\n\n  handleSelectChange = (name, value, secondLevel) => {\n    this.props.updateAboutPerson({\n      id: name,\n      value: value[\"@type\"],\n      secondLevel\n    });\n    this.props.updateCVLastUpdate();\n  };\n\n  handleMultiSelectChange = (name, value, lang) => {\n    let myarr = [];\n    let length = value.length;\n    // if (name === \"hasCitizenship\" || name === \"hasNationality\") {\n    //   if (value.length >= 3) {\n    //     Swal.fire({\n    //       title: \"Warning!\",\n    //       text: personalNationalityAlert[lang],\n    //       type: \"warning\",\n    //       confirmButtonColor: \"#4bb3cc\",\n    //       heightAuto: false,\n    //       confirmButtonText: \"Okay\"\n    //     });\n    //     return;\n    //   }\n    // }\n    for (let i = 0; i < length; i++) {\n      myarr.push(value[i][\"@type\"]);\n    }\n    this.props.updateAboutPerson({ id: name, value: myarr });\n    this.props.updateCVLastUpdate();\n  };\n\n  handleRadioChange = e => {\n    this.props.updateAboutPerson({ id: e.target.name, value: e.target.id });\n    this.props.updateCVLastUpdate();\n  };\n\n  addWebsite = id => {\n    this.props.createWebsite();\n    this.props.updateCVLastUpdate();\n  };\n\n  updateWebsite = (name, value, index) => {\n    if (value[\"@type\"]) {\n      this.props.updateWebsite({\n        id: index,\n        name: name,\n        value: value[\"@type\"]\n      });\n    } else {\n      this.props.updateWebsite({ id: index, name: name, value: value });\n    }\n    this.props.updateCVLastUpdate();\n  };\n\n  removeWebsite = index => {\n    this.props.removeWebsite(index);\n    this.props.updateCVLastUpdate();\n  };\n\n  addInstantMessaging = id => {\n    this.props.createIM();\n    this.props.updateCVLastUpdate();\n  };\n\n  updateInstantMessaging = (name, value, index) => {\n    if (value[\"@type\"]) {\n      this.props.updateIM({ id: index, name: name, value: value[\"@type\"] });\n    } else {\n      this.props.updateIM({ id: index, name: name, value: value });\n    }\n    this.props.updateCVLastUpdate();\n  };\n\n  removeInstantMessaging = index => {\n    this.props.removeIM(index);\n    this.props.updateCVLastUpdate();\n  };\n\n  handleAddPhotoClick = () => {\n    this.inputHiddenRef.click();\n  };\n\n  onChangePhotoUpload = async e => {\n    let file = e.target.files[0];\n    //check file type and file size\n    let fileSize = file.size;\n    fileSize = fileSize / 1048576; //size in mb \n    let fileName = file.name;\n    let extension = fileName.replace(/^.*\\./, '');\n    if (fileSize >= 1) {\n      Swal.fire({\n        title: warningLabel[this.props.language],\n        text: photoTooBigText[this.props.language],\n        type: \"warning\",\n        confirmButtonColor: \"#4bb3cc\",\n        heightAuto: false,\n        confirmButtonText: \"Okay\"\n      });\n    } else if (extension === 'png' || extension === 'jpg') {\n      var formData = new FormData();\n      formData.append(\"file\", file);\n      axios\n        .post(\"/upload_photo\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        })\n        .then(resp => {\n          this.props.updateAboutPerson({\n            id: \"photo\",\n            value: resp.data\n          });\n          this.props.updateCVLastUpdate();\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    } else {\n      Swal.fire({\n        title: warningLabel[this.props.language],\n        text: photoWrongExtensionText[this.props.language],\n        type: \"warning\",\n        confirmButtonColor: \"#4bb3cc\",\n        heightAuto: false,\n        confirmButtonText: \"Okay\"\n      });\n    }\n\n  };\n\n  clearPhotoUpload = () => {\n    this.props.updateAboutPerson({\n      id: \"photo\",\n      value: \"\"\n    });\n  };\n\n  findInArray(data, name) {\n    let length = data.length;\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@type\"].indexOf(name) >= 0) {\n        return i;\n      }\n    }\n  }\n\n  renderLabel(translated, name, lang) {\n    let index = this.findInArray(translated, name);\n    if (\n      translated[index] === undefined ||\n      translated[index][lang] === undefined\n    ) {\n      return name;\n    } else {\n      return translated[index][lang];\n    }\n  }\n\n  handleBlur = e => {\n    let label = e.target.id;\n    if (label === \"firstName\" || label === \"lastName\" || label === \"email\") {\n      if (e.target.value === \"\") {\n        this.props.updateError({\n          object: \"my0:\" + label,\n          value: true\n        });\n      } else {\n        this.props.updateError({\n          object: \"my0:\" + label,\n          value: false\n        });\n      }\n    }\n  };\n\n  findTranslatedValue(data, lang) {\n    let length = data.length;\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@language\"] === lang) {\n        return data[i][\"@value\"];\n      }\n    }\n  }\n\n  render() {\n    let {\n      \"my0:firstName\": firstName,\n      \"my0:lastName\": lastName,\n      \"my0:formerName\": formerName,\n      \"my0:hasNationality\": hasNationality,\n      \"my0:dateOfBirth\": dateOfBirth,\n      \"my0:gender\": gender,\n      \"my0:phoneNumberHome\": phoneNumberHome,\n      \"my0:phoneNumberWork\": phoneNumberWork,\n      \"my0:phoneNumberMobile\": phoneNumberMobile,\n      \"my0:email\": email,\n      \"my0:title\": title,\n      \"my0:driversLicence\": driversLicence,\n      \"my0:address\": address,\n      \"my0:personShortDescription\": personShortDescription,\n      \"my0:personLongDescription\": personLongDescription,\n      \"my0:hasWebsite\": hasWebsite,\n      \"my0:photo\": photo\n    } = this.props.aboutperson;\n\n    let titlePage = mainSidebar[1];\n\n    let {\n      translatedProps,\n      translatedPropsAddr,\n      translatedPropsWeb,\n      translatedPropsIM\n    } = this.props;\n\n    let lang = this.props.language;\n\n    let error = this.props.error;\n\n    let instantMessaging = this.props.aboutperson[\"my0:hasInstantMessaging\"];\n\n    return (\n      <Row className=\"main-content-row\">\n        <Col md={4}>\n          <h4 style={{ marginTop: \"10px\" }}>{titlePage[lang]}</h4>\n          <CustomTextarea\n            id=\"personShortDescription\"\n            rows=\"5\"\n            label={this.renderLabel(translatedProps, \"personShortDescription\", lang)}\n            value={this.findTranslatedValue(personShortDescription, lang)}\n            handleChange={(e) => this.handleInputChangeWithLanguage(e, lang)}\n          />\n          <CustomTextarea\n            id=\"personLongDescription\"\n            rows=\"15\"\n            label={this.renderLabel(translatedProps, \"personLongDescription\", lang)}\n            value={this.findTranslatedValue(personLongDescription, lang)}\n            handleChange={(e) => this.handleInputChangeWithLanguage(e, lang)}\n          />\n        </Col>\n        <Col md={4} className=\"pt-4\">\n          <label className=\"label-rw\">\n            {this.renderLabel(translatedProps, \"title\", lang)}\n          </label>\n          <Combobox\n            name=\"title\"\n            placeholder={this.renderLabel(translatedProps, \"title\", lang)}\n            data={this.props.titles}\n            textField={lang}\n            valueField=\"@type\"\n            value={title}\n            caseSensitive={false}\n            minLength={3}\n            filter=\"contains\"\n            onChange={value => this.handleSelectChange(\"title\", value)}\n          />\n          <div className=\"row\">\n            <div className=\"col col-sm-6\">\n              <CustomInput\n                id=\"firstName\"\n                label={\n                  this.renderLabel(translatedProps, \"firstName\", lang) + \" *\"\n                }\n                type=\"text\"\n                handleBlurEvent={this.handleBlur}\n                value={firstName}\n                handleChange={this.handleInputChange}\n              />\n              {error[\"my0:firstName\"] ? (\n                <span className=\"error\">Required</span>\n              ) : (\n                  \"\"\n                )}\n            </div>\n            <div className=\"col col-sm-6\">\n              <CustomInput\n                id=\"lastName\"\n                label={\n                  this.renderLabel(translatedProps, \"lastName\", lang) + \" *\"\n                }\n                type=\"text\"\n                value={lastName}\n                handleBlurEvent={this.handleBlur}\n                handleChange={this.handleInputChange}\n              />\n              {error[\"my0:lastName\"] ? (\n                <span className=\"error\">Required</span>\n              ) : (\n                  \"\"\n                )}\n            </div>\n          </div>\n          <CustomInput\n            id=\"formerName\"\n            label={\n              this.renderLabel(translatedProps, \"formerName\", lang) \n            }\n            type=\"text\"\n            value={formerName}\n            handleBlurEvent={this.handleBlur}\n            handleChange={this.handleInputChange}\n          />\n          <CustomInput\n            id=\"email\"\n            label={this.renderLabel(translatedProps, \"email\", lang) + \" *\"}\n            type=\"text\"\n            handleBlurEvent={this.handleBlur}\n            value={email}\n            handleChange={this.handleInputChange}\n          />\n          {error[\"my0:email\"] ? <span className=\"error\">Required</span> : \"\"}\n          <CustomInput\n            id=\"phoneNumberWork\"\n            label={this.renderLabel(translatedProps, \"phoneNumberWork\", lang)}\n            type=\"text\"\n            value={phoneNumberWork}\n            handleChange={this.handleInputChange}\n          />\n          <CustomInput\n            id=\"phoneNumberHome\"\n            label={this.renderLabel(translatedProps, \"phoneNumberHome\", lang)}\n            type=\"text\"\n            value={phoneNumberHome}\n            handleChange={this.handleInputChange}\n          />\n          <CustomInput\n            id=\"phoneNumberMobile\"\n            label={this.renderLabel(translatedProps, \"phoneNumberMobile\", lang)}\n            type=\"text\"\n            value={phoneNumberMobile}\n            handleChange={this.handleInputChange}\n          />\n          <div>\n            <CustomInput\n              id=\"street\"\n              label={this.renderLabel(translatedPropsAddr, \"street\", lang)}\n              type=\"text\"\n              value={this.findTranslatedValue(address[\"my0:street\"], lang)}\n              handleChange={e => this.handleInputChangeWithLanguage(e, lang, \"address\")}\n            />\n            <Row>\n              <Col md={6}>\n                <CustomInput\n                  id=\"postalCode\"\n                  label={this.renderLabel(\n                    translatedPropsAddr,\n                    \"postalCode\",\n                    lang\n                  )}\n                  type=\"text\"\n                  value={address[\"my0:postalCode\"]}\n                  handleChange={e => this.handleInputChange(e, \"address\")}\n                />\n              </Col>\n              <Col md={6}>\n                <CustomInput\n                  id=\"city\"\n                  label={this.renderLabel(translatedPropsAddr, \"city\", lang)}\n                  type=\"text\"\n                  value={this.findTranslatedValue(address[\"my0:city\"], lang)}\n                  handleChange={e => this.handleInputChangeWithLanguage(e, lang, \"address\")}\n                />\n              </Col>\n            </Row>\n            <label className=\"label-rw\">\n              {this.renderLabel(translatedPropsAddr, \"country\", lang)}\n            </label>\n            <Combobox\n              name=\"country\"\n              placeholder={this.renderLabel(\n                translatedPropsAddr,\n                \"country\",\n                lang\n              )}\n              data={this.props.countries}\n              textField={lang}\n              valueField=\"@type\"\n              value={address[\"my0:country\"]}\n              caseSensitive={false}\n              minLength={3}\n              filter=\"contains\"\n              onChange={value =>\n                this.handleSelectChange(\"country\", value, \"address\")\n              }\n            />\n          </div>\n          <CustomInput\n            id=\"dateOfBirth\"\n            label={this.renderLabel(translatedProps, \"dateOfBirth\", lang)}\n            type=\"date\"\n            value={dateOfBirth}\n            handleChange={this.handleInputChange}\n          />\n          <label className=\"label-rw\">\n            {this.renderLabel(translatedProps, \"hasNationality\", lang)}\n          </label>\n          <Multiselect\n            name=\"hasNationality\"\n            data={this.props.countries}\n            textField={lang}\n            valueField=\"@type\"\n            value={hasNationality}\n            placeholder={this.renderLabel(\n              translatedProps,\n              \"hasNationality\",\n              lang\n            )}\n            caseSensitive={false}\n            minLength={3}\n            filter=\"contains\"\n            onChange={value =>\n              this.handleMultiSelectChange(\"hasNationality\", value, lang)\n            }\n          />\n          <CustomInput\n            id=\"driversLicence\"\n            label={this.renderLabel(translatedProps, \"driversLicence\", lang)}\n            type=\"text\"\n            value={driversLicence}\n            handleChange={this.handleInputChange}\n          />\n          <div className=\"mb-3\" />\n          <Row className=\"m-0\">\n            <Col md={5} className=\"p-0\">\n              <p className=\"mb-0\">{personalWebsite[lang]}</p>\n            </Col>\n            <Col md={5} className=\"p-0\" />\n            <Col md={2} className=\"p-0 instant-add-wrapper\">\n              <AddButton\n                classnames=\"add-button small-button\"\n                handleClick={() => this.addWebsite(\"hasWebsite\")}\n              />\n            </Col>\n          </Row>\n          {hasWebsite.map((member, index) => (\n            <Row key={index}>\n              <Col md={4} className=\"pr-0\">\n                <div style={{ marginTop: \"22px\" }}>\n                  <Combobox\n                    name=\"websiteType\"\n                    data={this.props.websites}\n                    textField={lang}\n                    valueField=\"@type\"\n                    value={member[\"my0:websiteType\"]}\n                    placeholder={this.renderLabel(\n                      translatedPropsWeb,\n                      \"websiteType\",\n                      lang\n                    )}\n                    caseSensitive={false}\n                    minLength={3}\n                    filter=\"contains\"\n                    onChange={value =>\n                      this.updateWebsite(\"my0:websiteType\", value, index)\n                    }\n                  />\n                </div>\n              </Col>\n              <Col md={7} style={{ marginTop: \"7px\" }}>\n                <CustomInput\n                  id=\"websiteURL\"\n                  label={this.renderLabel(\n                    translatedPropsWeb,\n                    \"websiteURL\",\n                    lang\n                  )}\n                  type=\"text\"\n                  value={member[\"my0:websiteURL\"]}\n                  handleChange={e =>\n                    this.updateWebsite(\"my0:websiteURL\", e.target.value, index)\n                  }\n                />\n              </Col>\n              <Col md={1}>\n                <RemoveButton\n                  classnames=\"shift-left\"\n                  handleClick={() => this.removeWebsite(index)}\n                />\n              </Col>\n            </Row>\n          ))}\n          <div className=\"mb-3\" />\n          <Row className=\"m-0\">\n            <Col md={5} className=\"p-0\">\n              <p className=\"mb-0\">{personalIM[lang]}</p>\n            </Col>\n            <Col md={5} className=\"p-0\" />\n            <Col md={2} className=\"p-0 instant-add-wrapper\">\n              <AddButton\n                classnames=\"add-button small-button\"\n                handleClick={() =>\n                  this.addInstantMessaging(\"hasInstantMessaging\")\n                }\n              />\n            </Col>\n          </Row>\n\n          {instantMessaging.map((member, index) => (\n            <Row key={index}>\n              <Col md={6} className=\"pr-0\">\n                <div style={{ marginTop: \"22px\" }}>\n                  <Combobox\n                    name=\"instantMessagingName\"\n                    data={this.props.ims}\n                    textField={lang}\n                    valueField=\"@type\"\n                    value={member[\"my0:instantMessagingName\"]}\n                    placeholder={this.renderLabel(\n                      translatedPropsIM,\n                      \"instantMessagingName\",\n                      lang\n                    )}\n                    caseSensitive={false}\n                    minLength={3}\n                    filter=\"contains\"\n                    onChange={value =>\n                      this.updateInstantMessaging(\n                        \"my0:instantMessagingName\",\n                        value,\n                        index\n                      )\n                    }\n                  />\n                </div>\n              </Col>\n              <Col md={5} style={{ marginTop: \"7px\" }}>\n                <CustomInput\n                  id=\"my0:instantMessagingUsername\"\n                  label={this.renderLabel(\n                    translatedPropsIM,\n                    \"instantMessagingUsername\",\n                    lang\n                  )}\n                  type=\"text\"\n                  value={member[\"my0:instantMessagingUsername\"]}\n                  handleChange={e =>\n                    this.updateInstantMessaging(\n                      \"my0:instantMessagingUsername\",\n                      e.target.value,\n                      index\n                    )\n                  }\n                />\n              </Col>\n              <Col md={1}>\n                <RemoveButton\n                  classnames=\"shift-left\"\n                  handleClick={() => this.removeInstantMessaging(index)}\n                />\n              </Col>\n            </Row>\n          ))}\n        </Col>\n        <Col md={4}>\n          <div style={{ marginTop: \"75px\" }}>\n            <div className=\"photo-div-container\" width=\"250px\" height=\"300px\">\n              {photo ? (\n                <React.Fragment>\n                  <FontAwesomeIcon\n                    icon={faTimesCircle}\n                    onClick={this.clearPhotoUpload}\n                  />\n                  <img\n                    src={\"../../static/media/photos/\" + photo}\n                    width=\"250px\"\n                    height=\"300px\"\n                    alt=\"\"\n                  ></img>\n                </React.Fragment>\n              ) : (\n                  <div className=\"photo-div\">\n                    <p\n                      style={{\n                        textAlign: \"center\",\n                        marginTop: \"10px\",\n                        marginBottom: \"0\"\n                      }}\n                    >\n                      {this.renderLabel(translatedProps, \"photo\", lang)}\n                    </p>\n                    <div className=\"photo-div-button\">\n                      <AddButton\n                        handleClick={this.handleAddPhotoClick}\n                        classnames=\"add-button\"\n                      />\n                      <input\n                        onChange={this.onChangePhotoUpload}\n                        ref={inputHiddenRef =>\n                          (this.inputHiddenRef = inputHiddenRef)\n                        }\n                        type=\"file\"\n                        hidden\n                      />\n                    </div>\n                  </div>\n                )}\n            </div>\n            <div\n              className=\"alert alert-warning\"\n              style={{\n                margin: 0,\n                padding: \"10px\",\n                fontSize: \"14px\",\n                marginTop: \"15px\",\n                maxWidth: \"250px\"\n              }}\n              role=\"alert\"\n            >\n              {personalAccepted[lang]}\n              <br />\n              {personalSizeMax[lang]}\n            </div>\n            <CustomRadioGroup\n              items={this.props.genders}\n              lang={lang}\n              name=\"gender\"\n              value={gender}\n              handleChange={this.handleRadioChange}\n            />\n          </div>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst mapstateToProps = state => {\n  return {\n    language: state.utility.language,\n    countries: retrieveCountryValues(state.utility.countryValues),\n    genders: retrieveBaseProperties(state.utility.genderValues),\n    titles: retrieveBaseProperties(state.utility.titleValues),\n    ims: retrieveBaseProperties(state.utility.ims),\n    websites: retrieveBaseProperties(state.utility.websites),\n    translatedProps: retrieveMainProperties(state.utility[\"my0:Person\"]),\n    translatedPropsAddr: retrieveMainProperties(state.utility[\"my0:Address\"]),\n    translatedPropsWeb: retrieveMainProperties(state.utility[\"my0:Website\"]),\n    translatedPropsIM: retrieveMainProperties(\n      state.utility[\"my0:InstantMessaging\"]\n    ),\n    aboutperson: state.cv[\"my0:aboutPerson\"],\n    error: state.utility.error\n  };\n};\n\nexport default connect(\n  mapstateToProps,\n  {\n    fetchCountries,\n    updateAboutPerson,\n    fetchGenders,\n    fetchTitleProperties,\n    fetchAllWebsiteTypess,\n    fetchMainPropertiess,\n    fetchAllIMTypess,\n    createIM,\n    updateIM,\n    removeIM,\n    updateError,\n    createWebsite,\n    updateWebsite,\n    removeWebsite,\n    updateCVLastUpdate\n  }\n)(FormPersonal);\n"]},"metadata":{},"sourceType":"module"}