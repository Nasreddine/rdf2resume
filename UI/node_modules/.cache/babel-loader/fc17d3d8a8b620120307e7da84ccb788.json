{"ast":null,"code":"import _objectSpread from \"/home/eelezi/thesis/rdf2resume/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _ from \"lodash\";\nimport { FETCH_CV, FETCH_ABOUT_CV, FETCH_TARGET, FETCH_ABOUT_PERSON, FETCH_COURSES, FETCH_EDUCATION, FETCH_OTHER_INFO, FETCH_REFERENCES, FETCH_SKILLS, FETCH_WORK_HISTORY, CREATE_OTHER_INFO, REMOVE_OTHER_INFO, UPDATE_OTHER_INFO, CREATE_IM, UPDATE_IM, REMOVE_IM, CREATE_HONOR, UPDATE_HONOR, REMOVE_HONOR, CREATE_PATENT, UPDATE_PATENT, REMOVE_PATENT, CREATE_PROJECT, UPDATE_PROJECT, REMOVE_PROJECT, CREATE_PUBLICATION, UPDATE_PUBLICATION, REMOVE_PUBLICATION, CREATE_WEBSITE, UPDATE_WEBSITE, REMOVE_WEBSITE, CREATE_REFERENCE, UPDATE_REFERENCE, REMOVE_REFERENCE, CREATE_WORK_HISTORY, UPDATE_WORK_HISTORY, REMOVE_WORK_HISTORY, CREATE_EDUCATION, UPDATE_EDUCATION, REMOVE_EDUCATION, CREATE_COURSE, UPDATE_COURSE, REMOVE_COURSE, CREATE_OTHER_SKILL, UPDATE_OTHER_SKILL, REMOVE_OTHER_SKILL, UPDATE_ABOUT_CV, UPDATE_ABOUT_PERSON, UPDATE_TARGET, UPDATE_SKILLS, UPDATE_CV } from \"../actions/types\"; // export function generateUUID() { // Public Domain/MIT\n//   var d = new Date().getTime();//Timestamp\n//   var d2 = (performance && performance.now && (performance.now()*1000)) || 0;//Time in microseconds since page-load or 0 if unsupported\n//   return 'Nxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n//       var r = Math.random() * 16;//random number between 0 and 16\n//       if(d > 0){//Use timestamp until depleted\n//           r = (d + r)%16 | 0;\n//           d = Math.floor(d/16);\n//       } else {//Use microseconds since page-load if supported\n//           r = (d2 + r)%16 | 0;\n//           d2 = Math.floor(d2/16);\n//       }\n//       return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n//   });\n// }\n\nconst INITIAL_STATE = {\n  \"my0:hasReference\": [],\n  \"my0:hasWorkHistory\": [],\n  \"my0:cvLastUpdate\": \"\",\n  \"my0:cvIsConfidential\": false,\n  \"my0:cvCopyright\": \"\",\n  \"my0:cvNotes\": \"\",\n  \"my0:hasCourse\": [],\n  \"my0:aboutPerson\": {\n    \"my0:hasNationality\": [],\n    \"my0:firstName\": \"\",\n    \"my0:lastName\": \"\",\n    \"my0:hasInstantMessaging\": [],\n    \"my0:dateOfBirth\": \"\",\n    \"@type\": \"my0:Person\",\n    \"my0:email\": \"\",\n    \"my0:photo\": \"\",\n    \"my0:title\": \"\",\n    \"my0:driversLicence\": \"\",\n    \"my0:hasCitizenship\": [],\n    \"my0:hasWebsite\": [],\n    \"my0:address\": {\n      \"@type\": \"my0:Address\",\n      \"my0:country\": \"\",\n      \"my0:postalCode\": \"\",\n      \"my0:street\": \"\",\n      \"my0:city\": \"\"\n    },\n    \"my0:phoneNumber\": \"\",\n    \"my0:personDescription\": \"\",\n    \"my0:gender\": \"\"\n  },\n  \"my0:hasSkill\": [],\n  \"@type\": \"my0:CV\",\n  \"my0:hasTarget\": {\n    \"@type\": \"my0:Target\",\n    \"my0:targetJobDescription\": \"\",\n    \"my0:targetJobTitle\": \"\",\n    \"my0:targetWeeksNoticePeriod\": \"\",\n    \"my0:targetCountry\": [],\n    \"my0:targetConditionWillRelocate\": true,\n    \"my0:targetConditionWillTravel\": \"\",\n    \"my0:conditionWillRelocate\": true,\n    \"my0:targetSalaryRange\": \"\",\n    \"my0:targetCompanySize\": \"\",\n    \"my0:targetCareerLevel\": \"\",\n    \"my0:targetCompanyLocality\": \"\",\n    \"my0:targetCompanyDescription\": \"\",\n    \"my0:targetCompanyField\": [],\n    \"my0:targetRegion\": []\n  },\n  \"my0:hasOtherInfo\": [],\n  \"my0:hasPublication\": [],\n  \"my0:hasPatent\": [],\n  \"my0:hasProject\": [],\n  \"my0:hasHonorAward\": [],\n  \"my0:hasEducation\": [],\n  \"my0:cvIsActive\": true,\n  \"@context\": {\n    \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\n    \"rdf\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n    \"country\": \"http://www.bpiresearch.com/BPMO/2004/03/03/cdl/Countries#\",\n    \"my0\": \"http://example.com/rdf2resume_ontology.rdf#\",\n    \"xsd\": \"http://www.w3.org/2001/XMLSchema#\",\n    \"mybase0\": \"http://example.com/rdf2resume_base_ontology.rdf#\"\n  }\n};\nexport default ((state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case FETCH_CV:\n      return _objectSpread({}, state, {\n        cv: action.payload\n      });\n\n    case FETCH_ABOUT_CV:\n      return _objectSpread({}, state, {\n        aboutCV: action.payload\n      });\n\n    case FETCH_ABOUT_PERSON:\n      return _objectSpread({}, state, {\n        aboutPerson: action.payload\n      });\n\n    case FETCH_TARGET:\n      return _objectSpread({}, state, {\n        target: action.payload\n      });\n\n    case FETCH_EDUCATION:\n      return _objectSpread({}, state, {\n        education: action.payload\n      });\n\n    case FETCH_COURSES:\n      return _objectSpread({}, state, {\n        courses: action.payload\n      });\n\n    case FETCH_WORK_HISTORY:\n      return _objectSpread({}, state, {\n        workHistory: action.payload\n      });\n\n    case FETCH_SKILLS:\n      return _objectSpread({}, state, {\n        skills: action.payload\n      });\n\n    case FETCH_REFERENCES:\n      return _objectSpread({}, state, {\n        references: action.payload\n      });\n\n    case FETCH_OTHER_INFO:\n      return _objectSpread({}, state[\"my0:hasOtherInfo\"], _.mapKeys(action.payload, \"id\"));\n\n    case CREATE_OTHER_INFO:\n      let otherinfos = _objectSpread({}, state);\n\n      otherinfos['my0:hasOtherInfo'].push(action.payload);\n      return otherinfos;\n\n    case UPDATE_OTHER_INFO:\n      let updateotherinfos = _objectSpread({}, state);\n\n      updateotherinfos['my0:hasOtherInfo'][action.payload.index] = action.payload.object;\n      return updateotherinfos;\n\n    case REMOVE_OTHER_INFO:\n      let removedotherinfo = _objectSpread({}, state)['my0:hasOtherInfo'];\n\n      let removedotherinfos = _.filter(removedotherinfo, function (item, index) {\n        return index !== action.payload;\n      });\n\n      return _objectSpread({}, state, {\n        \"my0:hasOtherInfo\": removedotherinfos\n      });\n\n    case CREATE_PUBLICATION:\n      let pubs = _objectSpread({}, state);\n\n      pubs['my0:hasPublication'].push(action.payload);\n      return pubs;\n\n    case UPDATE_PUBLICATION:\n      let updatedpubs = _objectSpread({}, state);\n\n      updatedpubs['my0:hasPublication'][action.payload.index] = action.payload.object;\n      return updatedpubs;\n\n    case REMOVE_PUBLICATION:\n      let removepub = _objectSpread({}, state)['my0:hasPublication'];\n\n      let removedpubss = _.filter(removepub, function (item, index) {\n        return index !== action.payload;\n      });\n\n      return _objectSpread({}, state, {\n        \"my0:hasPublication\": removedpubss\n      });\n\n    case CREATE_PATENT:\n      let pats = _objectSpread({}, state);\n\n      pats['my0:hasPatent'].push(action.payload);\n      return pats;\n\n    case UPDATE_PATENT:\n      let updatedpats = _objectSpread({}, state);\n\n      updatedpats['my0:hasPatent'][action.payload.index] = action.payload.object;\n      return updatedpats;\n\n    case REMOVE_PATENT:\n      let removepat = _objectSpread({}, state)['my0:hasPatent'];\n\n      let removedpatss = _.filter(removepat, function (item, index) {\n        return index !== action.payload;\n      });\n\n      return _objectSpread({}, state, {\n        \"my0:hasPatent\": removedpatss\n      });\n\n    case CREATE_PROJECT:\n      let pros = _objectSpread({}, state);\n\n      pros['my0:hasProject'].push(action.payload);\n      return pros;\n\n    case UPDATE_PROJECT:\n      let updatedpros = _objectSpread({}, state);\n\n      updatedpros['my0:hasProject'][action.payload.index] = action.payload.object;\n      return updatedpros;\n\n    case REMOVE_PROJECT:\n      let removepros = _objectSpread({}, state)['my0:hasProject'];\n\n      let removeprosss = _.filter(removepros, function (item, index) {\n        return index !== action.payload;\n      });\n\n      return _objectSpread({}, state, {\n        \"my0:hasProject\": removeprosss\n      });\n\n    case CREATE_HONOR:\n      let hons = _objectSpread({}, state);\n\n      hons['my0:hasHonorAward'].push(action.payload);\n      return hons;\n\n    case UPDATE_HONOR:\n      let updateshons = _objectSpread({}, state);\n\n      updateshons['my0:hasHonorAward'][action.payload.index] = action.payload.object;\n      return updateshons;\n\n    case REMOVE_HONOR:\n      let removehons = _objectSpread({}, state)['my0:hasHonorAward'];\n\n      let removehonss = _.filter(removehons, function (item, index) {\n        return index !== action.payload;\n      });\n\n      return _objectSpread({}, state, {\n        \"my0:hasHonorAward\": removehonss\n      });\n\n    case CREATE_REFERENCE:\n      let references = _objectSpread({}, state);\n\n      references['my0:hasReference'].push(action.payload);\n      return references;\n\n    case UPDATE_REFERENCE:\n      let updatereferences = _objectSpread({}, state);\n\n      updatereferences['my0:hasReference'][action.payload.index] = action.payload.object;\n      return updatereferences;\n\n    case REMOVE_REFERENCE:\n      let removereference = _objectSpread({}, state)['my0:hasReference'];\n\n      let removereferences = _.filter(removereference, function (item, index) {\n        return index !== action.payload;\n      });\n\n      return _objectSpread({}, state, {\n        \"my0:hasReference\": removereferences\n      });\n\n    case CREATE_WORK_HISTORY:\n      let workhistories = _objectSpread({}, state);\n\n      workhistories['my0:hasWorkHistory'].push(action.payload);\n      return workhistories;\n\n    case UPDATE_WORK_HISTORY:\n      let updateworkhistories = _objectSpread({}, state);\n\n      updateworkhistories['my0:hasWorkHistory'][action.payload.index] = action.payload.object;\n      return updateworkhistories;\n\n    case REMOVE_WORK_HISTORY:\n      let removeworkhistory = _objectSpread({}, state)['my0:hasWorkHistory'];\n\n      let removeworkhistorys = _.filter(removeworkhistory, function (item, index) {\n        return index !== action.payload;\n      });\n\n      return _objectSpread({}, state, {\n        \"my0:hasWorkHistory\": removeworkhistorys\n      });\n\n    case CREATE_EDUCATION:\n      let educations = _objectSpread({}, state);\n\n      educations['my0:hasEducation'].push(action.payload);\n      return educations;\n\n    case UPDATE_EDUCATION:\n      let updateeducations = _objectSpread({}, state);\n\n      updateeducations['my0:hasEducation'][action.payload.index] = action.payload.object;\n      return updateeducations;\n\n    case REMOVE_EDUCATION:\n      let removeeducation = _objectSpread({}, state)['my0:hasEducation'];\n\n      let removeeducations = _.filter(removeeducation, function (item, index) {\n        return index !== action.payload;\n      });\n\n      return _objectSpread({}, state, {\n        \"my0:hasEducation\": removeeducations\n      });\n\n    case CREATE_COURSE:\n      let courses = _objectSpread({}, state);\n\n      courses['my0:hasCourse'].push(action.payload);\n      return courses;\n\n    case UPDATE_COURSE:\n      let updatecourses = _objectSpread({}, state);\n\n      updatecourses['my0:hasCourse'][action.payload.index] = action.payload.object;\n      return updatecourses;\n\n    case REMOVE_COURSE:\n      let removecourses = _objectSpread({}, state)['my0:hasCourse'];\n\n      let removecoursess = _.filter(removecourses, function (item, index) {\n        return index !== action.payload;\n      });\n\n      return _objectSpread({}, state, {\n        \"my0:hasCourse\": removecoursess\n      });\n\n    case CREATE_OTHER_SKILL:\n      let otherskills = _objectSpread({}, state);\n\n      otherskills['my0:hasSkill'].push(action.payload);\n      return otherskills;\n\n    case UPDATE_OTHER_SKILL:\n      let updatedskill = _objectSpread({}, state);\n\n      updatedskill['my0:hasSkill'][action.payload.index] = action.payload.object;\n      return updatedskill;\n\n    case REMOVE_OTHER_SKILL:\n      let removedskills = _objectSpread({}, state)['my0:hasSkill'];\n\n      let removedskillss = _.filter(removedskills, function (item, index) {\n        return index !== action.payload;\n      });\n\n      return _objectSpread({}, state, {\n        \"my0:hasSkill\": removedskillss\n      });\n\n    case UPDATE_ABOUT_CV:\n      let aboutcv = _objectSpread({}, state);\n\n      aboutcv[\"my0:\" + action.payload.id] = action.payload.value;\n      return aboutcv;\n\n    case UPDATE_ABOUT_PERSON:\n      let aboutperson = _objectSpread({}, state);\n\n      if (action.payload.secondLevel && action.payload.secondLevel !== undefined) {\n        aboutperson['my0:aboutPerson'][\"my0:\" + action.payload.secondLevel][\"my0:\" + action.payload.id] = action.payload.value;\n      } else {\n        aboutperson['my0:aboutPerson'][\"my0:\" + action.payload.id] = action.payload.value;\n      }\n\n      return aboutperson;\n\n    case UPDATE_SKILLS:\n      let updatedSkills = _objectSpread({}, state);\n\n      updatedSkills['my0:hasSkill'] = action.payload;\n      return updatedSkills;\n\n    case UPDATE_TARGET:\n      let updatetarget = _objectSpread({}, state);\n\n      updatetarget['my0:hasTarget'][\"my0:\" + action.payload.id] = action.payload.value;\n      return updatetarget;\n\n    case UPDATE_CV:\n      return _objectSpread({}, action.payload);\n\n    case CREATE_WEBSITE:\n      let aps = _objectSpread({}, state);\n\n      aps['my0:aboutPerson']['my0:hasWebsite'].push({\n        \"@type\": \"my0:Website\",\n        \"my0:websiteURL\": \"\",\n        \"my0:websiteType\": \"\"\n      });\n      return aps;\n\n    case UPDATE_WEBSITE:\n      let uaps = _objectSpread({}, state);\n\n      uaps['my0:aboutPerson']['my0:hasWebsite'][action.payload.id][action.payload.name] = action.payload.value;\n      return uaps;\n\n    case REMOVE_WEBSITE:\n      let removedimsdd = _objectSpread({}, state)['my0:aboutPerson'];\n\n      let removedimss = _.filter(removedimsdd['my0:hasWebsite'], function (item, index) {\n        return index !== action.payload;\n      });\n\n      removedimsdd['my0:hasWebsite'] = removedimss;\n      return _objectSpread({}, state, {\n        \"my0:aboutPerson\": removedimsdd\n      });\n\n    case CREATE_IM:\n      let ap = _objectSpread({}, state);\n\n      ap['my0:aboutPerson']['my0:hasInstantMessaging'].push({\n        \"@type\": \"my0:InstantMessaging\",\n        \"my0:instantMessagingName\": \"\",\n        \"my0:instantMessagingUsername\": \"\"\n      });\n      return ap;\n\n    case UPDATE_IM:\n      let uap = _objectSpread({}, state);\n\n      uap['my0:aboutPerson']['my0:hasInstantMessaging'][action.payload.id][action.payload.name] = action.payload.value;\n      return uap;\n\n    case REMOVE_IM:\n      let removedim = _objectSpread({}, state)['my0:aboutPerson'];\n\n      let removedims = _.filter(removedim['my0:hasInstantMessaging'], function (item, index) {\n        return index !== action.payload;\n      });\n\n      removedim['my0:hasInstantMessaging'] = removedims;\n      return _objectSpread({}, state, {\n        \"my0:aboutPerson\": removedim\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/eelezi/thesis/rdf2resume/src/reducers/cvReducer.js"],"names":["_","FETCH_CV","FETCH_ABOUT_CV","FETCH_TARGET","FETCH_ABOUT_PERSON","FETCH_COURSES","FETCH_EDUCATION","FETCH_OTHER_INFO","FETCH_REFERENCES","FETCH_SKILLS","FETCH_WORK_HISTORY","CREATE_OTHER_INFO","REMOVE_OTHER_INFO","UPDATE_OTHER_INFO","CREATE_IM","UPDATE_IM","REMOVE_IM","CREATE_HONOR","UPDATE_HONOR","REMOVE_HONOR","CREATE_PATENT","UPDATE_PATENT","REMOVE_PATENT","CREATE_PROJECT","UPDATE_PROJECT","REMOVE_PROJECT","CREATE_PUBLICATION","UPDATE_PUBLICATION","REMOVE_PUBLICATION","CREATE_WEBSITE","UPDATE_WEBSITE","REMOVE_WEBSITE","CREATE_REFERENCE","UPDATE_REFERENCE","REMOVE_REFERENCE","CREATE_WORK_HISTORY","UPDATE_WORK_HISTORY","REMOVE_WORK_HISTORY","CREATE_EDUCATION","UPDATE_EDUCATION","REMOVE_EDUCATION","CREATE_COURSE","UPDATE_COURSE","REMOVE_COURSE","CREATE_OTHER_SKILL","UPDATE_OTHER_SKILL","REMOVE_OTHER_SKILL","UPDATE_ABOUT_CV","UPDATE_ABOUT_PERSON","UPDATE_TARGET","UPDATE_SKILLS","UPDATE_CV","INITIAL_STATE","state","action","type","cv","payload","aboutCV","aboutPerson","target","education","courses","workHistory","skills","references","mapKeys","otherinfos","push","updateotherinfos","index","object","removedotherinfo","removedotherinfos","filter","item","pubs","updatedpubs","removepub","removedpubss","pats","updatedpats","removepat","removedpatss","pros","updatedpros","removepros","removeprosss","hons","updateshons","removehons","removehonss","updatereferences","removereference","removereferences","workhistories","updateworkhistories","removeworkhistory","removeworkhistorys","educations","updateeducations","removeeducation","removeeducations","updatecourses","removecourses","removecoursess","otherskills","updatedskill","removedskills","removedskillss","aboutcv","id","value","aboutperson","secondLevel","undefined","updatedSkills","updatetarget","aps","uaps","name","removedimsdd","removedimss","ap","uap","removedim","removedims"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\nimport {\n  FETCH_CV,\n  FETCH_ABOUT_CV,\n  FETCH_TARGET,\n  FETCH_ABOUT_PERSON,\n  FETCH_COURSES,\n  FETCH_EDUCATION,\n  FETCH_OTHER_INFO,\n  FETCH_REFERENCES,\n  FETCH_SKILLS,\n  FETCH_WORK_HISTORY,\n  CREATE_OTHER_INFO,\n  REMOVE_OTHER_INFO,\n  UPDATE_OTHER_INFO,\n  CREATE_IM,\n  UPDATE_IM,\n  REMOVE_IM,\n  CREATE_HONOR,\n  UPDATE_HONOR,\n  REMOVE_HONOR,\n  CREATE_PATENT,\n  UPDATE_PATENT,\n  REMOVE_PATENT,\n  CREATE_PROJECT,\n  UPDATE_PROJECT,\n  REMOVE_PROJECT,\n  CREATE_PUBLICATION,\n  UPDATE_PUBLICATION,\n  REMOVE_PUBLICATION,\n  CREATE_WEBSITE,\n  UPDATE_WEBSITE,\n  REMOVE_WEBSITE,\n  CREATE_REFERENCE,\n  UPDATE_REFERENCE,\n  REMOVE_REFERENCE,\n  CREATE_WORK_HISTORY,\n  UPDATE_WORK_HISTORY,\n  REMOVE_WORK_HISTORY,\n  CREATE_EDUCATION,\n  UPDATE_EDUCATION,\n  REMOVE_EDUCATION,\n  CREATE_COURSE,\n  UPDATE_COURSE,\n  REMOVE_COURSE,\n  CREATE_OTHER_SKILL,\n  UPDATE_OTHER_SKILL,\n  REMOVE_OTHER_SKILL,\n  UPDATE_ABOUT_CV,\n  UPDATE_ABOUT_PERSON,\n  UPDATE_TARGET,\n  UPDATE_SKILLS,\n  UPDATE_CV\n} from \"../actions/types\";\n\n// export function generateUUID() { // Public Domain/MIT\n//   var d = new Date().getTime();//Timestamp\n//   var d2 = (performance && performance.now && (performance.now()*1000)) || 0;//Time in microseconds since page-load or 0 if unsupported\n//   return 'Nxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n//       var r = Math.random() * 16;//random number between 0 and 16\n//       if(d > 0){//Use timestamp until depleted\n//           r = (d + r)%16 | 0;\n//           d = Math.floor(d/16);\n//       } else {//Use microseconds since page-load if supported\n//           r = (d2 + r)%16 | 0;\n//           d2 = Math.floor(d2/16);\n//       }\n//       return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n//   });\n// }\n\nconst INITIAL_STATE = {\n  \"my0:hasReference\": [],\n  \"my0:hasWorkHistory\": [],\n  \"my0:cvLastUpdate\": \"\",\n  \"my0:cvIsConfidential\": false,\n  \"my0:cvCopyright\": \"\",\n  \"my0:cvNotes\": \"\",\n  \"my0:hasCourse\": [],\n  \"my0:aboutPerson\": {\n    \"my0:hasNationality\": [],\n    \"my0:firstName\": \"\",\n    \"my0:lastName\": \"\",\n    \"my0:hasInstantMessaging\": [],\n    \"my0:dateOfBirth\": \"\",\n    \"@type\": \"my0:Person\",\n    \"my0:email\": \"\",\n    \"my0:photo\": \"\",\n    \"my0:title\": \"\",\n    \"my0:driversLicence\": \"\",\n    \"my0:hasCitizenship\": [],\n    \"my0:hasWebsite\": [],\n    \"my0:address\": {\n      \"@type\": \"my0:Address\",\n      \"my0:country\": \"\",\n      \"my0:postalCode\": \"\",\n      \"my0:street\": \"\",\n      \"my0:city\": \"\"\n    },\n    \"my0:phoneNumber\": \"\",\n    \"my0:personDescription\": \"\",\n    \"my0:gender\": \"\"\n  },\n  \"my0:hasSkill\": [],\n  \"@type\": \"my0:CV\",\n  \"my0:hasTarget\": {\n    \"@type\": \"my0:Target\",\n    \"my0:targetJobDescription\": \"\",\n    \"my0:targetJobTitle\": \"\",\n    \"my0:targetWeeksNoticePeriod\": \"\",\n    \"my0:targetCountry\": [],\n    \"my0:targetConditionWillRelocate\": true,\n    \"my0:targetConditionWillTravel\": \"\",\n    \"my0:conditionWillRelocate\": true,\n    \"my0:targetSalaryRange\": \"\",\n    \"my0:targetCompanySize\": \"\",\n    \"my0:targetCareerLevel\": \"\",\n    \"my0:targetCompanyLocality\": \"\",\n    \"my0:targetCompanyDescription\": \"\",\n    \"my0:targetCompanyField\": [],\n    \"my0:targetRegion\": []\n    },\n  \"my0:hasOtherInfo\": [],\n  \"my0:hasPublication\": [],\n  \"my0:hasPatent\": [],\n  \"my0:hasProject\": [],\n  \"my0:hasHonorAward\": [],\n  \"my0:hasEducation\": [],\n  \"my0:cvIsActive\": true,\n  \"@context\": {\n    \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\n    \"rdf\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n    \"country\": \"http://www.bpiresearch.com/BPMO/2004/03/03/cdl/Countries#\",\n    \"my0\": \"http://example.com/rdf2resume_ontology.rdf#\",\n    \"xsd\": \"http://www.w3.org/2001/XMLSchema#\",\n    \"mybase0\": \"http://example.com/rdf2resume_base_ontology.rdf#\"\n  }\n}\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case FETCH_CV:\n      return { ...state, cv: action.payload };\n    case FETCH_ABOUT_CV:\n      return { ...state, aboutCV: action.payload };\n    case FETCH_ABOUT_PERSON:\n      return { ...state, aboutPerson: action.payload };\n    case FETCH_TARGET:\n      return { ...state, target: action.payload };\n    case FETCH_EDUCATION:\n      return { ...state, education: action.payload };\n    case FETCH_COURSES:\n      return { ...state, courses: action.payload };\n    case FETCH_WORK_HISTORY:\n      return { ...state, workHistory: action.payload };\n    case FETCH_SKILLS:\n      return { ...state, skills: action.payload };\n    case FETCH_REFERENCES:\n      return { ...state, references: action.payload };\n    case FETCH_OTHER_INFO:\n      return { ...state[\"my0:hasOtherInfo\"], ..._.mapKeys(action.payload, \"id\") };\n    case CREATE_OTHER_INFO:\n      let otherinfos = {...state};\n      otherinfos['my0:hasOtherInfo'].push(action.payload);\n      return otherinfos;\n    case UPDATE_OTHER_INFO:\n      let updateotherinfos = {...state};\n      updateotherinfos['my0:hasOtherInfo'][action.payload.index] = action.payload.object;\n      return updateotherinfos;\n    case REMOVE_OTHER_INFO:\n      let removedotherinfo = {...state}['my0:hasOtherInfo'];\n      let removedotherinfos = _.filter(removedotherinfo, function(item, index) { return index !== action.payload; });\n      return { ...state, \"my0:hasOtherInfo\": removedotherinfos };\n    case CREATE_PUBLICATION:\n      let pubs = {...state};\n      pubs['my0:hasPublication'].push(action.payload);\n      return pubs;\n    case UPDATE_PUBLICATION:\n      let updatedpubs = {...state};\n      updatedpubs['my0:hasPublication'][action.payload.index] = action.payload.object;\n      return updatedpubs;\n    case REMOVE_PUBLICATION:\n      let removepub = {...state}['my0:hasPublication'];\n      let removedpubss = _.filter(removepub, function(item, index) { return index !== action.payload; });\n      return { ...state, \"my0:hasPublication\": removedpubss };\n    case CREATE_PATENT:\n      let pats = {...state};\n      pats['my0:hasPatent'].push(action.payload);\n      return pats;\n    case UPDATE_PATENT:\n      let updatedpats = {...state};\n      updatedpats['my0:hasPatent'][action.payload.index] = action.payload.object;\n      return updatedpats;\n    case REMOVE_PATENT:\n      let removepat = {...state}['my0:hasPatent'];\n      let removedpatss = _.filter(removepat, function(item, index) { return index !== action.payload; });\n      return { ...state, \"my0:hasPatent\": removedpatss };\n    case CREATE_PROJECT:\n      let pros = {...state};\n      pros['my0:hasProject'].push(action.payload);\n      return pros;\n    case UPDATE_PROJECT:\n      let updatedpros = {...state};\n      updatedpros['my0:hasProject'][action.payload.index] = action.payload.object;\n      return updatedpros;\n    case REMOVE_PROJECT:\n      let removepros = {...state}['my0:hasProject'];\n      let removeprosss = _.filter(removepros, function(item, index) { return index !== action.payload; });\n      return { ...state, \"my0:hasProject\": removeprosss };\n    case CREATE_HONOR:\n      let hons = {...state};\n      hons['my0:hasHonorAward'].push(action.payload);\n      return hons;\n    case UPDATE_HONOR:\n      let updateshons = {...state};\n      updateshons['my0:hasHonorAward'][action.payload.index] = action.payload.object;\n      return updateshons;\n    case REMOVE_HONOR:\n      let removehons = {...state}['my0:hasHonorAward'];\n      let removehonss = _.filter(removehons, function(item, index) { return index !== action.payload; });\n      return { ...state, \"my0:hasHonorAward\": removehonss };\n    case CREATE_REFERENCE:\n      let references = {...state};\n      references['my0:hasReference'].push(action.payload);\n      return references;\n    case UPDATE_REFERENCE:\n      let updatereferences = {...state};\n      updatereferences['my0:hasReference'][action.payload.index] = action.payload.object;\n      return updatereferences;\n    case REMOVE_REFERENCE:\n      let removereference = {...state}['my0:hasReference'];\n      let removereferences = _.filter(removereference, function(item, index) { return index !== action.payload; });\n      return { ...state, \"my0:hasReference\": removereferences };\n    case CREATE_WORK_HISTORY:\n      let workhistories = {...state};\n      workhistories['my0:hasWorkHistory'].push(action.payload);\n      return workhistories;\n    case UPDATE_WORK_HISTORY:\n      let updateworkhistories = {...state};\n      updateworkhistories['my0:hasWorkHistory'][action.payload.index] = action.payload.object;\n      return updateworkhistories;\n    case REMOVE_WORK_HISTORY:\n      let removeworkhistory = {...state}['my0:hasWorkHistory'];\n      let removeworkhistorys = _.filter(removeworkhistory, function(item, index) { return index !== action.payload; });\n      return { ...state, \"my0:hasWorkHistory\": removeworkhistorys };\n    case CREATE_EDUCATION:\n      let educations = {...state};\n      educations['my0:hasEducation'].push(action.payload);\n      return educations;\n    case UPDATE_EDUCATION:\n      let updateeducations = {...state};\n      updateeducations['my0:hasEducation'][action.payload.index] = action.payload.object;\n      return updateeducations;\n    case REMOVE_EDUCATION:\n      let removeeducation = {...state}['my0:hasEducation'];\n      let removeeducations = _.filter(removeeducation, function(item, index) { return index !== action.payload; });\n      return { ...state, \"my0:hasEducation\": removeeducations };\n    case CREATE_COURSE:\n      let courses = {...state};\n      courses['my0:hasCourse'].push(action.payload);\n      return courses;\n    case UPDATE_COURSE:\n      let updatecourses = {...state};\n      updatecourses['my0:hasCourse'][action.payload.index] = action.payload.object;\n      return updatecourses;\n    case REMOVE_COURSE:\n      let removecourses = {...state}['my0:hasCourse'];\n      let removecoursess = _.filter(removecourses, function(item, index) { return index !== action.payload; });\n      return { ...state, \"my0:hasCourse\": removecoursess };\n    case CREATE_OTHER_SKILL:\n      let otherskills = {...state};\n      otherskills['my0:hasSkill'].push(action.payload);\n      return otherskills;\n    case UPDATE_OTHER_SKILL:\n      let updatedskill = {...state};\n      updatedskill['my0:hasSkill'][action.payload.index] = action.payload.object;\n      return updatedskill;\n    case REMOVE_OTHER_SKILL:\n      let removedskills = {...state}['my0:hasSkill'];\n      let removedskillss = _.filter(removedskills, function(item, index) { return index !== action.payload; });\n      return { ...state, \"my0:hasSkill\": removedskillss };\n    case UPDATE_ABOUT_CV:\n      let aboutcv = { ...state};\n      aboutcv[\"my0:\" + action.payload.id] = action.payload.value;\n      return aboutcv;\n    case UPDATE_ABOUT_PERSON:\n      let aboutperson = { ...state};\n      if(action.payload.secondLevel && action.payload.secondLevel !== undefined){\n        aboutperson['my0:aboutPerson'][\"my0:\" + action.payload.secondLevel][\"my0:\" + action.payload.id] = action.payload.value;\n      } else {\n        aboutperson['my0:aboutPerson'][\"my0:\" + action.payload.id] = action.payload.value;\n      }\n      return aboutperson;\n    case UPDATE_SKILLS:\n      let updatedSkills = {...state};\n      updatedSkills['my0:hasSkill'] = action.payload; \n      return updatedSkills;\n    case UPDATE_TARGET:\n        let updatetarget = { ...state};\n        updatetarget['my0:hasTarget'][\"my0:\" + action.payload.id] = action.payload.value;\n        return updatetarget;\n    case UPDATE_CV:\n      return { ...action.payload};\n    case CREATE_WEBSITE:\n      let aps = { ...state};\n      aps['my0:aboutPerson']['my0:hasWebsite'].push(\n        {\n          \"@type\": \"my0:Website\",\n          \"my0:websiteURL\": \"\",\n          \"my0:websiteType\": \"\"\n        }\n      );\n      return aps;\n    case UPDATE_WEBSITE:\n      let uaps = { ...state};\n      uaps['my0:aboutPerson']['my0:hasWebsite'][action.payload.id][action.payload.name] = action.payload.value;\n      return uaps;\n    case REMOVE_WEBSITE:\n      let removedimsdd = {...state}['my0:aboutPerson'];\n      let removedimss = _.filter(removedimsdd['my0:hasWebsite'], function(item, index) { return index !== action.payload; });\n      removedimsdd['my0:hasWebsite'] = removedimss;\n      return { ...state, \"my0:aboutPerson\": removedimsdd };\n    case CREATE_IM:\n      let ap = { ...state};\n      ap['my0:aboutPerson']['my0:hasInstantMessaging'].push(\n        {\n          \"@type\": \"my0:InstantMessaging\",\n          \"my0:instantMessagingName\": \"\",\n          \"my0:instantMessagingUsername\": \"\"\n        }\n      );\n      return ap;\n    case UPDATE_IM:\n      let uap = { ...state};\n      uap['my0:aboutPerson']['my0:hasInstantMessaging'][action.payload.id][action.payload.name] = action.payload.value;\n      return uap;\n    case REMOVE_IM:\n      let removedim = {...state}['my0:aboutPerson'];\n      let removedims = _.filter(removedim['my0:hasInstantMessaging'], function(item, index) { return index !== action.payload; });\n      removedim['my0:hasInstantMessaging'] = removedims;\n      return { ...state, \"my0:aboutPerson\": removedim };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}