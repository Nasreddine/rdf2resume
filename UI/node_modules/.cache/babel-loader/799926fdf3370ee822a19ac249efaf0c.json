{"ast":null,"code":"var _jsxFileName = \"/home/eelezi/thesis/rdf2resume/src/components/Dashboard/Forms/FormAboutCV.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport CustomTextarea from \"../../core/CustomTextarea\";\nimport CustomInput from \"../../core/CustomInput\";\nimport CustomCheckbox from \"../../core/CustomCheckbox\";\nimport { updateAboutCV } from \"../../../actions\";\nimport { fetchMainPropertiess } from \"../../../actions/utilityActions\";\nimport { retrieveMainProperties } from \"../../../utilities/utilityQueries\";\nimport { now, topBar } from \"../../../translations/translations\";\n\nclass FormAboutCV extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.handleInputChange = e => {\n      this.props.updateAboutCV({\n        id: e.target.id,\n        value: e.target.value\n      });\n    };\n\n    this.handleCheckboxChange = e => {\n      this.props.updateAboutCV({\n        id: e.target.id,\n        value: e.target.checked\n      });\n    };\n  }\n\n  componentWillMount() {\n    this.props.fetchMainPropertiess(\"my0:CV\");\n  }\n\n  findInArray(data, name) {\n    let length = data.length;\n\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@type\"].indexOf(name) >= 0) {\n        return i;\n      }\n    }\n  }\n\n  renderLabel(translated, name, lang) {\n    let index = this.findInArray(translated, name);\n\n    if (translated[index] === undefined || translated[index][lang] === undefined) {\n      return name;\n    } else {\n      return translated[index][lang];\n    }\n  }\n\n  render() {\n    let translatedProps = this.props.translatedProps;\n    let lang = this.props.language;\n    let title = topBar[0];\n    let _this$props$cv = this.props.cv,\n        cvNotes = _this$props$cv[\"my0:cvNotes\"],\n        cvIsActive = _this$props$cv[\"my0:cvIsActive\"],\n        cvIsConfidential = _this$props$cv[\"my0:cvIsConfidential\"],\n        cvLastUpdate = _this$props$cv[\"my0:cvLastUpdate\"],\n        cvCopyright = _this$props$cv[\"my0:cvCopyright\"];\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col col-sm-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      style: {\n        marginTop: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, title[lang]), React.createElement(CustomInput, {\n      id: \"cvCopyright\",\n      label: this.renderLabel(translatedProps, \"cvCopyright\", lang),\n      type: \"text\",\n      value: cvCopyright,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(CustomTextarea, {\n      id: \"cvNotes\",\n      label: this.renderLabel(translatedProps, \"cvNotes\", lang),\n      value: cvNotes,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(CustomCheckbox, {\n      id: \"cvIsActive\",\n      type: \"checkbox\",\n      label: this.renderLabel(translatedProps, \"cvIsActive\", lang),\n      checked: cvIsActive,\n      handleChange: this.handleCheckboxChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        marginTop: \"10px\",\n        marginBottom: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(CustomCheckbox, {\n      id: \"cvIsConfidential\",\n      type: \"checkbox\",\n      label: this.renderLabel(translatedProps, \"cvIsConfidential\", lang),\n      checked: cvIsConfidential,\n      handleChange: this.handleCheckboxChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row mr-0\",\n      style: {\n        marginLeft: \"0\",\n        justifyContent: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \" col col-sm-9 form-label\",\n      style: {\n        paddingLeft: \"0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, this.renderLabel(translatedProps, \"cvLastUpdate\", lang))), React.createElement(\"div\", {\n      className: \"col col-sm-3 muted-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, cvLastUpdate ? cvLastUpdate : now[lang])))), React.createElement(\"div\", {\n      className: \"col col-sm-7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapstateToProps = state => {\n  return {\n    cv: state.cv,\n    language: state.utility.language,\n    translatedProps: retrieveMainProperties(state.utility[\"my0:CV\"])\n  };\n};\n\nexport default connect(mapstateToProps, {\n  updateAboutCV,\n  fetchMainPropertiess\n})(FormAboutCV);","map":{"version":3,"sources":["/home/eelezi/thesis/rdf2resume/src/components/Dashboard/Forms/FormAboutCV.jsx"],"names":["React","Component","connect","CustomTextarea","CustomInput","CustomCheckbox","updateAboutCV","fetchMainPropertiess","retrieveMainProperties","now","topBar","FormAboutCV","state","handleInputChange","e","props","id","target","value","handleCheckboxChange","checked","componentWillMount","findInArray","data","name","length","i","indexOf","renderLabel","translated","lang","index","undefined","render","translatedProps","language","title","cv","cvNotes","cvIsActive","cvIsConfidential","cvLastUpdate","cvCopyright","marginTop","marginBottom","marginLeft","justifyContent","paddingLeft","mapstateToProps","utility"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport CustomTextarea from \"../../core/CustomTextarea\";\nimport CustomInput from \"../../core/CustomInput\";\nimport CustomCheckbox from \"../../core/CustomCheckbox\";\nimport { updateAboutCV } from \"../../../actions\";\nimport { fetchMainPropertiess } from \"../../../actions/utilityActions\";\nimport { retrieveMainProperties } from \"../../../utilities/utilityQueries\";\nimport { now, topBar } from \"../../../translations/translations\";\n\nclass FormAboutCV extends Component {\n  state = {};\n\n  componentWillMount() {\n    this.props.fetchMainPropertiess(\"my0:CV\");\n  }\n\n  handleInputChange = e => {\n    this.props.updateAboutCV({ id: e.target.id, value: e.target.value });\n  };\n\n  handleCheckboxChange = e => {\n    this.props.updateAboutCV({ id: e.target.id, value: e.target.checked });\n  };\n\n  findInArray(data, name) {\n    let length = data.length;\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@type\"].indexOf(name) >= 0) {\n        return i;\n      }\n    }\n  }\n\n  renderLabel(translated, name, lang) {\n    let index = this.findInArray(translated, name);\n    if (\n      translated[index] === undefined ||\n      translated[index][lang] === undefined\n    ) {\n      return name;\n    } else {\n      return translated[index][lang];\n    }\n  }\n\n  render() {\n    let translatedProps = this.props.translatedProps;\n    let lang = this.props.language;\n    let title = topBar[0];\n    let {\n      \"my0:cvNotes\": cvNotes,\n      \"my0:cvIsActive\": cvIsActive,\n      \"my0:cvIsConfidential\": cvIsConfidential,\n      \"my0:cvLastUpdate\": cvLastUpdate,\n      \"my0:cvCopyright\": cvCopyright\n    } = this.props.cv;\n    return (\n      <div className=\"row\">\n        <div className=\"col col-sm-5\">\n          <h4 style={{ marginTop: \"10px\" }}>{title[lang]}</h4>\n          <CustomInput\n            id=\"cvCopyright\"\n            label={this.renderLabel(translatedProps, \"cvCopyright\", lang)}\n            type=\"text\"\n            value={cvCopyright}\n            handleChange={this.handleInputChange}\n          />\n          <div className=\"mb-3\" />\n          <CustomTextarea\n            id=\"cvNotes\"\n            label={this.renderLabel(translatedProps, \"cvNotes\", lang)}\n            value={cvNotes}\n            handleChange={this.handleInputChange}\n          />\n          <CustomCheckbox\n            id=\"cvIsActive\"\n            type=\"checkbox\"\n            label={this.renderLabel(translatedProps, \"cvIsActive\", lang)}\n            checked={cvIsActive}\n            handleChange={this.handleCheckboxChange}\n          />\n          <div style={{ marginTop: \"10px\", marginBottom: \"10px\" }}>\n            <CustomCheckbox\n              id=\"cvIsConfidential\"\n              type=\"checkbox\"\n              label={this.renderLabel(\n                translatedProps,\n                \"cvIsConfidential\",\n                lang\n              )}\n              checked={cvIsConfidential}\n              handleChange={this.handleCheckboxChange}\n            />\n          </div>\n          <div\n            className=\"row mr-0\"\n            style={{ marginLeft: \"0\", justifyContent: \"left\" }}\n          >\n            <div\n              className=\" col col-sm-9 form-label\"\n              style={{ paddingLeft: \"0\" }}\n            >\n              <p>{this.renderLabel(translatedProps, \"cvLastUpdate\", lang)}</p>\n            </div>\n            <div className=\"col col-sm-3 muted-text\">\n              <p>{cvLastUpdate ? cvLastUpdate : now[lang]}</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"col col-sm-7\" />\n      </div>\n    );\n  }\n}\n\nconst mapstateToProps = state => {\n  return {\n    cv: state.cv,\n    language: state.utility.language,\n    translatedProps: retrieveMainProperties(state.utility[\"my0:CV\"])\n  };\n};\n\nexport default connect(\n  mapstateToProps,\n  {\n    updateAboutCV,\n    fetchMainPropertiess\n  }\n)(FormAboutCV);\n"]},"metadata":{},"sourceType":"module"}