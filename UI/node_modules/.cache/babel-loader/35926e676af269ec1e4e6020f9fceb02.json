{"ast":null,"code":"import _objectSpread from \"/home/eelezi/thesis/rdf2resume/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/eelezi/thesis/rdf2resume/src/components/Dashboard/Forms/Modals/FormReference/ReferenceModal.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Modal, Button, Row, Col } from \"react-bootstrap\";\nimport { Combobox } from \"react-widgets\";\nimport CustomInput from \"../../../../core/CustomInput\";\nimport { createReference, updateReference, updateCVLastUpdate } from \"../../../../../actions\";\nimport { fetchCountries, fetchTitleProperties, fetchMainPropertiess } from \"../../../../../actions/utilityActions\";\nimport { retrieveCountryValues, retrieveMainProperties, retrieveBaseProperties } from \"../../../../../utilities/utilityQueries\";\nimport { cancelLabel, resetLabel, saveLabel, updateLabel, referenceAddTitle, referenceUpdateTitle } from \"../../../../../translations/translations\";\n\nclass ReferenceModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      reference: {\n        \"@type\": \"my0:Reference\",\n        \"my0:referenceBy\": {\n          \"@type\": \"my0:Person\",\n          \"my0:title\": \"\",\n          \"my0:firstName\": \"\",\n          \"my0:lastName\": \"\",\n          \"my0:address\": {\n            \"@type\": \"my0:Address\",\n            \"my0:city\": [{\n              \"@value\": \"\",\n              \"@language\": \"en\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"it\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"fr\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"de\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"sq\"\n            }],\n            \"my0:country\": \"\",\n            \"my0:street\": [{\n              \"@value\": \"\",\n              \"@language\": \"en\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"it\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"fr\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"de\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"sq\"\n            }],\n            \"my0:postalCode\": \"\"\n          },\n          \"my0:phoneNumberWork\": \"\",\n          \"my0:email\": \"\" // \"my0:currentJob\": {\n          //   \"@type\": \"my0:WorkHistory\",\n          //   \"my0:jobTitle\": [{\n          //     \"@value\": \"\",\n          //     \"@language\": \"en\"\n          //   },\n          //   {\n          //     \"@value\": \"\",\n          //     \"@language\": \"it\"\n          //   },\n          //   {\n          //     \"@value\": \"\",\n          //     \"@language\": \"fr\"\n          //   },\n          //   {\n          //     \"@value\": \"\",\n          //     \"@language\": \"de\"\n          //   },\n          //   {\n          //     \"@value\": \"\",\n          //     \"@language\": \"sq\"\n          //   },\n          //   ],\n          //   \"my0:employedIn\": {\n          //     \"@type\": \"my0:Company\",\n          //     \"my0:organizationName\": \"\"\n          //   }\n          // }\n\n        }\n      }\n    };\n\n    this.setInitialValues = () => {\n      if (this.props.id !== null && this.props.isUpdate === true) {\n        let inputRef = this.props.initialValues;\n\n        let reference = _objectSpread({}, this.state.reference);\n\n        reference[\"my0:referenceBy\"] = inputRef[\"my0:referenceBy\"];\n        this.setState({\n          reference\n        });\n      }\n    };\n\n    this.clearForm = () => {\n      if (!this.props.isUpdate) {\n        this.setState({\n          reference: {\n            \"@type\": \"my0:Reference\",\n            \"my0:referenceBy\": {\n              \"@type\": \"my0:Person\",\n              \"my0:title\": \"\",\n              \"my0:firstName\": \"\",\n              \"my0:lastName\": \"\",\n              \"my0:address\": {\n                \"@type\": \"my0:Address\",\n                \"my0:city\": [{\n                  \"@value\": \"\",\n                  \"@language\": \"en\"\n                }, {\n                  \"@value\": \"\",\n                  \"@language\": \"it\"\n                }, {\n                  \"@value\": \"\",\n                  \"@language\": \"fr\"\n                }, {\n                  \"@value\": \"\",\n                  \"@language\": \"de\"\n                }, {\n                  \"@value\": \"\",\n                  \"@language\": \"sq\"\n                }],\n                \"my0:country\": \"\",\n                \"my0:street\": [{\n                  \"@value\": \"\",\n                  \"@language\": \"en\"\n                }, {\n                  \"@value\": \"\",\n                  \"@language\": \"it\"\n                }, {\n                  \"@value\": \"\",\n                  \"@language\": \"fr\"\n                }, {\n                  \"@value\": \"\",\n                  \"@language\": \"de\"\n                }, {\n                  \"@value\": \"\",\n                  \"@language\": \"sq\"\n                }],\n                \"my0:postalCode\": \"\"\n              },\n              \"my0:phoneNumberWork\": \"\",\n              \"my0:email\": \"\" // \"my0:currentJob\": {\n              //   \"@type\": \"my0:WorkHistory\",\n              //   \"my0:jobTitle\": [{\n              //     \"@value\": \"\",\n              //     \"@language\": \"en\"\n              //   },\n              //   {\n              //     \"@value\": \"\",\n              //     \"@language\": \"it\"\n              //   },\n              //   {\n              //     \"@value\": \"\",\n              //     \"@language\": \"fr\"\n              //   },\n              //   {\n              //     \"@value\": \"\",\n              //     \"@language\": \"de\"\n              //   },\n              //   {\n              //     \"@value\": \"\",\n              //     \"@language\": \"sq\"\n              //   },\n              //   ],\n              //   \"my0:employedIn\": {\n              //     \"@type\": \"my0:Company\",\n              //     \"my0:organizationName\": \"\"\n              //   }\n              // }\n\n            }\n          }\n        });\n      } else {\n        this.setInitialValues();\n      }\n    };\n\n    this.handleSelectChange = (value, id, name) => {\n      let obj = _objectSpread({}, this.state.reference);\n\n      let label = id;\n\n      if (name === \"person\") {\n        obj[\"my0:referenceBy\"][label] = value[\"@type\"];\n      } else if (name === \"address\") {\n        obj[\"my0:referenceBy\"][\"my0:address\"][label] = value[\"@type\"];\n      } else if (name === \"workHistory\") {\n        obj[\"my0:referenceBy\"][\"my0:currentJob\"][label] = value[\"@type\"];\n      } else if (name === \"organization\") {\n        obj[\"my0:referenceBy\"][\"my0:currentJob\"][\"my0:employedIn\"][label] = value[\"@type\"];\n      } else {\n        obj[label] = value[\"@type\"];\n      }\n\n      this.setState({\n        reference: obj\n      });\n    };\n\n    this.handleInputChange = (e, lang) => {\n      let obj = _objectSpread({}, this.state.reference);\n\n      let label = e.target.id;\n\n      if (e.target.name === \"person\") {\n        if (lang) {\n          obj[\"my0:referenceBy\"][label] = this.replaceLanguageValue(obj[\"my0:referenceBy\"][label], lang, e.target.value);\n        } else {\n          obj[\"my0:referenceBy\"][label] = e.target.value;\n        }\n      } else if (e.target.name === \"address\") {\n        if (lang) {\n          obj[\"my0:referenceBy\"][\"my0:address\"][label] = this.replaceLanguageValue(obj[\"my0:referenceBy\"][\"my0:address\"][label], lang, e.target.value);\n        } else {\n          obj[\"my0:referenceBy\"][\"my0:address\"][label] = e.target.value;\n        }\n      } else if (e.target.name === \"workHistory\") {\n        if (lang) {\n          obj[\"my0:referenceBy\"][\"my0:currentJob\"][label] = this.replaceLanguageValue(obj[\"my0:referenceBy\"][\"my0:currentJob\"][label], lang, e.target.value);\n        } else {\n          obj[\"my0:referenceBy\"][\"my0:currentJob\"][label] = e.target.value;\n        }\n      } else if (e.target.name === \"organization\") {\n        if (lang) {\n          obj[\"my0:referenceBy\"][\"my0:currentJob\"][\"my0:employedIn\"][label] = this.replaceLanguageValue(obj[\"my0:referenceBy\"][\"my0:currentJob\"][\"my0:employedIn\"][label], lang, e.target.value);\n        } else {\n          obj[\"my0:referenceBy\"][\"my0:currentJob\"][\"my0:employedIn\"][label] = e.target.value;\n        }\n      } else {\n        if (lang) {\n          obj[label] = this.replaceLanguageValue(obj[label], lang, e.target.value);\n        } else {\n          obj[label] = e.target.value;\n        }\n      }\n\n      this.setState({\n        reference: obj\n      });\n    };\n\n    this.handleSave = () => {\n      this.props.createReference(this.state.reference);\n      this.props.updateCVLastUpdate();\n    };\n\n    this.handleUpdate = () => {\n      this.props.updateReference({\n        object: this.state.reference,\n        index: this.props.id\n      });\n      this.props.updateCVLastUpdate();\n    };\n\n    this.handleRenderingSubmitButton = lang => {\n      let disabled = this.state.reference[\"my0:referenceBy\"][\"my0:firstName\"] === \"\" || this.state.reference[\"my0:referenceBy\"][\"my0:lastName\"] === \"\" || this.state.reference[\"my0:referenceBy\"][\"my0:currentJob\"][\"my0:jobTitle\"] === \"\" || this.state.reference[\"my0:referenceBy\"][\"my0:currentJob\"][\"my0:employedIn\"][\"my0:organizationName\"] === \"\";\n\n      if (!this.props.isUpdate) {\n        return React.createElement(Button, {\n          disabled: disabled,\n          type: \"submit\",\n          variant: \"primary\",\n          onClick: this.handleSave,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 337\n          },\n          __self: this\n        }, saveLabel[lang]);\n      } else {\n        return React.createElement(Button, {\n          disabled: disabled,\n          type: \"submit\",\n          variant: \"primary\",\n          onClick: this.handleUpdate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 348\n          },\n          __self: this\n        }, updateLabel[lang]);\n      }\n    };\n  }\n\n  componentWillMount() {\n    this.props.fetchCountries();\n    this.props.fetchTitleProperties();\n    this.props.fetchMainPropertiess(\"my0:Person\");\n    this.props.fetchMainPropertiess(\"my0:Organization\");\n    this.props.fetchMainPropertiess(\"my0:Address\"); // this.props.fetchMainPropertiess(\"my0:WorkHistory\");\n\n    this.setInitialValues();\n  }\n\n  replaceLanguageValue(data, language, value) {\n    let length = data.length;\n\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@language\"] === language) {\n        data[i][\"@value\"] = value;\n        break;\n      }\n    }\n\n    return data;\n  }\n\n  findTranslatedValue(data, lang) {\n    let length = data.length;\n\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@language\"] === lang) {\n        return data[i][\"@value\"];\n      }\n    }\n  }\n\n  findInArray(data, name) {\n    let length = data.length;\n\n    for (let i = 0; i < length; i++) {\n      let index = data[i][\"@type\"].indexOf(name);\n      let newlength = data[i][\"@type\"].length;\n\n      if (index >= 0 && index + name.length >= newlength) {\n        return i;\n      }\n    }\n  }\n\n  renderLabel(translated, name, lang) {\n    let index = this.findInArray(translated, name);\n\n    if (translated[index] === undefined || translated[index][lang] === undefined) {\n      return name;\n    } else {\n      return translated[index][lang];\n    }\n  }\n\n  render() {\n    let _this$state$reference = this.state.reference[\"my0:referenceBy\"],\n        title = _this$state$reference[\"my0:title\"],\n        firstName = _this$state$reference[\"my0:firstName\"],\n        lastName = _this$state$reference[\"my0:lastName\"],\n        email = _this$state$reference[\"my0:email\"],\n        phoneNumberWork = _this$state$reference[\"my0:phoneNumberWork\"],\n        address = _this$state$reference[\"my0:address\"]; // let { \"my0:jobTitle\": jobTitle, \"my0:employedIn\": employedIn } = currentJob;\n    // let { \"my0:organizationName\": organizationName } = employedIn;\n\n    let lang = this.props.language;\n    let _this$props = this.props,\n        translatedProps = _this$props.translatedProps,\n        translatedPropsAddr = _this$props.translatedPropsAddr,\n        translatedPropsOrg = _this$props.translatedPropsOrg,\n        translatedPropsWork = _this$props.translatedPropsWork;\n    const onHide = this.props.onHide;\n    return React.createElement(Modal, {\n      show: this.props.show,\n      onHide: this.props.onHide,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      className: \"reference-modal\",\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      id: \"contained-modal-title-vcenter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }, this.props.isUpdate ? referenceUpdateTitle[lang] : referenceAddTitle[lang])))), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 4,\n      style: {\n        marginTop: \"7px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: {\n        width: \"100%\",\n        justifyContent: \"left\",\n        marginLeft: \"0px\",\n        marginBottom: \"8px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label-rw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }, this.renderLabel(translatedProps, \"title\", lang)), React.createElement(Combobox, {\n      name: \"title\",\n      placeholder: this.renderLabel(translatedProps, \"title\", lang),\n      data: this.props.titles,\n      textField: lang,\n      valueField: \"@type\",\n      value: title,\n      caseSensitive: false,\n      minLength: 3,\n      filter: \"contains\",\n      onChange: value => this.handleSelectChange(value, \"my0:title\", \"person\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:firstName\",\n      name: \"person\",\n      label: this.renderLabel(translatedProps, \"firstName\", lang) + \" *\",\n      type: \"text\",\n      value: firstName,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    })), React.createElement(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:lastName\",\n      label: this.renderLabel(translatedProps, \"lastName\", lang) + \" *\",\n      name: \"person\",\n      type: \"text\",\n      value: lastName,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471\n      },\n      __self: this\n    }))), React.createElement(CustomInput, {\n      id: \"my0:phoneNumberWork\",\n      name: \"person\",\n      label: this.renderLabel(translatedProps, \"phoneNumberWork\", lang),\n      type: \"text\",\n      value: phoneNumberWork,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579\n      },\n      __self: this\n    }), React.createElement(CustomInput, {\n      id: \"my0:email\",\n      label: this.renderLabel(translatedProps, \"email\", lang) + \" *\",\n      name: \"person\",\n      type: \"text\",\n      value: email,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587\n      },\n      __self: this\n    })), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596\n      },\n      __self: this\n    }, this.handleRenderingSubmitButton(lang), React.createElement(Button, {\n      className: \"btn-reset\",\n      onClick: this.clearForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598\n      },\n      __self: this\n    }, resetLabel[lang]), React.createElement(Button, {\n      variant: \"danger\",\n      onClick: onHide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601\n      },\n      __self: this\n    }, cancelLabel[lang])));\n  }\n\n}\n\nconst mapstateToProps = (state, ownProps) => {\n  return {\n    initialValues: state.cv[\"my0:hasReference\"][ownProps.id],\n    language: state.utility.language,\n    countries: retrieveCountryValues(state.utility.countryValues),\n    titles: retrieveBaseProperties(state.utility.titleValues),\n    translatedPropsOrg: retrieveMainProperties(state.utility[\"my0:Organization\"]),\n    translatedPropsAddr: retrieveMainProperties(state.utility[\"my0:Address\"]),\n    translatedProps: retrieveMainProperties(state.utility[\"my0:Person\"]),\n    translatedPropsWork: retrieveMainProperties(state.utility[\"my0:WorkHistory\"])\n  };\n};\n\nexport default connect(mapstateToProps, {\n  createReference,\n  fetchCountries,\n  fetchTitleProperties,\n  updateReference,\n  fetchMainPropertiess,\n  updateCVLastUpdate\n})(ReferenceModal);","map":{"version":3,"sources":["/home/eelezi/thesis/rdf2resume/src/components/Dashboard/Forms/Modals/FormReference/ReferenceModal.jsx"],"names":["React","Component","connect","Modal","Button","Row","Col","Combobox","CustomInput","createReference","updateReference","updateCVLastUpdate","fetchCountries","fetchTitleProperties","fetchMainPropertiess","retrieveCountryValues","retrieveMainProperties","retrieveBaseProperties","cancelLabel","resetLabel","saveLabel","updateLabel","referenceAddTitle","referenceUpdateTitle","ReferenceModal","state","reference","setInitialValues","props","id","isUpdate","inputRef","initialValues","setState","clearForm","handleSelectChange","value","name","obj","label","handleInputChange","e","lang","target","replaceLanguageValue","handleSave","handleUpdate","object","index","handleRenderingSubmitButton","disabled","componentWillMount","data","language","length","i","findTranslatedValue","findInArray","indexOf","newlength","renderLabel","translated","undefined","render","title","firstName","lastName","email","phoneNumberWork","address","translatedProps","translatedPropsAddr","translatedPropsOrg","translatedPropsWork","onHide","show","marginTop","width","justifyContent","marginLeft","marginBottom","titles","mapstateToProps","ownProps","cv","utility","countries","countryValues","titleValues"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Modal, Button, Row, Col } from \"react-bootstrap\";\nimport { Combobox } from \"react-widgets\";\nimport CustomInput from \"../../../../core/CustomInput\";\nimport { createReference, updateReference, updateCVLastUpdate } from \"../../../../../actions\";\nimport {\n  fetchCountries,\n  fetchTitleProperties,\n  fetchMainPropertiess\n} from \"../../../../../actions/utilityActions\";\nimport {\n  retrieveCountryValues,\n  retrieveMainProperties,\n  retrieveBaseProperties\n} from \"../../../../../utilities/utilityQueries\";\nimport {\n  cancelLabel,\n  resetLabel,\n  saveLabel,\n  updateLabel,\n  referenceAddTitle,\n  referenceUpdateTitle\n} from \"../../../../../translations/translations\";\n\nclass ReferenceModal extends Component {\n  state = {\n    reference: {\n      \"@type\": \"my0:Reference\",\n      \"my0:referenceBy\": {\n        \"@type\": \"my0:Person\",\n        \"my0:title\": \"\",\n        \"my0:firstName\": \"\",\n        \"my0:lastName\": \"\",\n        \"my0:address\": {\n          \"@type\": \"my0:Address\",\n          \"my0:city\": [{\n            \"@value\": \"\",\n            \"@language\": \"en\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"it\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"fr\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"de\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"sq\"\n          },\n          ],\n          \"my0:country\": \"\",\n          \"my0:street\": [{\n            \"@value\": \"\",\n            \"@language\": \"en\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"it\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"fr\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"de\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"sq\"\n          },\n          ],\n          \"my0:postalCode\": \"\"\n        },\n        \"my0:phoneNumberWork\": \"\",\n        \"my0:email\": \"\"\n        // \"my0:currentJob\": {\n        //   \"@type\": \"my0:WorkHistory\",\n        //   \"my0:jobTitle\": [{\n        //     \"@value\": \"\",\n        //     \"@language\": \"en\"\n        //   },\n        //   {\n        //     \"@value\": \"\",\n        //     \"@language\": \"it\"\n        //   },\n        //   {\n        //     \"@value\": \"\",\n        //     \"@language\": \"fr\"\n        //   },\n        //   {\n        //     \"@value\": \"\",\n        //     \"@language\": \"de\"\n        //   },\n        //   {\n        //     \"@value\": \"\",\n        //     \"@language\": \"sq\"\n        //   },\n        //   ],\n        //   \"my0:employedIn\": {\n        //     \"@type\": \"my0:Company\",\n        //     \"my0:organizationName\": \"\"\n        //   }\n        // }\n      }\n    }\n  };\n\n  componentWillMount() {\n    this.props.fetchCountries();\n    this.props.fetchTitleProperties();\n    this.props.fetchMainPropertiess(\"my0:Person\");\n    this.props.fetchMainPropertiess(\"my0:Organization\");\n    this.props.fetchMainPropertiess(\"my0:Address\");\n    // this.props.fetchMainPropertiess(\"my0:WorkHistory\");\n    this.setInitialValues();\n  }\n\n  setInitialValues = () => {\n    if (this.props.id !== null && this.props.isUpdate === true) {\n      let inputRef = this.props.initialValues;\n      let reference = { ...this.state.reference };\n      reference[\"my0:referenceBy\"] = inputRef[\"my0:referenceBy\"];\n      this.setState({\n        reference\n      });\n    }\n  };\n\n  clearForm = () => {\n    if (!this.props.isUpdate) {\n      this.setState({\n        reference: {\n          \"@type\": \"my0:Reference\",\n          \"my0:referenceBy\": {\n            \"@type\": \"my0:Person\",\n            \"my0:title\": \"\",\n            \"my0:firstName\": \"\",\n            \"my0:lastName\": \"\",\n            \"my0:address\": {\n              \"@type\": \"my0:Address\",\n              \"my0:city\": [{\n                \"@value\": \"\",\n                \"@language\": \"en\"\n              },\n              {\n                \"@value\": \"\",\n                \"@language\": \"it\"\n              },\n              {\n                \"@value\": \"\",\n                \"@language\": \"fr\"\n              },\n              {\n                \"@value\": \"\",\n                \"@language\": \"de\"\n              },\n              {\n                \"@value\": \"\",\n                \"@language\": \"sq\"\n              },\n              ],\n              \"my0:country\": \"\",\n              \"my0:street\": [{\n                \"@value\": \"\",\n                \"@language\": \"en\"\n              },\n              {\n                \"@value\": \"\",\n                \"@language\": \"it\"\n              },\n              {\n                \"@value\": \"\",\n                \"@language\": \"fr\"\n              },\n              {\n                \"@value\": \"\",\n                \"@language\": \"de\"\n              },\n              {\n                \"@value\": \"\",\n                \"@language\": \"sq\"\n              },\n              ],\n              \"my0:postalCode\": \"\"\n            },\n            \"my0:phoneNumberWork\": \"\",\n            \"my0:email\": \"\",\n            // \"my0:currentJob\": {\n            //   \"@type\": \"my0:WorkHistory\",\n            //   \"my0:jobTitle\": [{\n            //     \"@value\": \"\",\n            //     \"@language\": \"en\"\n            //   },\n            //   {\n            //     \"@value\": \"\",\n            //     \"@language\": \"it\"\n            //   },\n            //   {\n            //     \"@value\": \"\",\n            //     \"@language\": \"fr\"\n            //   },\n            //   {\n            //     \"@value\": \"\",\n            //     \"@language\": \"de\"\n            //   },\n            //   {\n            //     \"@value\": \"\",\n            //     \"@language\": \"sq\"\n            //   },\n            //   ],\n            //   \"my0:employedIn\": {\n            //     \"@type\": \"my0:Company\",\n            //     \"my0:organizationName\": \"\"\n            //   }\n            // }\n          }\n        }\n      });\n    } else {\n      this.setInitialValues();\n    }\n  };\n\n  handleSelectChange = (value, id, name) => {\n    let obj = { ...this.state.reference };\n    let label = id;\n    if (name === \"person\") {\n      obj[\"my0:referenceBy\"][label] = value[\"@type\"];\n    } else if (name === \"address\") {\n      obj[\"my0:referenceBy\"][\"my0:address\"][label] = value[\"@type\"];\n    } else if (name === \"workHistory\") {\n      obj[\"my0:referenceBy\"][\"my0:currentJob\"][label] = value[\"@type\"];\n    } else if (name === \"organization\") {\n      obj[\"my0:referenceBy\"][\"my0:currentJob\"][\"my0:employedIn\"][label] =\n        value[\"@type\"];\n    } else {\n      obj[label] = value[\"@type\"];\n    }\n    this.setState({\n      reference: obj\n    });\n  };\n\n  replaceLanguageValue(data, language, value) {\n    let length = data.length;\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@language\"] === language) {\n        data[i][\"@value\"] = value;\n        break;\n      }\n    }\n    return data;\n  }\n\n  findTranslatedValue(data, lang) {\n    let length = data.length;\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@language\"] === lang) {\n        return data[i][\"@value\"];\n      }\n    }\n  }\n\n  handleInputChange = (e, lang) => {\n    let obj = { ...this.state.reference };\n    let label = e.target.id;\n    if (e.target.name === \"person\") {\n      if (lang) {\n        obj[\"my0:referenceBy\"][label] = this.replaceLanguageValue(obj[\"my0:referenceBy\"][label], lang, e.target.value);\n      } else {\n        obj[\"my0:referenceBy\"][label] = e.target.value;\n      }\n    } else if (e.target.name === \"address\") {\n      if (lang) {\n        obj[\"my0:referenceBy\"][\"my0:address\"][label] = this.replaceLanguageValue(obj[\"my0:referenceBy\"][\"my0:address\"][label], lang, e.target.value);\n      } else {\n        obj[\"my0:referenceBy\"][\"my0:address\"][label] = e.target.value;\n      }\n    } else if (e.target.name === \"workHistory\") {\n      if (lang) {\n        obj[\"my0:referenceBy\"][\"my0:currentJob\"][label] = this.replaceLanguageValue(obj[\"my0:referenceBy\"][\"my0:currentJob\"][label], lang, e.target.value);\n      } else {\n        obj[\"my0:referenceBy\"][\"my0:currentJob\"][label] = e.target.value;\n      }\n    } else if (e.target.name === \"organization\") {\n      if (lang) {\n        obj[\"my0:referenceBy\"][\"my0:currentJob\"][\"my0:employedIn\"][label] = this.replaceLanguageValue(obj[\"my0:referenceBy\"][\"my0:currentJob\"][\"my0:employedIn\"][label], lang, e.target.value);\n      } else {\n        obj[\"my0:referenceBy\"][\"my0:currentJob\"][\"my0:employedIn\"][label] =\n          e.target.value;\n      }\n    } else {\n      if (lang) {\n        obj[label] = this.replaceLanguageValue(obj[label], lang, e.target.value);\n      } else {\n        obj[label] = e.target.value;\n      }\n    }\n    this.setState({\n      reference: obj\n    });\n  };\n\n  handleSave = () => {\n    this.props.createReference(this.state.reference);\n    this.props.updateCVLastUpdate();\n  };\n\n  handleUpdate = () => {\n    this.props.updateReference({\n      object: this.state.reference,\n      index: this.props.id\n    });\n    this.props.updateCVLastUpdate();\n  };\n\n  handleRenderingSubmitButton = lang => {\n    let disabled =\n      this.state.reference[\"my0:referenceBy\"][\"my0:firstName\"] === \"\" ||\n      this.state.reference[\"my0:referenceBy\"][\"my0:lastName\"] === \"\" ||\n      this.state.reference[\"my0:referenceBy\"][\"my0:currentJob\"][\n      \"my0:jobTitle\"\n      ] === \"\" ||\n      this.state.reference[\"my0:referenceBy\"][\"my0:currentJob\"][\n      \"my0:employedIn\"\n      ][\"my0:organizationName\"] === \"\";\n    if (!this.props.isUpdate) {\n      return (\n        <Button\n          disabled={disabled}\n          type=\"submit\"\n          variant=\"primary\"\n          onClick={this.handleSave}\n        >\n          {saveLabel[lang]}\n        </Button>\n      );\n    } else {\n      return (\n        <Button\n          disabled={disabled}\n          type=\"submit\"\n          variant=\"primary\"\n          onClick={this.handleUpdate}\n        >\n          {updateLabel[lang]}\n        </Button>\n      );\n    }\n  };\n\n  findInArray(data, name) {\n    let length = data.length;\n    for (let i = 0; i < length; i++) {\n      let index = data[i][\"@type\"].indexOf(name);\n      let newlength = data[i][\"@type\"].length;\n      if (index >= 0 && index + name.length >= newlength) {\n        return i;\n      }\n    }\n  }\n\n  renderLabel(translated, name, lang) {\n    let index = this.findInArray(translated, name);\n    if (\n      translated[index] === undefined ||\n      translated[index][lang] === undefined\n    ) {\n      return name;\n    } else {\n      return translated[index][lang];\n    }\n  }\n\n  render() {\n    let {\n      \"my0:title\": title,\n      \"my0:firstName\": firstName,\n      \"my0:lastName\": lastName,\n      \"my0:email\": email,\n      \"my0:phoneNumberWork\": phoneNumberWork,\n      // \"my0:currentJob\": currentJob,\n      \"my0:address\": address\n    } = this.state.reference[\"my0:referenceBy\"];\n\n    // let { \"my0:jobTitle\": jobTitle, \"my0:employedIn\": employedIn } = currentJob;\n\n    // let { \"my0:organizationName\": organizationName } = employedIn;\n\n    let lang = this.props.language;\n\n    let {\n      translatedProps,\n      translatedPropsAddr,\n      translatedPropsOrg,\n      translatedPropsWork\n    } = this.props;\n\n    const { onHide } = this.props;\n    return (\n      <Modal\n        show={this.props.show}\n        onHide={this.props.onHide}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        className=\"reference-modal\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            <Row>\n              <Col md={12}>\n                {this.props.isUpdate\n                  ? referenceUpdateTitle[lang]\n                  : referenceAddTitle[lang]}\n              </Col>\n            </Row>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Row>\n            <Col md={4} style={{ marginTop: \"7px\" }}>\n              <Row\n                style={{\n                  width: \"100%\",\n                  justifyContent: \"left\",\n                  marginLeft: \"0px\",\n                  marginBottom: \"8px\"\n                }}\n              >\n                <label className=\"label-rw\">\n                  {this.renderLabel(translatedProps, \"title\", lang)}\n                </label>\n                <Combobox\n                  name=\"title\"\n                  placeholder={this.renderLabel(translatedProps, \"title\", lang)}\n                  data={this.props.titles}\n                  textField={lang}\n                  valueField=\"@type\"\n                  value={title}\n                  caseSensitive={false}\n                  minLength={3}\n                  filter=\"contains\"\n                  onChange={value =>\n                    this.handleSelectChange(value, \"my0:title\", \"person\")\n                  }\n                />\n              </Row>\n            </Col>\n            <Col md={4}>\n              <CustomInput\n                id=\"my0:firstName\"\n                name=\"person\"\n                label={\n                  this.renderLabel(translatedProps, \"firstName\", lang) + \" *\"\n                }\n                type=\"text\"\n                value={firstName}\n                handleChange={this.handleInputChange}\n              />\n            </Col>\n            <Col md={4}>\n              <CustomInput\n                id=\"my0:lastName\"\n                label={\n                  this.renderLabel(translatedProps, \"lastName\", lang) + \" *\"\n                }\n                name=\"person\"\n                type=\"text\"\n                value={lastName}\n                handleChange={this.handleInputChange}\n              />\n            </Col>\n          </Row>\n          {/* <Row>\n            <Col md={6}>\n              <CustomInput\n                id=\"my0:jobTitle\"\n                name=\"workHistory\"\n                label={\n                  this.renderLabel(translatedPropsWork, \"jobTitle\", lang) + \" *\"\n                }\n                type=\"text\"\n                value={this.findTranslatedValue(jobTitle, lang)}\n                handleChange={(e) => this.handleInputChange(e, lang)}\n              />\n            </Col>\n            <Col md={6}>\n              <CustomInput\n                id=\"my0:organizationName\"\n                name=\"organization\"\n                label={\n                  this.renderLabel(\n                    translatedPropsOrg,\n                    \"organizationName\",\n                    lang\n                  ) + \" *\"\n                }\n                type=\"text\"\n                value={organizationName}\n                handleChange={this.handleInputChange}\n              />\n            </Col>\n          </Row> */}\n          {/* <div>\n            <CustomInput\n              id=\"my0:street\"\n              name=\"address\"\n              label={this.renderLabel(translatedPropsAddr, \"street\", lang)}\n              type=\"text\"\n              value={this.findTranslatedValue(address[\"my0:street\"], lang)}\n              handleChange={(e) => this.handleInputChange(e, lang)}\n            />\n            <Row>\n              <Col md={6}>\n                <CustomInput\n                  id=\"my0:postalCode\"\n                  label={this.renderLabel(\n                    translatedPropsAddr,\n                    \"postalCode\",\n                    lang\n                  )}\n                  name=\"address\"\n                  type=\"text\"\n                  value={address[\"my0:postalCode\"]}\n                  handleChange={this.handleInputChange}\n                />\n              </Col>\n              <Col md={6}>\n                <CustomInput\n                  id=\"my0:city\"\n                  name=\"address\"\n                  label={this.renderLabel(translatedPropsAddr, \"city\", lang)}\n                  type=\"text\"\n                  value={this.findTranslatedValue(address[\"my0:city\"], lang)}\n                  handleChange={(e) => this.handleInputChange(e, lang)}\n                />\n              </Col>\n            </Row>\n            <Row\n              style={{\n                width: \"100%\",\n                justifyContent: \"left\",\n                marginLeft: \"0px\",\n                marginBottom: \"8px\"\n              }}\n            >\n              <label className=\"label-rw\">\n                {this.renderLabel(translatedPropsAddr, \"country\", lang)}\n              </label>\n              <Combobox\n                name=\"my0:country\"\n                placeholder={this.renderLabel(\n                  translatedPropsAddr,\n                  \"country\",\n                  lang\n                )}\n                data={this.props.countries}\n                textField={lang}\n                valueField=\"@type\"\n                value={address[\"my0:country\"]}\n                caseSensitive={false}\n                minLength={3}\n                filter=\"contains\"\n                onChange={value =>\n                  this.handleSelectChange(value, \"my0:country\", \"address\")\n                }\n              />\n            </Row>\n          </div> */}\n          <CustomInput\n            id=\"my0:phoneNumberWork\"\n            name=\"person\"\n            label={this.renderLabel(translatedProps, \"phoneNumberWork\", lang)}\n            type=\"text\"\n            value={phoneNumberWork}\n            handleChange={this.handleInputChange}\n          />\n          <CustomInput\n            id=\"my0:email\"\n            label={this.renderLabel(translatedProps, \"email\", lang) + \" *\"}\n            name=\"person\"\n            type=\"text\"\n            value={email}\n            handleChange={this.handleInputChange}\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          {this.handleRenderingSubmitButton(lang)}\n          <Button className=\"btn-reset\" onClick={this.clearForm}>\n            {resetLabel[lang]}\n          </Button>\n          <Button variant=\"danger\" onClick={onHide}>\n            {cancelLabel[lang]}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapstateToProps = (state, ownProps) => {\n  return {\n    initialValues: state.cv[\"my0:hasReference\"][ownProps.id],\n    language: state.utility.language,\n    countries: retrieveCountryValues(state.utility.countryValues),\n    titles: retrieveBaseProperties(state.utility.titleValues),\n    translatedPropsOrg: retrieveMainProperties(\n      state.utility[\"my0:Organization\"]\n    ),\n    translatedPropsAddr: retrieveMainProperties(state.utility[\"my0:Address\"]),\n    translatedProps: retrieveMainProperties(state.utility[\"my0:Person\"]),\n    translatedPropsWork: retrieveMainProperties(\n      state.utility[\"my0:WorkHistory\"]\n    )\n  };\n};\n\nexport default connect(\n  mapstateToProps,\n  {\n    createReference,\n    fetchCountries,\n    fetchTitleProperties,\n    updateReference,\n    fetchMainPropertiess,\n    updateCVLastUpdate\n  }\n)(ReferenceModal);\n"]},"metadata":{},"sourceType":"module"}