{"ast":null,"code":"import _objectSpread from \"/home/eelezi/thesis/rdf2resume/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { FETCH_ALL_COMPANY_SIZES, FETCH_ALL_COUNTRIES, FETCH_ALL_CV_CAREER_LEVELS, FETCH_ALL_CV_JOB_MODES, FETCH_ALL_EDU_DEGREES, FETCH_ALL_GENDERS, FETCH_ALL_IMS, FETCH_ALL_INDUSTRIES, FETCH_ALL_PATENTS, FETCH_ALL_REGIONS, FETCH_ALL_WEBSITES, FETCH_ALL_LANGUAGE_SELF_ASSESSMENT_PROPERTIES, FETCH_ALL_OTHER_CV_INFO_TYPES, FETCH_ALL_SKILL_CATEGORIES, FETCH_ALL_SELF_ASSESSMENT_PROPERTIES, FETCH_ALL_TITLE_PROPERTIES, TOGGLE_SPINNER, UPDATE_ERROR, UPDATE_LANGUAGE, FETCH_MAIN_PROPERTIES, FETCH_SKILL_SUGGESTION } from \"../actions/types\";\nconst INITIAL_STATE = {\n  ims: [],\n  industries: [],\n  skillCategories: [],\n  patents: [],\n  regions: [],\n  websites: [],\n  'my0:CV': [],\n  'my0:Person': [],\n  'my0:WorkHistory': [],\n  'my0:Education': [],\n  'my0:Organization': [],\n  'my0:Address': [],\n  'my0:Publication': [],\n  'my0:Patent': [],\n  'my0:Project': [],\n  'my0:Reference': [],\n  'my0:Skill': [],\n  'my0:LanguageSkill': [],\n  'my0:Course': [],\n  'my0:OtherInfo': [],\n  'my0:Website': [],\n  'my0:InstantMessaging': [],\n  'my0:HonorAward': [],\n  'my0:Target': [],\n  countryValues: [],\n  genderValues: [],\n  jobModeValues: [],\n  careerLevelValues: [],\n  languageSelfAssessmentValues: [],\n  companySizeValues: [],\n  otherCVInfoValues: [],\n  titleValues: [],\n  eduDegreeValues: [],\n  showSpinner: false,\n  error: {\n    'my0:firstName': false,\n    'my0:lastName': false,\n    'my0:email': false\n  },\n  language: 'en',\n  skillSuggestion: []\n};\nexport default ((state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case FETCH_ALL_COMPANY_SIZES:\n      return _objectSpread({}, state, {\n        companySizeValues: action.payload\n      });\n\n    case FETCH_ALL_COUNTRIES:\n      return _objectSpread({}, state, {\n        countryValues: action.payload\n      });\n\n    case FETCH_ALL_CV_CAREER_LEVELS:\n      return _objectSpread({}, state, {\n        careerLevelValues: action.payload\n      });\n\n    case FETCH_ALL_SKILL_CATEGORIES:\n      return _objectSpread({}, state, {\n        skillCategories: action.payload\n      });\n\n    case FETCH_ALL_CV_JOB_MODES:\n      return _objectSpread({}, state, {\n        jobModeValues: action.payload\n      });\n\n    case FETCH_ALL_EDU_DEGREES:\n      return _objectSpread({}, state, {\n        eduDegreeValues: action.payload\n      });\n\n    case FETCH_SKILL_SUGGESTION:\n      return _objectSpread({}, state, {\n        skillSuggestion: action.payload\n      });\n\n    case FETCH_ALL_GENDERS:\n      return _objectSpread({}, state, {\n        genderValues: action.payload\n      });\n\n    case FETCH_ALL_LANGUAGE_SELF_ASSESSMENT_PROPERTIES:\n      return _objectSpread({}, state, {\n        languageSelfAssessmentValues: action.payload\n      });\n\n    case FETCH_ALL_OTHER_CV_INFO_TYPES:\n      return _objectSpread({}, state, {\n        otherCVInfoValues: action.payload\n      });\n\n    case FETCH_ALL_SELF_ASSESSMENT_PROPERTIES:\n      return _objectSpread({}, state, {\n        selfAssessmentValues: action.payload\n      });\n\n    case FETCH_ALL_TITLE_PROPERTIES:\n      return _objectSpread({}, state, {\n        titleValues: action.payload\n      });\n\n    case TOGGLE_SPINNER:\n      return _objectSpread({}, state, {\n        showSpinner: action.payload\n      });\n\n    case UPDATE_ERROR:\n      let stats = _objectSpread({}, state['error']);\n\n      stats[action.payload.object] = action.payload.value;\n      return _objectSpread({}, state, {\n        error: stats\n      });\n\n    case UPDATE_LANGUAGE:\n      return _objectSpread({}, state, {\n        language: action.payload\n      });\n\n    case FETCH_ALL_IMS:\n      return _objectSpread({}, state, {\n        ims: action.payload\n      });\n\n    case FETCH_ALL_INDUSTRIES:\n      return _objectSpread({}, state, {\n        industries: action.payload\n      });\n\n    case FETCH_ALL_WEBSITES:\n      return _objectSpread({}, state, {\n        websites: action.payload\n      });\n\n    case FETCH_ALL_REGIONS:\n      return _objectSpread({}, state, {\n        regions: action.payload\n      });\n\n    case FETCH_ALL_PATENTS:\n      return _objectSpread({}, state, {\n        patents: action.payload\n      });\n\n    case FETCH_MAIN_PROPERTIES:\n      return _objectSpread({}, state, {\n        [action.payload.object]: action.payload.data\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/eelezi/thesis/rdf2resume/src/reducers/utilityReducer.js"],"names":["FETCH_ALL_COMPANY_SIZES","FETCH_ALL_COUNTRIES","FETCH_ALL_CV_CAREER_LEVELS","FETCH_ALL_CV_JOB_MODES","FETCH_ALL_EDU_DEGREES","FETCH_ALL_GENDERS","FETCH_ALL_IMS","FETCH_ALL_INDUSTRIES","FETCH_ALL_PATENTS","FETCH_ALL_REGIONS","FETCH_ALL_WEBSITES","FETCH_ALL_LANGUAGE_SELF_ASSESSMENT_PROPERTIES","FETCH_ALL_OTHER_CV_INFO_TYPES","FETCH_ALL_SKILL_CATEGORIES","FETCH_ALL_SELF_ASSESSMENT_PROPERTIES","FETCH_ALL_TITLE_PROPERTIES","TOGGLE_SPINNER","UPDATE_ERROR","UPDATE_LANGUAGE","FETCH_MAIN_PROPERTIES","FETCH_SKILL_SUGGESTION","INITIAL_STATE","ims","industries","skillCategories","patents","regions","websites","countryValues","genderValues","jobModeValues","careerLevelValues","languageSelfAssessmentValues","companySizeValues","otherCVInfoValues","titleValues","eduDegreeValues","showSpinner","error","language","skillSuggestion","state","action","type","payload","selfAssessmentValues","stats","object","value","data"],"mappings":"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","sourcesContent":["import {\n  FETCH_ALL_COMPANY_SIZES,\n  FETCH_ALL_COUNTRIES,\n  FETCH_ALL_CV_CAREER_LEVELS,\n  FETCH_ALL_CV_JOB_MODES,\n  FETCH_ALL_EDU_DEGREES,\n  FETCH_ALL_GENDERS,\n  FETCH_ALL_IMS,\n  FETCH_ALL_INDUSTRIES,\n  FETCH_ALL_PATENTS,\n  FETCH_ALL_REGIONS,\n  FETCH_ALL_WEBSITES,\n  FETCH_ALL_LANGUAGE_SELF_ASSESSMENT_PROPERTIES,\n  FETCH_ALL_OTHER_CV_INFO_TYPES,\n  FETCH_ALL_SKILL_CATEGORIES,\n  FETCH_ALL_SELF_ASSESSMENT_PROPERTIES,\n  FETCH_ALL_TITLE_PROPERTIES,\n  TOGGLE_SPINNER,\n  UPDATE_ERROR,\n  UPDATE_LANGUAGE,\n  FETCH_MAIN_PROPERTIES,\n  FETCH_SKILL_SUGGESTION\n} from \"../actions/types\";\n\nconst INITIAL_STATE = {\n  ims: [],\n  industries: [],\n  skillCategories: [],\n  patents: [],\n  regions: [],\n  websites: [],\n  'my0:CV': [],\n  'my0:Person': [],\n  'my0:WorkHistory': [],\n  'my0:Education': [],\n  'my0:Organization': [],\n  'my0:Address': [],\n  'my0:Publication': [],\n  'my0:Patent': [],\n  'my0:Project': [],\n  'my0:Reference': [],\n  'my0:Skill': [],\n  'my0:LanguageSkill': [],\n  'my0:Course': [],\n  'my0:OtherInfo': [],\n  'my0:Website': [],\n  'my0:InstantMessaging': [],\n  'my0:HonorAward': [],\n  'my0:Target': [],\n  countryValues: [],\n  genderValues: [],\n  jobModeValues: [],\n  careerLevelValues: [],\n  languageSelfAssessmentValues: [],\n  companySizeValues: [],\n  otherCVInfoValues: [],\n  titleValues: [],\n  eduDegreeValues: [],\n  showSpinner: false,\n  error: {\n    'my0:firstName': false,\n    'my0:lastName': false,\n    'my0:email': false\n  },\n  language: 'en',\n  skillSuggestion: []\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case FETCH_ALL_COMPANY_SIZES:\n      return { ...state, companySizeValues: action.payload };\n    case FETCH_ALL_COUNTRIES:\n      return { ...state, countryValues: action.payload };\n    case FETCH_ALL_CV_CAREER_LEVELS:\n      return { ...state, careerLevelValues: action.payload };\n    case FETCH_ALL_SKILL_CATEGORIES:\n         return { ...state, skillCategories: action.payload };\n    case FETCH_ALL_CV_JOB_MODES:\n      return { ...state, jobModeValues: action.payload };\n    case FETCH_ALL_EDU_DEGREES:\n      return { ...state, eduDegreeValues: action.payload };\n    case FETCH_SKILL_SUGGESTION:\n      return { ...state, skillSuggestion: action.payload };\n    case FETCH_ALL_GENDERS:\n      return { ...state, genderValues: action.payload };\n    case FETCH_ALL_LANGUAGE_SELF_ASSESSMENT_PROPERTIES:\n      return { ...state, languageSelfAssessmentValues: action.payload };\n    case FETCH_ALL_OTHER_CV_INFO_TYPES:\n      return { ...state, otherCVInfoValues: action.payload };\n    case FETCH_ALL_SELF_ASSESSMENT_PROPERTIES:\n      return { ...state, selfAssessmentValues: action.payload };\n    case FETCH_ALL_TITLE_PROPERTIES:\n      return { ...state, titleValues: action.payload };\n    case TOGGLE_SPINNER:\n        return { ...state, showSpinner: action.payload };\n    case UPDATE_ERROR:\n      let stats = {...state['error']};\n      stats[action.payload.object] = action.payload.value;\n      return { ...state, error: stats };\n    case UPDATE_LANGUAGE:\n        return { ...state, language: action.payload };\n    case FETCH_ALL_IMS:\n        return { ...state, ims: action.payload };\n    case FETCH_ALL_INDUSTRIES:\n        return { ...state, industries: action.payload };\n    case FETCH_ALL_WEBSITES:\n        return { ...state, websites: action.payload };\n    case FETCH_ALL_REGIONS:\n        return { ...state, regions: action.payload };\n    case FETCH_ALL_PATENTS:\n        return { ...state, patents: action.payload };\n    case FETCH_MAIN_PROPERTIES:\n        return { ...state,  [action.payload.object]: action.payload.data };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}