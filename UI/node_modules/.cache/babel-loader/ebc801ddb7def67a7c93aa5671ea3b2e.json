{"ast":null,"code":"import _objectSpread from \"/home/eelezi/thesis/rdf2resume/UI/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/eelezi/thesis/rdf2resume/UI/src/components/Dashboard/Forms/Modals/FormLanguage/LanguageModal.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport { Modal, Row, Col, Button } from \"react-bootstrap\";\nimport { Combobox } from \"react-widgets\";\nimport { createOtherSkill, updateOtherSkill, updateCVLastUpdate } from \"../../../../../actions\";\nimport CustomInput from \"../../../../core/CustomInput\";\nimport CustomCheckbox from \"../../../../core/CustomCheckbox\";\nimport { fetchLanguageSkillSelfAssessmentProperties, fetchMainPropertiess } from \"../../../../../actions/utilityActions\";\nimport { retrieveMainProperties, retrieveBaseProperties } from \"../../../../../utilities/utilityQueries\";\nimport { cancelLabel, resetLabel, saveLabel, updateLabel, languageAddTitle, languageUpdateTitle } from \"../../../../../translations/translations\";\n\nclass LanguageModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      languageSkill: {\n        \"@type\": \"my0:LanguageSkill\",\n        \"my0:skillName\": [{\n          \"@value\": \"\",\n          \"@language\": \"en\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"it\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"fr\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"de\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"sq\"\n        }],\n        \"my0:languageSkillProficiency\": \"\",\n        \"my0:skillHasCertificate\": true,\n        \"my0:skillCertificateName\": [{\n          \"@value\": \"\",\n          \"@language\": \"en\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"it\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"fr\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"de\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"sq\"\n        }]\n      }\n    };\n\n    this.setInitialValues = () => {\n      if (this.props.id !== null && this.props.isUpdate === true) {\n        let inputRef = this.props.initialValues;\n\n        let languageSkill = _objectSpread({}, this.state.languageSkill);\n\n        languageSkill[\"my0:skillName\"] = inputRef[\"my0:skillName\"];\n        languageSkill[\"my0:languageSkillProficiency\"] = inputRef[\"my0:languageSkillProficiency\"];\n        languageSkill[\"my0:skillHasCertificate\"] = inputRef[\"my0:skillHasCertificate\"];\n        languageSkill[\"my0:skillCertificateName\"] = inputRef[\"my0:skillCertificateName\"];\n        this.setState({\n          languageSkill\n        });\n      }\n    };\n\n    this.clearForm = () => {\n      if (!this.props.isUpdate) {\n        this.setState({\n          languageSkill: {\n            \"@type\": \"my0:LanguageSkill\",\n            \"my0:skillName\": [{\n              \"@value\": \"\",\n              \"@language\": \"en\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"it\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"fr\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"de\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"sq\"\n            }],\n            \"my0:languageSkillProficiency\": \"\",\n            \"my0:skillHasCertificate\": true,\n            \"my0:skillCertificateName\": [{\n              \"@value\": \"\",\n              \"@language\": \"en\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"it\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"fr\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"de\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"sq\"\n            }]\n          }\n        });\n      } else {\n        this.setInitialValues();\n      }\n    };\n\n    this.handleInputChange = (e, lang) => {\n      let label = e.target.id;\n\n      let languageSkill = _objectSpread({}, this.state.languageSkill);\n\n      if (lang) {\n        languageSkill[label] = this.replaceLanguageValue(languageSkill[label], lang, e.target.value);\n      } else {\n        languageSkill[label] = e.target.value;\n      }\n\n      this.setState({\n        languageSkill\n      });\n    };\n\n    this.handleSelectChange = (value, id) => {\n      let obj = _objectSpread({}, this.state.languageSkill);\n\n      let label = id;\n      obj[label] = value[\"@type\"];\n      this.setState({\n        languageSkill: obj\n      });\n    };\n\n    this.handleSave = e => {\n      e.preventDefault();\n      this.props.createOtherSkill(this.state.languageSkill);\n      this.props.updateCVLastUpdate();\n    };\n\n    this.handleUpdate = e => {\n      this.props.updateOtherSkill({\n        object: this.state.languageSkill,\n        index: this.props.id\n      });\n      this.props.updateCVLastUpdate();\n    };\n\n    this.handleRenderingSubmitButton = lang => {\n      let isDisabled = this.state.languageSkill[\"my0:skillName\"] === \"\" || this.state.languageSkill[\"my0:languageSkillProficiency\"] === \"\";\n\n      if (!this.props.isUpdate) {\n        return React.createElement(Button, {\n          disabled: isDisabled,\n          type: \"submit\",\n          variant: \"primary\",\n          onClick: this.handleSave,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        }, saveLabel[lang]);\n      } else {\n        return React.createElement(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          disabled: isDisabled,\n          onClick: e => this.handleUpdate(e, this.props.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252\n          },\n          __self: this\n        }, updateLabel[lang]);\n      }\n    };\n\n    this.handleCheckboxChange = e => {\n      let languageSkill = _objectSpread({}, this.state.languageSkill);\n\n      languageSkill[e.target.id] = e.target.checked;\n      this.setState({\n        languageSkill\n      });\n    };\n  }\n\n  componentWillMount() {\n    this.props.fetchLanguageSkillSelfAssessmentProperties();\n    this.props.fetchMainPropertiess(\"my0:LanguageSkill\");\n    this.props.fetchMainPropertiess(\"my0:Skill\");\n    this.setInitialValues();\n  }\n\n  replaceLanguageValue(data, language, value) {\n    let length = data.length;\n\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@language\"] === language) {\n        data[i][\"@value\"] = value;\n        break;\n      }\n    }\n\n    return data;\n  }\n\n  findTranslatedValue(data, lang) {\n    let length = data.length;\n\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@language\"] === lang) {\n        return data[i][\"@value\"];\n      }\n    }\n  }\n\n  findInArray(data, name) {\n    let length = data.length;\n\n    for (let i = 0; i < length; i++) {\n      let index = data[i][\"@type\"].indexOf(name);\n      let newlength = data[i][\"@type\"].length;\n\n      if (index >= 0 && index + name.length >= newlength) {\n        return i;\n      }\n    }\n  }\n\n  renderLabel(translated, name, lang) {\n    let index = this.findInArray(translated, name);\n\n    if (translated[index] === undefined || translated[index][lang] === undefined) {\n      return name;\n    } else {\n      return translated[index][lang];\n    }\n  }\n\n  render() {\n    let _this$state$languageS = this.state.languageSkill,\n        skillName = _this$state$languageS[\"my0:skillName\"],\n        skillHasCertificate = _this$state$languageS[\"my0:skillHasCertificate\"],\n        skillCertificateName = _this$state$languageS[\"my0:skillCertificateName\"],\n        languageSkillProficiency = _this$state$languageS[\"my0:languageSkillProficiency\"];\n    let onHide = this.props.onHide;\n    let lang = this.props.language;\n    let types = this.props.types;\n    let _this$props = this.props,\n        translatedProps = _this$props.translatedProps,\n        translatedPropsSkill = _this$props.translatedPropsSkill;\n    return React.createElement(Modal, {\n      show: this.props.show,\n      onHide: this.props.onHide,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      className: \"reference-modal\",\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      id: \"contained-modal-title-vcenter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, this.props.isUpdate ? languageUpdateTitle[lang] : languageAddTitle[lang])))), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: {\n        alignItems: \"flex-start\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 1,\n      style: {\n        paddingRight: \"25px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }), React.createElement(Col, {\n      md: 10,\n      style: {\n        paddingRight: \"25px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: {\n        justifyContent: \"flex-start\",\n        alignItems: \"flex-start\",\n        display: \"flex\",\n        marginLeft: \"0px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:skillName\",\n      label: this.renderLabel(translatedPropsSkill, \"skillName\", lang) + \" *\",\n      type: \"text\",\n      value: this.findTranslatedValue(skillName, lang),\n      handleChange: e => this.handleInputChange(e, lang),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    })), React.createElement(Row, {\n      style: {\n        justifyContent: \"flex-start\",\n        alignItems: \"flex-start\",\n        display: \"flex\",\n        marginLeft: \"0px\",\n        marginTop: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label-rw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, this.renderLabel(translatedProps, \"languageSkillProficiency\", lang) + \" *\"), React.createElement(Combobox, {\n      name: \"my0:languageSkillProficiency\",\n      placeholder: this.renderLabel(translatedProps, \"languageSkillProficiency\", lang),\n      data: types,\n      textField: lang,\n      valueField: \"@type\",\n      value: languageSkillProficiency,\n      caseSensitive: false,\n      minLength: 3,\n      filter: \"contains\",\n      onChange: value => this.handleSelectChange(value, \"my0:languageSkillProficiency\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }), React.createElement(CustomCheckbox, {\n      id: \"my0:skillHasCertificate\",\n      type: \"checkbox\",\n      label: this.renderLabel(translatedProps, \"skillHasCertificate\", lang),\n      checked: skillHasCertificate,\n      handleChange: this.handleCheckboxChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }), React.createElement(CustomInput, {\n      id: \"my0:skillCertificateName\",\n      label: this.renderLabel(translatedProps, \"skillCertificateName\", lang),\n      type: \"text\",\n      value: this.findTranslatedValue(skillCertificateName, lang),\n      handleChange: e => this.handleInputChange(e, lang),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      md: 1,\n      style: {\n        paddingRight: \"25px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, this.handleRenderingSubmitButton(lang), React.createElement(Button, {\n      className: \"btn-reset\",\n      onClick: this.clearForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, resetLabel[lang]), React.createElement(Button, {\n      variant: \"danger\",\n      onClick: onHide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, cancelLabel[lang])));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    initialValues: state.cv[\"my0:hasSkill\"][ownProps.id],\n    language: state.utility.language,\n    translatedProps: retrieveMainProperties(state.utility[\"my0:LanguageSkill\"]),\n    translatedPropsSkill: retrieveMainProperties(state.utility[\"my0:Skill\"]),\n    types: retrieveBaseProperties(state.utility.languageSelfAssessmentValues)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  createOtherSkill,\n  updateOtherSkill,\n  fetchLanguageSkillSelfAssessmentProperties,\n  fetchMainPropertiess,\n  updateCVLastUpdate\n})(LanguageModal);","map":{"version":3,"sources":["/home/eelezi/thesis/rdf2resume/UI/src/components/Dashboard/Forms/Modals/FormLanguage/LanguageModal.jsx"],"names":["React","Component","connect","Swal","Modal","Row","Col","Button","Combobox","createOtherSkill","updateOtherSkill","updateCVLastUpdate","CustomInput","CustomCheckbox","fetchLanguageSkillSelfAssessmentProperties","fetchMainPropertiess","retrieveMainProperties","retrieveBaseProperties","cancelLabel","resetLabel","saveLabel","updateLabel","languageAddTitle","languageUpdateTitle","LanguageModal","state","languageSkill","setInitialValues","props","id","isUpdate","inputRef","initialValues","setState","clearForm","handleInputChange","e","lang","label","target","replaceLanguageValue","value","handleSelectChange","obj","handleSave","preventDefault","handleUpdate","object","index","handleRenderingSubmitButton","isDisabled","handleCheckboxChange","checked","componentWillMount","data","language","length","i","findTranslatedValue","findInArray","name","indexOf","newlength","renderLabel","translated","undefined","render","skillName","skillHasCertificate","skillCertificateName","languageSkillProficiency","onHide","types","translatedProps","translatedPropsSkill","show","alignItems","paddingRight","justifyContent","display","marginLeft","marginTop","mapStateToProps","ownProps","cv","utility","languageSelfAssessmentValues"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport { Modal, Row, Col, Button } from \"react-bootstrap\";\nimport { Combobox } from \"react-widgets\";\nimport { createOtherSkill, updateOtherSkill, updateCVLastUpdate } from \"../../../../../actions\";\nimport CustomInput from \"../../../../core/CustomInput\";\nimport CustomCheckbox from \"../../../../core/CustomCheckbox\";\nimport {\n  fetchLanguageSkillSelfAssessmentProperties,\n  fetchMainPropertiess\n} from \"../../../../../actions/utilityActions\";\nimport {\n  retrieveMainProperties,\n  retrieveBaseProperties\n} from \"../../../../../utilities/utilityQueries\";\nimport {\n  cancelLabel,\n  resetLabel,\n  saveLabel,\n  updateLabel,\n  languageAddTitle,\n  languageUpdateTitle\n} from \"../../../../../translations/translations\";\n\nclass LanguageModal extends Component {\n  state = {\n    languageSkill: {\n      \"@type\": \"my0:LanguageSkill\",\n      \"my0:skillName\": [{\n        \"@value\": \"\",\n        \"@language\": \"en\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"it\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"fr\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"de\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"sq\"\n      },\n      ],\n      \"my0:languageSkillProficiency\": \"\",\n      \"my0:skillHasCertificate\": true,\n      \"my0:skillCertificateName\": [{\n        \"@value\": \"\",\n        \"@language\": \"en\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"it\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"fr\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"de\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"sq\"\n      },\n      ]\n    }\n  };\n\n  componentWillMount() {\n    this.props.fetchLanguageSkillSelfAssessmentProperties();\n    this.props.fetchMainPropertiess(\"my0:LanguageSkill\");\n    this.props.fetchMainPropertiess(\"my0:Skill\");\n    this.setInitialValues();\n  }\n\n  setInitialValues = () => {\n    if (this.props.id !== null && this.props.isUpdate === true) {\n      let inputRef = this.props.initialValues;\n      let languageSkill = { ...this.state.languageSkill };\n      languageSkill[\"my0:skillName\"] = inputRef[\"my0:skillName\"];\n      languageSkill[\"my0:languageSkillProficiency\"] =\n        inputRef[\"my0:languageSkillProficiency\"];\n      languageSkill[\"my0:skillHasCertificate\"] = inputRef[\"my0:skillHasCertificate\"];\n      languageSkill[\"my0:skillCertificateName\"] = inputRef[\"my0:skillCertificateName\"];\n\n      this.setState({\n        languageSkill\n      });\n    }\n  };\n\n  clearForm = () => {\n    if (!this.props.isUpdate) {\n      this.setState({\n        languageSkill: {\n          \"@type\": \"my0:LanguageSkill\",\n          \"my0:skillName\": [{\n            \"@value\": \"\",\n            \"@language\": \"en\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"it\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"fr\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"de\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"sq\"\n          },\n          ],\n          \"my0:languageSkillProficiency\": \"\",\n          \"my0:skillHasCertificate\": true,\n          \"my0:skillCertificateName\": [{\n            \"@value\": \"\",\n            \"@language\": \"en\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"it\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"fr\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"de\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"sq\"\n          },\n          ]\n        }\n      });\n    } else {\n      this.setInitialValues();\n    }\n  };\n\n  replaceLanguageValue(data, language, value) {\n    let length = data.length;\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@language\"] === language) {\n        data[i][\"@value\"] = value;\n        break;\n      }\n    }\n    return data;\n  }\n\n  findTranslatedValue(data, lang) {\n    let length = data.length;\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@language\"] === lang) {\n        return data[i][\"@value\"];\n      }\n    }\n  }\n\n  handleInputChange = (e, lang) => {\n    let label = e.target.id;\n    let languageSkill = { ...this.state.languageSkill };\n    if (lang) {\n      languageSkill[label] = this.replaceLanguageValue(languageSkill[label], lang, e.target.value);\n    } else {\n      languageSkill[label] = e.target.value;\n    }\n    this.setState({\n      languageSkill\n    });\n  };\n\n  handleSelectChange = (value, id) => {\n    let obj = { ...this.state.languageSkill };\n    let label = id;\n    obj[label] = value[\"@type\"];\n    this.setState({\n      languageSkill: obj\n    });\n  };\n\n  handleSave = e => {\n    e.preventDefault();\n    this.props.createOtherSkill(this.state.languageSkill);\n    this.props.updateCVLastUpdate();\n  };\n\n  handleUpdate = e => {\n    this.props.updateOtherSkill({\n      object: this.state.languageSkill,\n      index: this.props.id\n    });\n    this.props.updateCVLastUpdate();\n  };\n\n  findInArray(data, name) {\n    let length = data.length;\n    for (let i = 0; i < length; i++) {\n      let index = data[i][\"@type\"].indexOf(name);\n      let newlength = data[i][\"@type\"].length;\n      if (index >= 0 && index + name.length >= newlength) {\n        return i;\n      }\n    }\n  }\n\n  renderLabel(translated, name, lang) {\n    let index = this.findInArray(translated, name);\n    if (\n      translated[index] === undefined ||\n      translated[index][lang] === undefined\n    ) {\n      return name;\n    } else {\n      return translated[index][lang];\n    }\n  }\n\n  handleRenderingSubmitButton = lang => {\n    let isDisabled =\n      this.state.languageSkill[\"my0:skillName\"] === \"\" ||\n      this.state.languageSkill[\"my0:languageSkillProficiency\"] === \"\";\n    if (!this.props.isUpdate) {\n      return (\n        <Button\n          disabled={isDisabled}\n          type=\"submit\"\n          variant=\"primary\"\n          onClick={this.handleSave}\n        >\n          {saveLabel[lang]}\n        </Button>\n      );\n    } else {\n      return (\n        <Button\n          type=\"submit\"\n          variant=\"primary\"\n          disabled={isDisabled}\n          onClick={e => this.handleUpdate(e, this.props.id)}\n        >\n          {updateLabel[lang]}\n        </Button>\n      );\n    }\n  };\n\n  handleCheckboxChange = e => {\n    let languageSkill = { ...this.state.languageSkill };\n    languageSkill[e.target.id] = e.target.checked;\n    this.setState({\n      languageSkill\n    });\n  };\n\n  render() {\n    let {\n      \"my0:skillName\": skillName,\n      \"my0:skillHasCertificate\": skillHasCertificate,\n      \"my0:skillCertificateName\": skillCertificateName,\n      \"my0:languageSkillProficiency\": languageSkillProficiency\n    } = this.state.languageSkill;\n    let { onHide } = this.props;\n\n    let lang = this.props.language;\n    let types = this.props.types;\n    let { translatedProps, translatedPropsSkill } = this.props;\n    return (\n      <Modal\n        show={this.props.show}\n        onHide={this.props.onHide}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        className=\"reference-modal\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            <Row>\n              <Col md={12}>\n                {this.props.isUpdate\n                  ? languageUpdateTitle[lang]\n                  : languageAddTitle[lang]}\n              </Col>\n            </Row>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Row style={{ alignItems: \"flex-start\" }}>\n            <Col md={1} style={{ paddingRight: \"25px\" }}></Col>\n            <Col md={10} style={{ paddingRight: \"25px\" }}>\n              <Row\n                style={{\n                  justifyContent: \"flex-start\",\n                  alignItems: \"flex-start\",\n                  display: \"flex\",\n                  marginLeft: \"0px\"\n                }}\n              >\n                <CustomInput\n                  id=\"my0:skillName\"\n                  label={\n                    this.renderLabel(translatedPropsSkill, \"skillName\", lang) +\n                    \" *\"\n                  }\n                  type=\"text\"\n                  value={this.findTranslatedValue(skillName, lang)}\n                  handleChange={(e) => this.handleInputChange(e, lang)}\n                />\n              </Row>\n              <Row\n                style={{\n                  justifyContent: \"flex-start\",\n                  alignItems: \"flex-start\",\n                  display: \"flex\",\n                  marginLeft: \"0px\",\n                  marginTop: \"10px\"\n                }}\n              >\n                <label className=\"label-rw\">\n                  {this.renderLabel(\n                    translatedProps,\n                    \"languageSkillProficiency\",\n                    lang\n                  ) + \" *\"}\n                </label>\n                <Combobox\n                  name=\"my0:languageSkillProficiency\"\n                  placeholder={this.renderLabel(\n                    translatedProps,\n                    \"languageSkillProficiency\",\n                    lang\n                  )}\n                  data={types}\n                  textField={lang}\n                  valueField=\"@type\"\n                  value={languageSkillProficiency}\n                  caseSensitive={false}\n                  minLength={3}\n                  filter=\"contains\"\n                  onChange={value =>\n                    this.handleSelectChange(\n                      value,\n                      \"my0:languageSkillProficiency\"\n                    )\n                  }\n                />\n                <CustomCheckbox\n                  id=\"my0:skillHasCertificate\"\n                  type=\"checkbox\"\n                  label={this.renderLabel(\n                    translatedProps,\n                    \"skillHasCertificate\",\n                    lang\n                  )}\n                  checked={skillHasCertificate}\n                  handleChange={this.handleCheckboxChange}\n                />\n                <CustomInput\n                  id=\"my0:skillCertificateName\"\n                  label={\n                    this.renderLabel(translatedProps, \"skillCertificateName\", lang)\n                  }\n                  type=\"text\"\n                  value={this.findTranslatedValue(skillCertificateName, lang)}\n                  handleChange={(e) => this.handleInputChange(e, lang)}\n                />\n              </Row>\n            </Col>\n            <Col md={1} style={{ paddingRight: \"25px\" }}></Col>\n          </Row>\n        </Modal.Body>\n        <Modal.Footer>\n          {this.handleRenderingSubmitButton(lang)}\n          <Button className=\"btn-reset\" onClick={this.clearForm}>\n            {resetLabel[lang]}\n          </Button>\n          <Button variant=\"danger\" onClick={onHide}>\n            {cancelLabel[lang]}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    initialValues: state.cv[\"my0:hasSkill\"][ownProps.id],\n    language: state.utility.language,\n    translatedProps: retrieveMainProperties(state.utility[\"my0:LanguageSkill\"]),\n    translatedPropsSkill: retrieveMainProperties(state.utility[\"my0:Skill\"]),\n    types: retrieveBaseProperties(state.utility.languageSelfAssessmentValues)\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    createOtherSkill,\n    updateOtherSkill,\n    fetchLanguageSkillSelfAssessmentProperties,\n    fetchMainPropertiess,\n    updateCVLastUpdate\n  }\n)(LanguageModal);\n"]},"metadata":{},"sourceType":"module"}