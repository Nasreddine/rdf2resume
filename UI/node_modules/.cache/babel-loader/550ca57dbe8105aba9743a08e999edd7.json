{"ast":null,"code":"import _objectSpread from \"/home/eelezi/thesis/rdf2resume/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/eelezi/thesis/rdf2resume/src/components/Dashboard/Forms/Modals/FormEducation/EducationModal.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Modal, Row, Col, Button } from \"react-bootstrap\";\nimport { Combobox } from \"react-widgets\";\nimport Swal from \"sweetalert2\";\nimport CustomTextarea from \"../../../../core/CustomTextarea\";\nimport CustomInput from \"../../../../core/CustomInput\";\nimport CustomCheckbox from \"../../../../core/CustomCheckbox\";\nimport { createEducation, updateEducation } from \"../../../../../actions\";\nimport { fetchCountries, fetchCompanySizes, fetchEduDegrees, fetchMainPropertiess } from \"../../../../../actions/utilityActions\";\nimport { retrieveCountryValues, retrieveMainProperties, retrieveBaseProperties } from \"../../../../../utilities/utilityQueries\";\nimport { cancelLabel, resetLabel, saveLabel, updateLabel, startDate, endDate, educationAddTitle, educationUpdateTitle } from \"../../../../../translations/translations\";\n\nclass EducationModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      education: {\n        \"@type\": \"my0:Education\",\n        \"my0:studiedIn\": {\n          \"@type\": \"my0:EducationalOrg\",\n          \"my0:organizationName\": \"\",\n          \"my0:organizationDescription\": \"\",\n          \"my0:organizationPhoneNumber\": \"\",\n          \"my0:organizationWebsite\": \"\",\n          \"my0:organizationAddress\": {\n            \"@type\": \"Address\",\n            \"my0:city\": \"\",\n            \"my0:country\": \"\",\n            \"my0:street\": \"\",\n            \"my0:postalCode\": \"\"\n          }\n        },\n        \"my0:isEduCurrent\": false,\n        \"my0:eduStartDate\": \"\",\n        \"my0:eduGradDate\": \"\",\n        \"my0:degreeType\": \"\",\n        \"my0:degree\": \"\",\n        \"my0:eduDescription\": \"\"\n      }\n    };\n\n    this.setInitialValues = () => {\n      if (this.props.id !== null && this.props.isUpdate === true) {\n        let inputRef = this.props.initialValues;\n\n        let education = _objectSpread({}, this.state.education);\n\n        education[\"my0:eduStartDate\"] = inputRef[\"my0:eduStartDate\"];\n        education[\"my0:eduGradDate\"] = inputRef[\"my0:eduGradDate\"];\n        education[\"my0:degreeType\"] = inputRef[\"my0:degreeType\"];\n        education[\"my0:eduMajor\"] = inputRef[\"my0:eduMajor\"];\n        education[\"my0:eduMinor\"] = inputRef[\"my0:eduMinor\"];\n        education[\"my0:eduDescription\"] = inputRef[\"my0:eduDescription\"];\n        education[\"my0:isEduCurrent\"] = inputRef[\"my0:isEduCurrent\"];\n        education[\"my0:studiedIn\"] = inputRef[\"my0:studiedIn\"];\n        this.setState({\n          education\n        });\n      }\n    };\n\n    this.clearForm = () => {\n      if (!this.props.isUpdate) {\n        this.setState({\n          education: {\n            \"@type\": \"my0:Education\",\n            \"my0:studiedIn\": {\n              \"@type\": \"my0:EducationalOrg\",\n              \"my0:organizationName\": \"\",\n              \"my0:organizationDescription\": \"\",\n              \"my0:organizationPhoneNumber\": \"\",\n              \"my0:organizationWebsite\": \"\",\n              \"my0:organizationAddress\": {\n                \"@type\": \"Address\",\n                \"my0:city\": \"\",\n                \"my0:country\": \"\",\n                \"my0:street\": \"\",\n                \"my0:postalCode\": \"\"\n              }\n            },\n            \"my0:isEduCurrent\": false,\n            \"my0:eduStartDate\": \"\",\n            \"my0:eduGradDate\": \"\",\n            \"my0:degreeType\": \"\",\n            \"my0:degree\": \"\",\n            \"my0:eduDescription\": \"\"\n          }\n        });\n      } else {\n        this.setInitialValues();\n      }\n    };\n\n    this.handleCheckboxChange = e => {\n      let education = _objectSpread({}, this.state.education);\n\n      education[e.target.id] = e.target.checked;\n      this.setState({\n        education\n      });\n    };\n\n    this.handleInputChange = e => {\n      let obj = _objectSpread({}, this.state.education);\n\n      let label = e.target.id;\n\n      if (label === \"my0:eduStartDate\") {\n        if (e.target.value > new Date().toJSON().slice(0, 10).replace(/-/g, \"-\")) {\n          Swal.fire({\n            title: \"Warning!\",\n            text: startDate[this.props.language],\n            type: \"warning\",\n            confirmButtonColor: \"#4bb3cc\",\n            heightAuto: false,\n            confirmButtonText: \"Okay\"\n          });\n          return;\n        }\n      }\n\n      if (label === \"my0:eduGradDate\") {\n        if (e.target.value < this.state.education[\"my0:eduStartDate\"]) {\n          Swal.fire({\n            title: \"Warning!\",\n            text: endDate[this.props.language],\n            type: \"warning\",\n            confirmButtonColor: \"#4bb3cc\",\n            heightAuto: false,\n            confirmButtonText: \"Okay\"\n          });\n          return;\n        }\n      }\n\n      if (e.target.name === \"organization\") {\n        obj[\"my0:studiedIn\"][label] = e.target.value;\n      } else if (e.target.name === \"address\") {\n        obj[\"my0:studiedIn\"][\"my0:organizationAddress\"][label] = e.target.value;\n      } else {\n        obj[label] = e.target.value;\n      }\n\n      this.setState({\n        education: obj\n      });\n    };\n\n    this.handleSelectChange = (value, id, name) => {\n      let obj = _objectSpread({}, this.state.education);\n\n      let label = id;\n\n      if (name === \"organization\") {\n        obj[\"my0:studiedIn\"][label] = value[\"@type\"];\n      } else if (name === \"address\") {\n        obj[\"my0:studiedIn\"][\"my0:organizationAddress\"][label] = value[\"@type\"];\n      } else {\n        obj[label] = value[\"@type\"];\n      }\n\n      this.setState({\n        education: obj\n      });\n    };\n\n    this.handleSave = () => {\n      this.props.createEducation(this.state.education);\n    };\n\n    this.handleUpdate = () => {\n      this.props.updateEducation({\n        object: this.state.education,\n        index: this.props.id\n      });\n    };\n\n    this.handleRenderingSubmitButton = lang => {\n      let isDisabled = this.state.education[\"my0:eduStartDate\"] === \"\" || this.state.education[\"my0:degree\"] === \"\" || this.state.education[\"my0:degreeType\"] === \"\" || this.state.education[\"my0:studiedIn\"][\"my0:organizationName\"] === \"\" || this.state.education[\"my0:eduGradDate\"] === \"\";\n\n      if (!this.props.isUpdate) {\n        return React.createElement(Button, {\n          disabled: isDisabled,\n          type: \"submit\",\n          variant: \"primary\",\n          onClick: this.handleSave,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, saveLabel[lang]);\n      } else {\n        return React.createElement(Button, {\n          disabled: isDisabled,\n          type: \"submit\",\n          variant: \"primary\",\n          onClick: this.handleUpdate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243\n          },\n          __self: this\n        }, updateLabel[lang]);\n      }\n    };\n  }\n\n  componentWillMount() {\n    this.props.fetchCompanySizes();\n    this.props.fetchCountries();\n    this.props.fetchEduDegrees();\n    this.props.fetchMainPropertiess(\"my0:Education\");\n    this.props.fetchMainPropertiess(\"my0:Organization\");\n    this.props.fetchMainPropertiess(\"my0:Address\");\n    this.setInitialValues();\n  }\n\n  findInArray(data, name) {\n    let length = data.length;\n\n    for (let i = 0; i < length; i++) {\n      let index = data[i][\"@type\"].indexOf(name);\n      let newlength = data[i][\"@type\"].length;\n\n      if (index >= 0 && index + name.length >= newlength) {\n        return i;\n      }\n    }\n  }\n\n  renderLabel(translated, name, lang) {\n    let index = this.findInArray(translated, name);\n\n    if (translated[index] === undefined || translated[index][lang] === undefined) {\n      return name;\n    } else {\n      return translated[index][lang];\n    }\n  }\n\n  render() {\n    let _this$state$education = this.state.education,\n        eduStartDate = _this$state$education[\"my0:eduStartDate\"],\n        eduGradDate = _this$state$education[\"my0:eduGradDate\"],\n        degreeType = _this$state$education[\"my0:degreeType\"],\n        degree = _this$state$education[\"my0:degree\"],\n        eduDescription = _this$state$education[\"my0:eduDescription\"],\n        isEduCurrent = _this$state$education[\"my0:isEduCurrent\"],\n        studiedIn = _this$state$education[\"my0:studiedIn\"];\n    let organizationName = studiedIn[\"my0:organizationName\"],\n        organizationWebsite = studiedIn[\"my0:organizationWebsite\"],\n        organizationDescription = studiedIn[\"my0:organizationDescription\"],\n        organizationPhoneNumber = studiedIn[\"my0:organizationPhoneNumber\"],\n        address = studiedIn[\"my0:organizationAddress\"];\n    let onHide = this.props.onHide;\n    let lang = this.props.language;\n    let _this$props = this.props,\n        translatedProps = _this$props.translatedProps,\n        translatedPropsOrg = _this$props.translatedPropsOrg,\n        translatedPropsAddr = _this$props.translatedPropsAddr;\n    return React.createElement(Modal, {\n      show: this.props.show,\n      onHide: this.props.onHide,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      className: \"reference-modal\",\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      id: \"contained-modal-title-vcenter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, this.props.isUpdate ? educationUpdateTitle[lang] : educationAddTitle[lang]), React.createElement(Col, {\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(CustomCheckbox, {\n      id: \"my0:isEduCurrent\",\n      type: \"checkbox\",\n      label: this.renderLabel(translatedProps, \"isEduCurrent\", lang),\n      checked: isEduCurrent,\n      handleChange: this.handleCheckboxChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    })), React.createElement(Col, {\n      md: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    })))), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: {\n        alignItems: \"flex-start\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 6,\n      style: {\n        paddingRight: \"25px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: {\n        justifyContent: \"flex-start\",\n        alignItems: \"flex-start\",\n        display: \"flex\",\n        marginLeft: \"0px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:eduStartDate\",\n      name: \"education\",\n      label: this.renderLabel(translatedProps, \"eduStartDate\", lang) + \" *\",\n      type: \"date\",\n      value: eduStartDate,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    })), React.createElement(Row, {\n      style: {\n        justifyContent: \"flex-start\",\n        alignItems: \"flex-start\",\n        display: \"flex\",\n        marginLeft: \"0px\",\n        marginTop: \"5px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:eduGradDate\",\n      name: \"education\",\n      label: this.renderLabel(translatedProps, \"eduGradDate\", lang) + \" *\",\n      type: \"date\",\n      value: eduGradDate,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    })), React.createElement(Row, {\n      style: {\n        justifyContent: \"flex-start\",\n        alignItems: \"flex-start\",\n        display: \"flex\",\n        marginLeft: \"0px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:organizationName\",\n      name: \"organization\",\n      label: this.renderLabel(translatedPropsOrg, \"organizationName\", lang) + \" *\",\n      type: \"text\",\n      value: organizationName,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:organizationWebsite\",\n      name: \"organization\",\n      label: this.renderLabel(translatedPropsOrg, \"organizationWebsite\", lang),\n      type: \"text\",\n      value: organizationWebsite,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    })), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:postalCode\",\n      name: \"address\",\n      label: this.renderLabel(translatedPropsAddr, \"postalCode\", lang),\n      value: address[\"my0:postalCode\"],\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    })), React.createElement(Col, {\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:city\",\n      name: \"address\",\n      label: this.renderLabel(translatedPropsAddr, \"city\", lang),\n      value: address[\"my0:city\"],\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      style: {\n        width: \"100%\",\n        justifyContent: \"left\",\n        marginLeft: \"0px\",\n        marginBottom: \"8px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label-rw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }, this.renderLabel(translatedPropsAddr, \"country\", lang)), React.createElement(Combobox, {\n      name: \"my0:country\",\n      placeholder: this.renderLabel(translatedPropsAddr, \"country\", lang),\n      data: this.props.countries,\n      textField: lang,\n      valueField: \"@type\",\n      value: address[\"my0:country\"],\n      caseSensitive: false,\n      minLength: 3,\n      filter: \"contains\",\n      onChange: value => this.handleSelectChange(value, \"my0:country\", \"address\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    })), React.createElement(CustomInput, {\n      id: \"my0:organizationPhoneNumber\",\n      name: \"organization\",\n      label: this.renderLabel(translatedPropsOrg, \"organizationPhoneNumber\", lang),\n      value: organizationPhoneNumber,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        marginTop: \"10px\",\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }, React.createElement(CustomTextarea, {\n      id: \"my0:organizationDescription\",\n      name: \"organization\",\n      label: this.renderLabel(translatedPropsOrg, \"organizationDescription\", lang),\n      value: organizationDescription,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:degree\",\n      label: this.renderLabel(translatedProps, \"degree\", lang) + \" *\",\n      name: \"education\",\n      type: \"text\",\n      value: degree,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"label-rw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493\n      },\n      __self: this\n    }, this.renderLabel(translatedProps, \"degreeType\", lang) + \" *\"), React.createElement(Combobox, {\n      name: \"my0:degreeType\",\n      placeholder: this.renderLabel(translatedProps, \"degreeType\", lang),\n      data: this.props.eduDegrees,\n      valueField: \"@type\",\n      textField: lang,\n      value: degreeType,\n      caseSensitive: false,\n      minLength: 3,\n      filter: \"contains\",\n      onChange: value => this.handleSelectChange(value, \"my0:degreeType\", \"education\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        marginTop: \"10px\",\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514\n      },\n      __self: this\n    }, React.createElement(CustomTextarea, {\n      id: \"my0:eduDescription\",\n      name: \"education\",\n      label: this.renderLabel(translatedProps, \"eduDescription\", lang),\n      value: eduDescription,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515\n      },\n      __self: this\n    }))))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530\n      },\n      __self: this\n    }, this.handleRenderingSubmitButton(lang), React.createElement(Button, {\n      className: \"btn-reset\",\n      onClick: this.clearForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532\n      },\n      __self: this\n    }, resetLabel[lang]), React.createElement(Button, {\n      variant: \"danger\",\n      onClick: onHide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535\n      },\n      __self: this\n    }, cancelLabel[lang])));\n  }\n\n}\n\nconst mapstateToProps = (state, ownProps) => {\n  return {\n    initialValues: state.cv[\"my0:hasEducation\"][ownProps.id],\n    countries: retrieveCountryValues(state.utility.countryValues),\n    companySizes: retrieveBaseProperties(state.utility.companySizeValues),\n    eduDegrees: retrieveBaseProperties(state.utility.eduDegreeValues),\n    language: state.utility.language,\n    translatedPropsOrg: retrieveMainProperties(state.utility[\"my0:Organization\"]),\n    translatedPropsAddr: retrieveMainProperties(state.utility[\"my0:Address\"]),\n    translatedProps: retrieveMainProperties(state.utility[\"my0:Education\"])\n  };\n};\n\nexport default connect(mapstateToProps, {\n  createEducation,\n  fetchCountries,\n  fetchCompanySizes,\n  fetchEduDegrees,\n  updateEducation,\n  fetchMainPropertiess\n})(EducationModal);","map":{"version":3,"sources":["/home/eelezi/thesis/rdf2resume/src/components/Dashboard/Forms/Modals/FormEducation/EducationModal.jsx"],"names":["React","Component","connect","Modal","Row","Col","Button","Combobox","Swal","CustomTextarea","CustomInput","CustomCheckbox","createEducation","updateEducation","fetchCountries","fetchCompanySizes","fetchEduDegrees","fetchMainPropertiess","retrieveCountryValues","retrieveMainProperties","retrieveBaseProperties","cancelLabel","resetLabel","saveLabel","updateLabel","startDate","endDate","educationAddTitle","educationUpdateTitle","EducationModal","state","education","setInitialValues","props","id","isUpdate","inputRef","initialValues","setState","clearForm","handleCheckboxChange","e","target","checked","handleInputChange","obj","label","value","Date","toJSON","slice","replace","fire","title","text","language","type","confirmButtonColor","heightAuto","confirmButtonText","name","handleSelectChange","handleSave","handleUpdate","object","index","handleRenderingSubmitButton","lang","isDisabled","componentWillMount","findInArray","data","length","i","indexOf","newlength","renderLabel","translated","undefined","render","eduStartDate","eduGradDate","degreeType","degree","eduDescription","isEduCurrent","studiedIn","organizationName","organizationWebsite","organizationDescription","organizationPhoneNumber","address","onHide","translatedProps","translatedPropsOrg","translatedPropsAddr","show","alignItems","paddingRight","justifyContent","display","marginLeft","marginTop","width","marginBottom","countries","eduDegrees","mapstateToProps","ownProps","cv","utility","countryValues","companySizes","companySizeValues","eduDegreeValues"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Modal, Row, Col, Button } from \"react-bootstrap\";\nimport { Combobox } from \"react-widgets\";\nimport Swal from \"sweetalert2\";\nimport CustomTextarea from \"../../../../core/CustomTextarea\";\nimport CustomInput from \"../../../../core/CustomInput\";\nimport CustomCheckbox from \"../../../../core/CustomCheckbox\";\nimport { createEducation, updateEducation } from \"../../../../../actions\";\nimport {\n  fetchCountries,\n  fetchCompanySizes,\n  fetchEduDegrees,\n  fetchMainPropertiess\n} from \"../../../../../actions/utilityActions\";\nimport {\n  retrieveCountryValues,\n  retrieveMainProperties,\n  retrieveBaseProperties\n} from \"../../../../../utilities/utilityQueries\";\nimport {\n  cancelLabel,\n  resetLabel,\n  saveLabel,\n  updateLabel,\n  startDate,\n  endDate,\n  educationAddTitle,\n  educationUpdateTitle\n} from \"../../../../../translations/translations\";\n\nclass EducationModal extends Component {\n  state = {\n    education: {\n      \"@type\": \"my0:Education\",\n      \"my0:studiedIn\": {\n        \"@type\": \"my0:EducationalOrg\",\n        \"my0:organizationName\": \"\",\n        \"my0:organizationDescription\": \"\",\n        \"my0:organizationPhoneNumber\": \"\",\n        \"my0:organizationWebsite\": \"\",\n        \"my0:organizationAddress\": {\n          \"@type\": \"Address\",\n          \"my0:city\": \"\",\n          \"my0:country\": \"\",\n          \"my0:street\": \"\",\n          \"my0:postalCode\": \"\"\n        }\n      },\n      \"my0:isEduCurrent\": false,\n      \"my0:eduStartDate\": \"\",\n      \"my0:eduGradDate\": \"\",\n      \"my0:degreeType\": \"\",\n      \"my0:degree\": \"\",\n      \"my0:eduDescription\": \"\"\n    }\n  };\n\n  componentWillMount() {\n    this.props.fetchCompanySizes();\n    this.props.fetchCountries();\n    this.props.fetchEduDegrees();\n    this.props.fetchMainPropertiess(\"my0:Education\");\n    this.props.fetchMainPropertiess(\"my0:Organization\");\n    this.props.fetchMainPropertiess(\"my0:Address\");\n    this.setInitialValues();\n  }\n\n  setInitialValues = () => {\n    if (this.props.id !== null && this.props.isUpdate === true) {\n      let inputRef = this.props.initialValues;\n      let education = { ...this.state.education };\n      education[\"my0:eduStartDate\"] = inputRef[\"my0:eduStartDate\"];\n      education[\"my0:eduGradDate\"] = inputRef[\"my0:eduGradDate\"];\n      education[\"my0:degreeType\"] = inputRef[\"my0:degreeType\"];\n      education[\"my0:eduMajor\"] = inputRef[\"my0:eduMajor\"];\n      education[\"my0:eduMinor\"] = inputRef[\"my0:eduMinor\"];\n      education[\"my0:eduDescription\"] = inputRef[\"my0:eduDescription\"];\n      education[\"my0:isEduCurrent\"] = inputRef[\"my0:isEduCurrent\"];\n      education[\"my0:studiedIn\"] = inputRef[\"my0:studiedIn\"];\n      this.setState({\n        education\n      });\n    }\n  };\n\n  clearForm = () => {\n    if (!this.props.isUpdate) {\n      this.setState({\n        education: {\n          \"@type\": \"my0:Education\",\n          \"my0:studiedIn\": {\n            \"@type\": \"my0:EducationalOrg\",\n            \"my0:organizationName\": \"\",\n            \"my0:organizationDescription\": \"\",\n            \"my0:organizationPhoneNumber\": \"\",\n            \"my0:organizationWebsite\": \"\",\n            \"my0:organizationAddress\": {\n              \"@type\": \"Address\",\n              \"my0:city\": \"\",\n              \"my0:country\": \"\",\n              \"my0:street\": \"\",\n              \"my0:postalCode\": \"\"\n            }\n          },\n          \"my0:isEduCurrent\": false,\n          \"my0:eduStartDate\": \"\",\n          \"my0:eduGradDate\": \"\",\n          \"my0:degreeType\": \"\",\n          \"my0:degree\": \"\",\n          \"my0:eduDescription\": \"\"\n        }\n      });\n    } else {\n      this.setInitialValues();\n    }\n  };\n\n  handleCheckboxChange = e => {\n    let education = { ...this.state.education };\n    education[e.target.id] = e.target.checked;\n    this.setState({\n      education\n    });\n  };\n\n  handleInputChange = e => {\n    let obj = { ...this.state.education };\n    let label = e.target.id;\n    if (label === \"my0:eduStartDate\") {\n      if (\n        e.target.value >\n        new Date()\n          .toJSON()\n          .slice(0, 10)\n          .replace(/-/g, \"-\")\n      ) {\n        Swal.fire({\n          title: \"Warning!\",\n          text: startDate[this.props.language],\n          type: \"warning\",\n          confirmButtonColor: \"#4bb3cc\",\n          heightAuto: false,\n          confirmButtonText: \"Okay\"\n        });\n        return;\n      }\n    }\n    if (label === \"my0:eduGradDate\") {\n      if (e.target.value < this.state.education[\"my0:eduStartDate\"]) {\n        Swal.fire({\n          title: \"Warning!\",\n          text: endDate[this.props.language],\n          type: \"warning\",\n          confirmButtonColor: \"#4bb3cc\",\n          heightAuto: false,\n          confirmButtonText: \"Okay\"\n        });\n        return;\n      }\n    }\n    if (e.target.name === \"organization\") {\n      obj[\"my0:studiedIn\"][label] = e.target.value;\n    } else if (e.target.name === \"address\") {\n      obj[\"my0:studiedIn\"][\"my0:organizationAddress\"][label] = e.target.value;\n    } else {\n      obj[label] = e.target.value;\n    }\n    this.setState({\n      education: obj\n    });\n  };\n\n  handleSelectChange = (value, id, name) => {\n    let obj = { ...this.state.education };\n    let label = id;\n    if (name === \"organization\") {\n      obj[\"my0:studiedIn\"][label] = value[\"@type\"];\n    } else if (name === \"address\") {\n      obj[\"my0:studiedIn\"][\"my0:organizationAddress\"][label] = value[\"@type\"];\n    } else {\n      obj[label] = value[\"@type\"];\n    }\n    this.setState({\n      education: obj\n    });\n  };\n\n  handleSave = () => {\n    this.props.createEducation(this.state.education);\n  };\n\n  handleUpdate = () => {\n    this.props.updateEducation({\n      object: this.state.education,\n      index: this.props.id\n    });\n  };\n\n  findInArray(data, name) {\n    let length = data.length;\n    for (let i = 0; i < length; i++) {\n      let index = data[i][\"@type\"].indexOf(name);\n      let newlength = data[i][\"@type\"].length;\n      if (index >= 0 && index + name.length >= newlength) {\n        return i;\n      }\n    }\n  }\n\n  renderLabel(translated, name, lang) {\n    let index = this.findInArray(translated, name);\n    if (\n      translated[index] === undefined ||\n      translated[index][lang] === undefined\n    ) {\n      return name;\n    } else {\n      return translated[index][lang];\n    }\n  }\n\n  handleRenderingSubmitButton = lang => {\n    let isDisabled =\n      this.state.education[\"my0:eduStartDate\"] === \"\" ||\n      this.state.education[\"my0:degree\"] === \"\" ||\n      this.state.education[\"my0:degreeType\"] === \"\" ||\n      this.state.education[\"my0:studiedIn\"][\"my0:organizationName\"] === \"\" ||\n      this.state.education[\"my0:eduGradDate\"] === \"\";\n    if (!this.props.isUpdate) {\n      return (\n        <Button\n          disabled={isDisabled}\n          type=\"submit\"\n          variant=\"primary\"\n          onClick={this.handleSave}\n        >\n          {saveLabel[lang]}\n        </Button>\n      );\n    } else {\n      return (\n        <Button\n          disabled={isDisabled}\n          type=\"submit\"\n          variant=\"primary\"\n          onClick={this.handleUpdate}\n        >\n          {updateLabel[lang]}\n        </Button>\n      );\n    }\n  };\n\n  render() {\n    let {\n      \"my0:eduStartDate\": eduStartDate,\n      \"my0:eduGradDate\": eduGradDate,\n      \"my0:degreeType\": degreeType,\n      \"my0:degree\": degree,\n      \"my0:eduDescription\": eduDescription,\n      \"my0:isEduCurrent\": isEduCurrent,\n      \"my0:studiedIn\": studiedIn\n    } = this.state.education;\n\n    let {\n      \"my0:organizationName\": organizationName,\n      \"my0:organizationWebsite\": organizationWebsite,\n      \"my0:organizationDescription\": organizationDescription,\n      \"my0:organizationPhoneNumber\": organizationPhoneNumber,\n      \"my0:organizationAddress\": address\n    } = studiedIn;\n\n    let { onHide } = this.props;\n\n    let lang = this.props.language;\n\n    let {\n      translatedProps,\n      translatedPropsOrg,\n      translatedPropsAddr\n    } = this.props;\n\n    return (\n      <Modal\n        show={this.props.show}\n        onHide={this.props.onHide}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        className=\"reference-modal\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            <Row>\n              <Col md={9}>\n                {this.props.isUpdate\n                  ? educationUpdateTitle[lang]\n                  : educationAddTitle[lang]}\n              </Col>\n              <Col md={2}>\n                <CustomCheckbox\n                  id=\"my0:isEduCurrent\"\n                  type=\"checkbox\"\n                  label={this.renderLabel(\n                    translatedProps,\n                    \"isEduCurrent\",\n                    lang\n                  )}\n                  checked={isEduCurrent}\n                  handleChange={this.handleCheckboxChange}\n                />\n              </Col>\n              <Col md={1} />\n            </Row>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Row style={{ alignItems: \"flex-start\" }}>\n            <Col md={6} style={{ paddingRight: \"25px\" }}>\n              <Row\n                style={{\n                  justifyContent: \"flex-start\",\n                  alignItems: \"flex-start\",\n                  display: \"flex\",\n                  marginLeft: \"0px\"\n                }}\n              >\n                <CustomInput\n                  id=\"my0:eduStartDate\"\n                  name=\"education\"\n                  label={\n                    this.renderLabel(translatedProps, \"eduStartDate\", lang) +\n                    \" *\"\n                  }\n                  type=\"date\"\n                  value={eduStartDate}\n                  handleChange={this.handleInputChange}\n                />\n              </Row>\n              <Row\n                style={{\n                  justifyContent: \"flex-start\",\n                  alignItems: \"flex-start\",\n                  display: \"flex\",\n                  marginLeft: \"0px\",\n                  marginTop: \"5px\"\n                }}\n              >\n                <CustomInput\n                  id=\"my0:eduGradDate\"\n                  name=\"education\"\n                  label={\n                    this.renderLabel(translatedProps, \"eduGradDate\", lang) +\n                    \" *\"\n                  }\n                  type=\"date\"\n                  value={eduGradDate}\n                  handleChange={this.handleInputChange}\n                />\n              </Row>\n              <Row\n                style={{\n                  justifyContent: \"flex-start\",\n                  alignItems: \"flex-start\",\n                  display: \"flex\",\n                  marginLeft: \"0px\"\n                }}\n              >\n                <div style={{ width: \"100%\" }}>\n                  <CustomInput\n                    id=\"my0:organizationName\"\n                    name=\"organization\"\n                    label={\n                      this.renderLabel(\n                        translatedPropsOrg,\n                        \"organizationName\",\n                        lang\n                      ) + \" *\"\n                    }\n                    type=\"text\"\n                    value={organizationName}\n                    handleChange={this.handleInputChange}\n                  />\n                </div>\n                <div style={{ width: \"100%\" }}>\n                  <CustomInput\n                    id=\"my0:organizationWebsite\"\n                    name=\"organization\"\n                    label={this.renderLabel(\n                      translatedPropsOrg,\n                      \"organizationWebsite\",\n                      lang\n                    )}\n                    type=\"text\"\n                    value={organizationWebsite}\n                    handleChange={this.handleInputChange}\n                  />\n                </div>\n                <Row>\n                  <Col sm={6}>\n                    <CustomInput\n                      id=\"my0:postalCode\"\n                      name=\"address\"\n                      label={this.renderLabel(\n                        translatedPropsAddr,\n                        \"postalCode\",\n                        lang\n                      )}\n                      value={address[\"my0:postalCode\"]}\n                      handleChange={this.handleInputChange}\n                    />\n                  </Col>\n                  <Col sm={6}>\n                    <CustomInput\n                      id=\"my0:city\"\n                      name=\"address\"\n                      label={this.renderLabel(\n                        translatedPropsAddr,\n                        \"city\",\n                        lang\n                      )}\n                      value={address[\"my0:city\"]}\n                      handleChange={this.handleInputChange}\n                    />\n                  </Col>\n                </Row>\n                <Row\n                  style={{\n                    width: \"100%\",\n                    justifyContent: \"left\",\n                    marginLeft: \"0px\",\n                    marginBottom: \"8px\"\n                  }}\n                >\n                  <label className=\"label-rw\">\n                    {this.renderLabel(translatedPropsAddr, \"country\", lang)}\n                  </label>\n                  <Combobox\n                    name=\"my0:country\"\n                    placeholder={this.renderLabel(\n                      translatedPropsAddr,\n                      \"country\",\n                      lang\n                    )}\n                    data={this.props.countries}\n                    textField={lang}\n                    valueField=\"@type\"\n                    value={address[\"my0:country\"]}\n                    caseSensitive={false}\n                    minLength={3}\n                    filter=\"contains\"\n                    onChange={value =>\n                      this.handleSelectChange(value, \"my0:country\", \"address\")\n                    }\n                  />\n                </Row>\n                <CustomInput\n                  id=\"my0:organizationPhoneNumber\"\n                  name=\"organization\"\n                  label={this.renderLabel(\n                    translatedPropsOrg,\n                    \"organizationPhoneNumber\",\n                    lang\n                  )}\n                  value={organizationPhoneNumber}\n                  handleChange={this.handleInputChange}\n                />\n                <div style={{ marginTop: \"10px\", width: \"100%\" }}>\n                  <CustomTextarea\n                    id=\"my0:organizationDescription\"\n                    name=\"organization\"\n                    label={this.renderLabel(\n                      translatedPropsOrg,\n                      \"organizationDescription\",\n                      lang\n                    )}\n                    value={organizationDescription}\n                    handleChange={this.handleInputChange}\n                  />\n                </div>\n              </Row>\n            </Col>\n            <Col md={6}>\n              <CustomInput\n                id=\"my0:degree\"\n                label={this.renderLabel(translatedProps, \"degree\", lang) + \" *\"}\n                name=\"education\"\n                type=\"text\"\n                value={degree}\n                handleChange={this.handleInputChange}\n              />\n              <label className=\"label-rw\">\n                {this.renderLabel(translatedProps, \"degreeType\", lang) + \" *\"}\n              </label>\n              <Combobox\n                name=\"my0:degreeType\"\n                placeholder={this.renderLabel(\n                  translatedProps,\n                  \"degreeType\",\n                  lang\n                )}\n                data={this.props.eduDegrees}\n                valueField=\"@type\"\n                textField={lang}\n                value={degreeType}\n                caseSensitive={false}\n                minLength={3}\n                filter=\"contains\"\n                onChange={value =>\n                  this.handleSelectChange(value, \"my0:degreeType\", \"education\")\n                }\n              />\n              <div style={{ marginTop: \"10px\", width: \"100%\" }}>\n                <CustomTextarea\n                  id=\"my0:eduDescription\"\n                  name=\"education\"\n                  label={this.renderLabel(\n                    translatedProps,\n                    \"eduDescription\",\n                    lang\n                  )}\n                  value={eduDescription}\n                  handleChange={this.handleInputChange}\n                />\n              </div>\n            </Col>\n          </Row>\n        </Modal.Body>\n        <Modal.Footer>\n          {this.handleRenderingSubmitButton(lang)}\n          <Button className=\"btn-reset\" onClick={this.clearForm}>\n            {resetLabel[lang]}\n          </Button>\n          <Button variant=\"danger\" onClick={onHide}>\n            {cancelLabel[lang]}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapstateToProps = (state, ownProps) => {\n  return {\n    initialValues: state.cv[\"my0:hasEducation\"][ownProps.id],\n    countries: retrieveCountryValues(state.utility.countryValues),\n    companySizes: retrieveBaseProperties(state.utility.companySizeValues),\n    eduDegrees: retrieveBaseProperties(state.utility.eduDegreeValues),\n    language: state.utility.language,\n    translatedPropsOrg: retrieveMainProperties(\n      state.utility[\"my0:Organization\"]\n    ),\n    translatedPropsAddr: retrieveMainProperties(state.utility[\"my0:Address\"]),\n    translatedProps: retrieveMainProperties(state.utility[\"my0:Education\"])\n  };\n};\n\nexport default connect(\n  mapstateToProps,\n  {\n    createEducation,\n    fetchCountries,\n    fetchCompanySizes,\n    fetchEduDegrees,\n    updateEducation,\n    fetchMainPropertiess\n  }\n)(EducationModal);\n"]},"metadata":{},"sourceType":"module"}