{"ast":null,"code":"var _jsxFileName = \"/home/eelezi/thesis/rdf2resume/UI/src/components/Topbar.jsx\";\nimport React from \"react\";\nimport { Navbar, Nav, Row, Col } from \"react-bootstrap\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport { Combobox } from \"react-widgets\"; // import mylogo from \"../mylogo.svg\";\n\nimport de from \"../images/de.png\";\nimport fr from \"../images/fr.png\";\nimport it from \"../images/it.png\";\nimport en from \"../images/en.png\";\nimport sq from \"../images/sq.png\";\nimport { updateLanguage } from \"../actions/utilityActions\";\nimport { connect } from \"react-redux\";\n\nconst Topbar = props => {\n  let ListItem = ({\n    item\n  }) => React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, item === \"de\" ? React.createElement(\"img\", {\n    src: de,\n    width: \"20px\",\n    height: \"20px\",\n    alt: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }) : \"\", item === \"sq\" ? React.createElement(\"img\", {\n    src: sq,\n    width: \"20px\",\n    height: \"20px\",\n    alt: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }) : \"\", item === \"fr\" ? React.createElement(\"img\", {\n    src: fr,\n    width: \"20px\",\n    height: \"20px\",\n    alt: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }) : \"\", item === \"it\" ? React.createElement(\"img\", {\n    src: it,\n    width: \"20px\",\n    height: \"20px\",\n    alt: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }) : \"\", item === \"en\" ? React.createElement(\"img\", {\n    src: en,\n    width: \"20px\",\n    height: \"20px\",\n    alt: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }) : \"\", \" \", React.createElement(\"span\", {\n    style: {\n      textTransform: 'uppercase'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, item)));\n\n  let languages = [\"de\", \"en\", \"it\", \"fr\", \"sq\"];\n\n  let changeLanguage = value => props.updateLanguage(value);\n\n  return (// <Row className=\"container-fluid\">\n    //   <Col className=\"sidebar\" md={2} style={{ padding: 0 }}>\n    //     <div className=\"logo\">{/* <img src={mylogo} alt={'Logo'} /> */}</div>\n    //   </Col>\n    //   <Col md={10}>\n    //     <Navbar bg=\"light\" variant=\"light\">\n    //       <Nav className=\"justify-content-end\">\n    //         {props.links.map(link => {\n    //           return (\n    //             <NavLink key={link.link} to={link.link}>\n    //               {link[props.language]}\n    //             </NavLink>\n    //           );\n    //         })}\n    //       </Nav>\n    //       <Nav className=\"justify-content-end\">\n    //         <Combobox onChange={changeLanguage} value={props.language} defaultValue={\"en\"} containerClassName=\"languagebox\" data={languages} itemComponent={ListItem} />\n    //       </Nav>\n    //     </Navbar>\n    //   </Col>{\" \"}\n    // </Row>\n    React.createElement(Navbar, {\n      bg: \"light\",\n      variant: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Navbar.Brand, {\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      className: \"col-md-2\",\n      href: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"RDF2Resume\"), React.createElement(Navbar.Toggle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(Navbar.Collapse, {\n      className: \"justify-content-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      className: \"justify-content-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, props.links.map(link => {\n      return React.createElement(NavLink, {\n        key: link.link,\n        to: link.link,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, link[props.language]);\n    })), React.createElement(Nav, {\n      className: \"justify-content-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Combobox, {\n      onChange: changeLanguage,\n      value: props.language,\n      defaultValue: \"en\",\n      containerClassName: \"languagebox\",\n      data: languages,\n      itemComponent: ListItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }))))\n  );\n};\n\nconst mapstateToProps = state => {\n  return {\n    language: state.utility.language\n  };\n};\n\nexport default connect(mapstateToProps, {\n  updateLanguage\n})(withRouter(Topbar));","map":{"version":3,"sources":["/home/eelezi/thesis/rdf2resume/UI/src/components/Topbar.jsx"],"names":["React","Navbar","Nav","Row","Col","NavLink","withRouter","Combobox","de","fr","it","en","sq","updateLanguage","connect","Topbar","props","ListItem","item","textTransform","languages","changeLanguage","value","width","height","links","map","link","language","mapstateToProps","state","utility"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Navbar, Nav, Row, Col } from \"react-bootstrap\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport { Combobox } from \"react-widgets\";\n// import mylogo from \"../mylogo.svg\";\nimport de from \"../images/de.png\";\nimport fr from \"../images/fr.png\";\nimport it from \"../images/it.png\";\nimport en from \"../images/en.png\";\nimport sq from \"../images/sq.png\";\nimport { updateLanguage } from \"../actions/utilityActions\";\nimport { connect } from \"react-redux\";\n\nconst Topbar = props => {\n\n  let ListItem = ({ item }) => (\n    <React.Fragment>\n      <span>\n        {item === \"de\" ? (\n          <img src={de} width=\"20px\" height=\"20px\" alt={item}></img>\n        ) : (\n            \"\"\n          )}\n        {item === \"sq\" ? (\n          <img src={sq} width=\"20px\" height=\"20px\" alt={item}></img>\n        ) : (\n            \"\"\n          )}\n        {item === \"fr\" ? (\n          <img src={fr} width=\"20px\" height=\"20px\" alt={item}></img>\n        ) : (\n            \"\"\n          )}\n        {item === \"it\" ? (\n          <img src={it} width=\"20px\" height=\"20px\" alt={item}></img>\n        ) : (\n            \"\"\n          )}\n        {item === \"en\" ? (\n          <img src={en} width=\"20px\" height=\"20px\" alt={item}></img>\n        ) : (\n            \"\"\n          )}{\" \"}\n        <span style={{ textTransform: 'uppercase' }} >{item}</span>\n      </span>\n    </React.Fragment>\n  );\n\n  let languages = [\"de\", \"en\", \"it\", \"fr\", \"sq\"];\n\n  let changeLanguage = (value) => props.updateLanguage(value);\n\n  return (\n    // <Row className=\"container-fluid\">\n    //   <Col className=\"sidebar\" md={2} style={{ padding: 0 }}>\n    //     <div className=\"logo\">{/* <img src={mylogo} alt={'Logo'} /> */}</div>\n    //   </Col>\n    //   <Col md={10}>\n    //     <Navbar bg=\"light\" variant=\"light\">\n    //       <Nav className=\"justify-content-end\">\n    //         {props.links.map(link => {\n    //           return (\n    //             <NavLink key={link.link} to={link.link}>\n    //               {link[props.language]}\n    //             </NavLink>\n    //           );\n    //         })}\n    //       </Nav>\n    //       <Nav className=\"justify-content-end\">\n    //         <Combobox onChange={changeLanguage} value={props.language} defaultValue={\"en\"} containerClassName=\"languagebox\" data={languages} itemComponent={ListItem} />\n    //       </Nav>\n    //     </Navbar>\n    //   </Col>{\" \"}\n    // </Row>\n    <Navbar bg=\"light\" variant=\"light\">\n      <Navbar.Brand style={{ width: '100%', height: '100%' }} className=\"col-md-2\" href=\"\">RDF2Resume</Navbar.Brand>\n      <Navbar.Toggle />\n      <Navbar.Collapse className=\"justify-content-end\">\n        <Nav className=\"justify-content-end\">\n          {props.links.map(link => {\n            return (\n              <NavLink key={link.link} to={link.link}>\n                {link[props.language]}\n              </NavLink>\n            );\n          })}\n        </Nav>\n        <Nav className=\"justify-content-end\">\n          <Combobox onChange={changeLanguage} value={props.language} defaultValue={\"en\"} containerClassName=\"languagebox\" data={languages} itemComponent={ListItem} />\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nconst mapstateToProps = state => {\n  return {\n    language: state.utility.language\n  };\n};\n\nexport default connect(\n  mapstateToProps,\n  {\n    updateLanguage\n  }\n)(withRouter(Topbar));"]},"metadata":{},"sourceType":"module"}