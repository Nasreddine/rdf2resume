{"ast":null,"code":"var _jsxFileName = \"/home/eelezi/thesis/rdf2resume/UI/src/components/Dashboard/Forms/Modals/FormPatent/PatentView.jsx\";\nimport React, { Component } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faTrash, faBookOpen, faCopyright } from \"@fortawesome/free-solid-svg-icons\";\nimport { removePatent } from \"../../../../../actions\";\nimport PatentModal from \"./PatentModal\";\nimport { fetchAllPatentStatusess } from \"../../../../../actions/utilityActions\";\nimport { retrieveBaseProperties } from \"../../../../../utilities/utilityQueries\";\nimport { renderPartialDate } from \"../../../../../utilities/utilityFunctions\";\n\nclass PatentView extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editMode: false,\n      key: 0\n    };\n\n    this.handleCloseEdit = () => {\n      let key = this.state.key;\n      this.setState({\n        editMode: false,\n        key: ++key\n      });\n    };\n\n    this.handleShowEdit = () => {\n      let key = this.state.key;\n      this.setState({\n        editMode: true,\n        key: ++key\n      });\n    };\n\n    this.handleUpdateClick = () => {\n      this.setState({\n        editMode: true\n      });\n    };\n  }\n\n  componentWillMount() {\n    this.props.fetchAllPatentStatusess();\n  }\n\n  findInArray(data, name) {\n    let length = data.length;\n\n    for (let i = 0; i < length; i++) {\n      let index = data[i][\"@type\"].indexOf(name);\n      let newlength = data[i][\"@type\"].length;\n\n      if (index >= 0 && index + name.length >= newlength) {\n        return i;\n      }\n    }\n  }\n\n  renderLabel(translated, name, lang) {\n    let index = this.findInArray(translated, name);\n\n    if (translated[index] === undefined || translated[index][lang] === undefined) {\n      return name;\n    } else {\n      return translated[index][lang];\n    }\n  }\n\n  findTranslatedValue(data, lang) {\n    let length = data.length;\n\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@language\"] === lang) {\n        return data[i][\"@value\"];\n      }\n    }\n  }\n\n  render() {\n    let _this$props$patentObj = this.props.patentObj,\n        patentTitle = _this$props$patentObj[\"my0:patentTitle\"],\n        patentOffice = _this$props$patentObj[\"my0:patentOffice\"],\n        patentNumber = _this$props$patentObj[\"my0:patentNumber\"],\n        patentInventor = _this$props$patentObj[\"my0:patentInventor\"],\n        patentURL = _this$props$patentObj[\"my0:patentURL\"],\n        patentIssuedDate = _this$props$patentObj[\"my0:patentIssuedDate\"],\n        patentStatus = _this$props$patentObj[\"my0:patentStatus\"],\n        patentDescription = _this$props$patentObj[\"my0:patentDescription\"];\n    let lang = this.props.language;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 2,\n      style: {\n        paddingLeft: '0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, patentIssuedDate !== '' ? React.createElement(\"p\", {\n      style: {\n        marginBottom: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, renderPartialDate(patentIssuedDate)) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"u\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, this.renderLabel(this.props.statuses, patentStatus, lang)))), React.createElement(Col, {\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: {\n        justifyContent: \"flex-start\",\n        alignItems: \"flex-start\",\n        display: \"flex\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: patentURL,\n      className: \"inline-link\",\n      rel: \"noopener noreferrer\",\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, this.findTranslatedValue(patentTitle, lang))), \" \", \"- \", patentNumber), React.createElement(Row, {\n      style: {\n        justifyContent: \"flex-start\",\n        alignItems: \"flex-start\",\n        display: \"flex\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faBookOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), \" \", this.findTranslatedValue(patentOffice, lang), \" \"))), React.createElement(Col, {\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faEdit,\n      onClick: () => this.handleUpdateClick(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(FontAwesomeIcon, {\n      icon: faTrash,\n      onClick: () => this.props.removePatent(this.props.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(Col, {\n      md: 8,\n      style: {\n        paddingLeft: '0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, this.findTranslatedValue(patentDescription, lang)), React.createElement(Col, {\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(Col, {\n      md: 8,\n      style: {\n        paddingLeft: '0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faCopyright,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), \" \", \" \", patentInventor, \"              \"), React.createElement(Col, {\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    })))), React.createElement(PatentModal, {\n      show: this.state.editMode,\n      isUpdate: true,\n      id: this.props.id,\n      onHide: this.handleCloseEdit,\n      key: this.state.key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapstateToProps = state => {\n  return {\n    language: state.utility.language,\n    statuses: retrieveBaseProperties(state.utility.patents)\n  };\n};\n\nexport default connect(mapstateToProps, {\n  removePatent,\n  fetchAllPatentStatusess\n})(PatentView);","map":{"version":3,"sources":["/home/eelezi/thesis/rdf2resume/UI/src/components/Dashboard/Forms/Modals/FormPatent/PatentView.jsx"],"names":["React","Component","Row","Col","connect","FontAwesomeIcon","faEdit","faTrash","faBookOpen","faCopyright","removePatent","PatentModal","fetchAllPatentStatusess","retrieveBaseProperties","renderPartialDate","PatentView","state","editMode","key","handleCloseEdit","setState","handleShowEdit","handleUpdateClick","componentWillMount","props","findInArray","data","name","length","i","index","indexOf","newlength","renderLabel","translated","lang","undefined","findTranslatedValue","render","patentObj","patentTitle","patentOffice","patentNumber","patentInventor","patentURL","patentIssuedDate","patentStatus","patentDescription","language","paddingLeft","marginBottom","statuses","justifyContent","alignItems","display","id","mapstateToProps","utility","patents"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faEdit,\n  faTrash,\n  faBookOpen,\n  faCopyright\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { removePatent } from \"../../../../../actions\";\nimport PatentModal from \"./PatentModal\";\nimport { fetchAllPatentStatusess } from \"../../../../../actions/utilityActions\";\nimport { retrieveBaseProperties } from \"../../../../../utilities/utilityQueries\";\nimport { renderPartialDate } from \"../../../../../utilities/utilityFunctions\";\n\nclass PatentView extends Component {\n  state = {\n    editMode: false,\n    key: 0\n  };\n\n  componentWillMount() {\n    this.props.fetchAllPatentStatusess();\n  }\n\n  handleCloseEdit = () => {\n    let key = this.state.key;\n    this.setState({ editMode: false, key: ++key });\n  };\n\n  handleShowEdit = () => {\n    let key = this.state.key;\n    this.setState({ editMode: true, key: ++key });\n  };\n\n  handleUpdateClick = () => {\n    this.setState({\n      editMode: true\n    });\n  };\n\n  findInArray(data, name) {\n    let length = data.length;\n    for (let i = 0; i < length; i++) {\n      let index = data[i][\"@type\"].indexOf(name);\n      let newlength = data[i][\"@type\"].length;\n      if (index >= 0 && index + name.length >= newlength) {\n        return i;\n      }\n    }\n  }\n\n  renderLabel(translated, name, lang) {\n    let index = this.findInArray(translated, name);\n    if (\n      translated[index] === undefined ||\n      translated[index][lang] === undefined\n    ) {\n      return name;\n    } else {\n      return translated[index][lang];\n    }\n  }\n\n  findTranslatedValue(data, lang) {\n    let length = data.length;\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@language\"] === lang) {\n        return data[i][\"@value\"];\n      }\n    }\n  }\n\n  render() {\n    let {\n      \"my0:patentTitle\": patentTitle,\n      \"my0:patentOffice\": patentOffice,\n      \"my0:patentNumber\": patentNumber,\n      \"my0:patentInventor\": patentInventor,\n      \"my0:patentURL\": patentURL,\n      \"my0:patentIssuedDate\": patentIssuedDate,\n      \"my0:patentStatus\": patentStatus,\n      \"my0:patentDescription\": patentDescription\n    } = this.props.patentObj;\n\n    let lang = this.props.language;\n\n    return (\n      <React.Fragment>\n        <div className=\"card\">\n          <div className=\"card-header\">\n            <Col md={2} style={{ paddingLeft: '0' }}>\n              {\n                patentIssuedDate !== '' ? <p style={{ marginBottom: \"10px\" }}>{renderPartialDate(patentIssuedDate)}</p> :\n                  <p>\n                    <u>{this.renderLabel(this.props.statuses, patentStatus, lang)}</u>\n                  </p>\n              }\n            </Col>\n            <Col md={8}>\n              <Row\n                style={{\n                  justifyContent: \"flex-start\",\n                  alignItems: \"flex-start\",\n                  display: \"flex\"\n                }}\n              >\n                <b>\n                  <a\n                    href={patentURL}\n                    className=\"inline-link\"\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                  >\n                    {this.findTranslatedValue(patentTitle, lang)}\n                  </a>\n                </b>{\" \"}\n                - {patentNumber}\n              </Row>\n              <Row\n                style={{\n                  justifyContent: \"flex-start\",\n                  alignItems: \"flex-start\",\n                  display: \"flex\"\n                }}\n              >\n                <b>\n                  <FontAwesomeIcon icon={faBookOpen} />\n                  {` `}\n                  {this.findTranslatedValue(patentOffice, lang)}{\" \"}\n                </b>\n              </Row>\n            </Col>\n            <Col md={2}>\n              <FontAwesomeIcon\n                icon={faEdit}\n                onClick={() => this.handleUpdateClick()}\n              />\n              <FontAwesomeIcon\n                icon={faTrash}\n                onClick={() => this.props.removePatent(this.props.id)}\n              />\n            </Col>\n          </div>\n          <div className=\"card-body\">\n            <Row>\n              <Col md={2}>\n              </Col>\n              <Col md={8} style={{ paddingLeft: '0' }}>\n                {this.findTranslatedValue(patentDescription, lang)}\n              </Col>\n              <Col md={2}>\n              </Col>\n            </Row>\n            <Row>\n              <Col md={2}>\n              </Col>\n              <Col md={8} style={{ paddingLeft: '0' }}>\n                <FontAwesomeIcon icon={faCopyright} />\n                {` `} {patentInventor}              </Col>\n              <Col md={2}>\n              </Col>\n            </Row>\n          </div>\n        </div>\n        <PatentModal\n          show={this.state.editMode}\n          isUpdate={true}\n          id={this.props.id}\n          onHide={this.handleCloseEdit}\n          key={this.state.key}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapstateToProps = state => {\n  return {\n    language: state.utility.language,\n    statuses: retrieveBaseProperties(state.utility.patents)\n  };\n};\n\nexport default connect(\n  mapstateToProps,\n  { removePatent, fetchAllPatentStatusess }\n)(PatentView);\n"]},"metadata":{},"sourceType":"module"}