{"ast":null,"code":"import _objectSpread from \"/home/eelezi/thesis/rdf2resume/UI/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _ from \"lodash\";\nimport { FETCH_CV, FETCH_ABOUT_CV, FETCH_TARGET, FETCH_ABOUT_PERSON, FETCH_COURSES, FETCH_EDUCATION, FETCH_OTHER_INFO, FETCH_REFERENCES, FETCH_SKILLS, FETCH_WORK_HISTORY, CREATE_OTHER_INFO, REMOVE_OTHER_INFO, UPDATE_OTHER_INFO, CREATE_IM, UPDATE_IM, REMOVE_IM, CREATE_HONOR, UPDATE_HONOR, REMOVE_HONOR, CREATE_PATENT, UPDATE_PATENT, REMOVE_PATENT, CREATE_PROJECT, UPDATE_PROJECT, REMOVE_PROJECT, CREATE_PUBLICATION, UPDATE_PUBLICATION, REMOVE_PUBLICATION, CREATE_WEBSITE, UPDATE_WEBSITE, REMOVE_WEBSITE, CREATE_REFERENCE, UPDATE_REFERENCE, REMOVE_REFERENCE, CREATE_WORK_HISTORY, UPDATE_WORK_HISTORY, REMOVE_WORK_HISTORY, CREATE_EDUCATION, UPDATE_EDUCATION, REMOVE_EDUCATION, CREATE_COURSE, UPDATE_COURSE, REMOVE_COURSE, CREATE_OTHER_SKILL, UPDATE_OTHER_SKILL, REMOVE_OTHER_SKILL, UPDATE_ABOUT_CV, UPDATE_ABOUT_PERSON, UPDATE_TARGET, UPDATE_SKILLS, UPDATE_CV, UPDATE_CV_LAST_UPDATE } from \"../actions/types\"; // export function generateUUID() { // Public Domain/MIT\n//   var d = new Date().getTime();//Timestamp\n//   var d2 = (performance && performance.now && (performance.now()*1000)) || 0;//Time in microseconds since page-load or 0 if unsupported\n//   return 'Nxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n//       var r = Math.random() * 16;//random number between 0 and 16\n//       if(d > 0){//Use timestamp until depleted\n//           r = (d + r)%16 | 0;\n//           d = Math.floor(d/16);\n//       } else {//Use microseconds since page-load if supported\n//           r = (d2 + r)%16 | 0;\n//           d2 = Math.floor(d2/16);\n//       }\n//       return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n//   });\n// }\n\nconst INITIAL_STATE = {\n  \"my0:hasReference\": [],\n  \"my0:hasWorkHistory\": [],\n  \"my0:cvLastUpdate\": \"\",\n  \"my0:cvIsConfidential\": false,\n  \"my0:cvCopyright\": [{\n    \"@value\": \"\",\n    \"@language\": \"en\"\n  }, {\n    \"@value\": \"\",\n    \"@language\": \"de\"\n  }, {\n    \"@value\": \"\",\n    \"@language\": \"it\"\n  }, {\n    \"@value\": \"\",\n    \"@language\": \"fr\"\n  }, {\n    \"@value\": \"\",\n    \"@language\": \"sq\"\n  }],\n  \"my0:cvNotes\": [{\n    \"@value\": \"\",\n    \"@language\": \"en\"\n  }, {\n    \"@value\": \"\",\n    \"@language\": \"de\"\n  }, {\n    \"@value\": \"\",\n    \"@language\": \"it\"\n  }, {\n    \"@value\": \"\",\n    \"@language\": \"fr\"\n  }, {\n    \"@value\": \"\",\n    \"@language\": \"sq\"\n  }],\n  \"my0:hasCourse\": [],\n  \"my0:aboutPerson\": {\n    \"my0:hasNationality\": [],\n    \"my0:firstName\": \"\",\n    \"my0:lastName\": \"\",\n    \"my0:formerName\": \"\",\n    \"my0:hasInstantMessaging\": [],\n    \"my0:dateOfBirth\": \"\",\n    \"@type\": \"my0:Person\",\n    \"my0:email\": \"\",\n    \"my0:photo\": \"\",\n    \"my0:title\": \"\",\n    \"my0:driversLicence\": \"\",\n    \"my0:hasCitizenship\": [],\n    \"my0:hasWebsite\": [],\n    \"my0:address\": {\n      \"@type\": \"my0:Address\",\n      \"my0:country\": \"\",\n      \"my0:postalCode\": \"\",\n      \"my0:street\": [{\n        \"@value\": \"\",\n        \"@language\": \"en\"\n      }, {\n        \"@value\": \"\",\n        \"@language\": \"de\"\n      }, {\n        \"@value\": \"\",\n        \"@language\": \"it\"\n      }, {\n        \"@value\": \"\",\n        \"@language\": \"fr\"\n      }, {\n        \"@value\": \"\",\n        \"@language\": \"sq\"\n      }],\n      \"my0:city\": [{\n        \"@value\": \"\",\n        \"@language\": \"en\"\n      }, {\n        \"@value\": \"\",\n        \"@language\": \"de\"\n      }, {\n        \"@value\": \"\",\n        \"@language\": \"it\"\n      }, {\n        \"@value\": \"\",\n        \"@language\": \"fr\"\n      }, {\n        \"@value\": \"\",\n        \"@language\": \"sq\"\n      }]\n    },\n    \"my0:phoneNumberHome\": \"\",\n    \"my0:phoneNumberWork\": \"\",\n    \"my0:phoneNumberMobile\": \"\",\n    \"my0:personShortDescription\": [{\n      \"@value\": \"\",\n      \"@language\": \"en\"\n    }, {\n      \"@value\": \"\",\n      \"@language\": \"it\"\n    }, {\n      \"@value\": \"\",\n      \"@language\": \"fr\"\n    }, {\n      \"@value\": \"\",\n      \"@language\": \"de\"\n    }, {\n      \"@value\": \"\",\n      \"@language\": \"sq\"\n    }],\n    \"my0:personLongDescription\": [{\n      \"@value\": \"\",\n      \"@language\": \"en\"\n    }, {\n      \"@value\": \"\",\n      \"@language\": \"it\"\n    }, {\n      \"@value\": \"\",\n      \"@language\": \"fr\"\n    }, {\n      \"@value\": \"\",\n      \"@language\": \"de\"\n    }, {\n      \"@value\": \"\",\n      \"@language\": \"sq\"\n    }],\n    \"my0:gender\": \"\"\n  },\n  \"my0:hasSkill\": [],\n  \"@type\": \"my0:CV\",\n  \"my0:hasTarget\": {\n    \"@type\": \"my0:Target\",\n    \"my0:targetJobDescription\": [{\n      \"@value\": \"\",\n      \"@language\": \"en\"\n    }, {\n      \"@value\": \"\",\n      \"@language\": \"de\"\n    }, {\n      \"@value\": \"\",\n      \"@language\": \"it\"\n    }, {\n      \"@value\": \"\",\n      \"@language\": \"fr\"\n    }, {\n      \"@value\": \"\",\n      \"@language\": \"sq\"\n    }],\n    \"my0:targetJobTitle\": [{\n      \"@value\": \"\",\n      \"@language\": \"en\"\n    }, {\n      \"@value\": \"\",\n      \"@language\": \"de\"\n    }, {\n      \"@value\": \"\",\n      \"@language\": \"it\"\n    }, {\n      \"@value\": \"\",\n      \"@language\": \"fr\"\n    }, {\n      \"@value\": \"\",\n      \"@language\": \"sq\"\n    }],\n    \"my0:targetWeeksNoticePeriod\": [{\n      \"@value\": \"\",\n      \"@language\": \"en\"\n    }, {\n      \"@value\": \"\",\n      \"@language\": \"de\"\n    }, {\n      \"@value\": \"\",\n      \"@language\": \"it\"\n    }, {\n      \"@value\": \"\",\n      \"@language\": \"fr\"\n    }, {\n      \"@value\": \"\",\n      \"@language\": \"sq\"\n    }],\n    \"my0:targetCountry\": [],\n    \"my0:targetConditionWillRelocate\": true,\n    \"my0:targetConditionWillTravel\": \"\",\n    \"my0:conditionWillRelocate\": true,\n    \"my0:targetSalaryRange\": \"\",\n    \"my0:targetCompanySize\": \"\",\n    \"my0:targetCareerLevel\": \"\",\n    \"my0:targetCompanyDescription\": [{\n      \"@value\": \"\",\n      \"@language\": \"en\"\n    }, {\n      \"@value\": \"\",\n      \"@language\": \"de\"\n    }, {\n      \"@value\": \"\",\n      \"@language\": \"it\"\n    }, {\n      \"@value\": \"\",\n      \"@language\": \"fr\"\n    }, {\n      \"@value\": \"\",\n      \"@language\": \"sq\"\n    }],\n    \"my0:targetCompanyField\": [],\n    \"my0:targetRegion\": []\n  },\n  \"my0:hasOtherInfo\": [],\n  \"my0:hasPublication\": [],\n  \"my0:hasPatent\": [],\n  \"my0:hasProject\": [],\n  \"my0:hasHonorAward\": [],\n  \"my0:hasEducation\": [],\n  \"my0:cvIsActive\": true,\n  \"@context\": {\n    \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\n    \"rdf\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n    \"country\": \"http://www.bpiresearch.com/BPMO/2004/03/03/cdl/Countries#\",\n    \"my0\": \"http://example.com/rdf2resume_ontology.rdf#\",\n    \"xsd\": \"http://www.w3.org/2001/XMLSchema#\",\n    \"mybase0\": \"http://example.com/rdf2resume_base_ontology.rdf#\"\n  }\n};\n\nfunction replaceLanguageValue(data, language, value) {\n  let length = data.length;\n\n  for (let i = 0; i < length; i++) {\n    if (data[i][\"@language\"] === language) {\n      data[i][\"@value\"] = value;\n      break;\n    }\n  }\n\n  return data;\n}\n\nfunction orderListByDate(listObject, dateName) {\n  console.log(listObject);\n  let newOrderedList = listObject.sort(function (a, b) {\n    // Turn your strings into dates, and then subtract them\n    // to get a value that is either negative, positive, or zero.\n    return new Date(b[dateName]) - new Date(a[dateName]);\n  });\n  return newOrderedList;\n}\n\nexport default ((state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case FETCH_CV:\n      return _objectSpread({}, state, {\n        cv: action.payload\n      });\n\n    case FETCH_ABOUT_CV:\n      return _objectSpread({}, state, {\n        aboutCV: action.payload\n      });\n\n    case FETCH_ABOUT_PERSON:\n      return _objectSpread({}, state, {\n        aboutPerson: action.payload\n      });\n\n    case FETCH_TARGET:\n      return _objectSpread({}, state, {\n        target: action.payload\n      });\n\n    case FETCH_EDUCATION:\n      return _objectSpread({}, state, {\n        education: action.payload\n      });\n\n    case FETCH_COURSES:\n      return _objectSpread({}, state, {\n        courses: action.payload\n      });\n\n    case FETCH_WORK_HISTORY:\n      return _objectSpread({}, state, {\n        workHistory: action.payload\n      });\n\n    case FETCH_SKILLS:\n      return _objectSpread({}, state, {\n        skills: action.payload\n      });\n\n    case FETCH_REFERENCES:\n      return _objectSpread({}, state, {\n        references: action.payload\n      });\n\n    case FETCH_OTHER_INFO:\n      return _objectSpread({}, state[\"my0:hasOtherInfo\"], _.mapKeys(action.payload, \"id\"));\n\n    case CREATE_OTHER_INFO:\n      let otherinfos = _objectSpread({}, state);\n\n      otherinfos['my0:hasOtherInfo'].push(action.payload);\n      return otherinfos;\n\n    case UPDATE_OTHER_INFO:\n      let updateotherinfos = _objectSpread({}, state);\n\n      updateotherinfos['my0:hasOtherInfo'][action.payload.index] = action.payload.object;\n      return updateotherinfos;\n\n    case REMOVE_OTHER_INFO:\n      let removedotherinfo = _objectSpread({}, state);\n\n      removedotherinfo = removedotherinfo[\"my0:hasOtherInfo\"];\n\n      let removedotherinfos = _.filter(removedotherinfo, function (item, index) {\n        return index !== action.payload;\n      });\n\n      return _objectSpread({}, state, {\n        \"my0:hasOtherInfo\": removedotherinfos\n      });\n\n    case CREATE_PUBLICATION:\n      let pubs = _objectSpread({}, state);\n\n      let puArray = pubs['my0:hasPublication'];\n      puArray.push(action.payload);\n      let sortedpuArray = orderListByDate(puArray, \"my0:publicationDate\");\n      pubs['my0:hasPublication'] = sortedpuArray;\n      return pubs;\n\n    case UPDATE_PUBLICATION:\n      let updatedpubs = _objectSpread({}, state);\n\n      let uppuArray = updatedpubs['my0:hasPublication'];\n      uppuArray[action.payload.index] = action.payload.object;\n      let sorteduppuArray = orderListByDate(uppuArray, \"my0:publicationDate\");\n      updatedpubs['my0:hasPublication'] = sorteduppuArray;\n      return updatedpubs;\n\n    case REMOVE_PUBLICATION:\n      let removepub = _objectSpread({}, state);\n\n      removepub = removepub[\"my0:hasPublication\"];\n\n      let removedpubss = _.filter(removepub, function (item, index) {\n        return index !== action.payload;\n      });\n\n      return _objectSpread({}, state, {\n        \"my0:hasPublication\": removedpubss\n      });\n\n    case CREATE_PATENT:\n      let pats = _objectSpread({}, state);\n\n      let paArray = pats['my0:hasPatent'];\n      paArray.push(action.payload);\n      let sortedpaArray = orderListByDate(paArray, \"my0:patentIssuedDate\");\n      pats['my0:hasPatent'] = sortedpaArray;\n      return pats;\n\n    case UPDATE_PATENT:\n      let updatedpats = _objectSpread({}, state);\n\n      let uppaArray = updatedpats['my0:hasPatent'];\n      uppaArray[action.payload.index] = action.payload.object;\n      let sorteduppaArray = orderListByDate(uppaArray, \"my0:patentIssuedDate\");\n      updatedpats['my0:hasPatent'] = sorteduppaArray;\n      return updatedpats;\n\n    case REMOVE_PATENT:\n      let removepat = _objectSpread({}, state);\n\n      removepat = removepat[\"my0:hasPatent\"];\n\n      let removedpatss = _.filter(removepat, function (item, index) {\n        return index !== action.payload;\n      });\n\n      return _objectSpread({}, state, {\n        \"my0:hasPatent\": removedpatss\n      });\n\n    case CREATE_PROJECT:\n      let pros = _objectSpread({}, state);\n\n      pros['my0:hasProject'].push(action.payload);\n      return pros;\n\n    case UPDATE_PROJECT:\n      let updatedpros = _objectSpread({}, state);\n\n      updatedpros['my0:hasProject'][action.payload.index] = action.payload.object;\n      return updatedpros;\n\n    case REMOVE_PROJECT:\n      let removepros = _objectSpread({}, state);\n\n      removepros = removepros[\"my0:hasProject\"];\n\n      let removeprosss = _.filter(removepros, function (item, index) {\n        return index !== action.payload;\n      });\n\n      return _objectSpread({}, state, {\n        \"my0:hasProject\": removeprosss\n      });\n\n    case CREATE_HONOR:\n      let hons = _objectSpread({}, state);\n\n      let honsArray = hons['my0:hasHonorAward'];\n      honsArray.push(action.payload);\n      let sortedHonsArray = orderListByDate(honsArray, \"my0:honorIssuedDate\");\n      hons['my0:hasHonorAward'] = sortedHonsArray;\n      return hons;\n\n    case UPDATE_HONOR:\n      let updateshons = _objectSpread({}, state);\n\n      let uphonsArray = updateshons['my0:hasHonorAward'];\n      uphonsArray[action.payload.index] = action.payload.object;\n      let sortedupHonsArray = orderListByDate(uphonsArray, \"my0:honorIssuedDate\");\n      updateshons['my0:hasHonorAward'] = sortedupHonsArray;\n      return updateshons;\n\n    case REMOVE_HONOR:\n      let removehons = _objectSpread({}, state);\n\n      removehons = removehons[\"my0:hasHonorAward\"];\n\n      let removehonss = _.filter(removehons, function (item, index) {\n        return index !== action.payload;\n      });\n\n      return _objectSpread({}, state, {\n        \"my0:hasHonorAward\": removehonss\n      });\n\n    case CREATE_REFERENCE:\n      let references = _objectSpread({}, state);\n\n      references['my0:hasReference'].push(action.payload);\n      return references;\n\n    case UPDATE_REFERENCE:\n      let updatereferences = _objectSpread({}, state);\n\n      updatereferences['my0:hasReference'][action.payload.index] = action.payload.object;\n      return updatereferences;\n\n    case REMOVE_REFERENCE:\n      let removereference = _objectSpread({}, state);\n\n      removereference = removereference[\"my0:hasReference\"];\n\n      let removereferences = _.filter(removereference, function (item, index) {\n        return index !== action.payload;\n      });\n\n      return _objectSpread({}, state, {\n        \"my0:hasReference\": removereferences\n      });\n\n    case CREATE_WORK_HISTORY:\n      let workhistories = _objectSpread({}, state);\n\n      let workArray = workhistories['my0:hasWorkHistory'];\n      workArray.push(action.payload);\n      let sortedworkArray = orderListByDate(workArray, \"my0:startDate\");\n      workhistories['my0:hasWorkHistory'] = sortedworkArray;\n      return workhistories;\n\n    case UPDATE_WORK_HISTORY:\n      let updateworkhistories = _objectSpread({}, state);\n\n      let upworkArray = updateworkhistories['my0:hasWorkHistory'];\n      upworkArray[action.payload.index] = action.payload.object;\n      let sortedupworkArray = orderListByDate(upworkArray, \"my0:startDate\");\n      updateworkhistories['my0:hasWorkHistory'] = sortedupworkArray;\n      return updateworkhistories;\n\n    case REMOVE_WORK_HISTORY:\n      let removeworkhistory = _objectSpread({}, state);\n\n      removeworkhistory = removeworkhistory[\"my0:hasWorkHistory\"];\n\n      let removeworkhistorys = _.filter(removeworkhistory, function (item, index) {\n        return index !== action.payload;\n      });\n\n      return _objectSpread({}, state, {\n        \"my0:hasWorkHistory\": removeworkhistorys\n      });\n\n    case CREATE_EDUCATION:\n      let educations = _objectSpread({}, state);\n\n      let eduArray = educations['my0:hasEducation'];\n      eduArray.push(action.payload);\n      let sortededuArray = orderListByDate(eduArray, \"my0:eduStartDate\");\n      educations['my0:hasEducation'] = sortededuArray;\n      return educations;\n\n    case UPDATE_EDUCATION:\n      let updateeducations = _objectSpread({}, state);\n\n      let upeduArray = updateeducations['my0:hasEducation'];\n      upeduArray[action.payload.index] = action.payload.object;\n      let sortedupeduArray = orderListByDate(upeduArray, \"my0:eduStartDate\");\n      updateeducations['my0:hasEducation'] = sortedupeduArray;\n      return updateeducations;\n\n    case REMOVE_EDUCATION:\n      let removeeducation = _objectSpread({}, state);\n\n      removeeducation = removeeducation[\"my0:hasEducation\"];\n\n      let removeeducations = _.filter(removeeducation, function (item, index) {\n        return index !== action.payload;\n      });\n\n      return _objectSpread({}, state, {\n        \"my0:hasEducation\": removeeducations\n      });\n\n    case CREATE_COURSE:\n      let courses = _objectSpread({}, state);\n\n      let coArray = courses['my0:hasCourse'];\n      coArray.push(action.payload);\n      let sortedcoArray = orderListByDate(coArray, \"my0:courseStartDate\");\n      courses['my0:hasCourse'] = sortedcoArray;\n      return courses;\n\n    case UPDATE_COURSE:\n      let updatecourses = _objectSpread({}, state);\n\n      let upcoArray = updatecourses['my0:hasCourse'];\n      upcoArray[action.payload.index] = action.payload.object;\n      ;\n      let sortedupcoArray = orderListByDate(upcoArray, \"my0:courseStartDate\");\n      updatecourses['my0:hasCourse'] = sortedupcoArray;\n      return updatecourses;\n\n    case REMOVE_COURSE:\n      let removecourses = _objectSpread({}, state);\n\n      removecourses = removecourses[\"my0:hasCourse\"];\n\n      let removecoursess = _.filter(removecourses, function (item, index) {\n        return index !== action.payload;\n      });\n\n      return _objectSpread({}, state, {\n        \"my0:hasCourse\": removecoursess\n      });\n\n    case CREATE_OTHER_SKILL:\n      let otherskills = _objectSpread({}, state);\n\n      otherskills['my0:hasSkill'].push(action.payload);\n      return otherskills;\n\n    case UPDATE_OTHER_SKILL:\n      let updatedskill = _objectSpread({}, state);\n\n      updatedskill['my0:hasSkill'][action.payload.index] = action.payload.object;\n      return updatedskill;\n\n    case REMOVE_OTHER_SKILL:\n      let removedskills = _objectSpread({}, state);\n\n      removedskills = removedskills[\"my0:hasSkill\"];\n\n      let removedskillss = _.filter(removedskills, function (item, index) {\n        return index !== action.payload;\n      });\n\n      return _objectSpread({}, state, {\n        \"my0:hasSkill\": removedskillss\n      });\n\n    case UPDATE_ABOUT_CV:\n      let aboutcv = _objectSpread({}, state);\n\n      let property = aboutcv[\"my0:\" + action.payload.id];\n\n      if (action.payload.language) {\n        property = replaceLanguageValue(property, action.payload.language, action.payload.value);\n        aboutcv[\"my0:\" + action.payload.id] = property;\n      } else {\n        aboutcv[\"my0:\" + action.payload.id] = action.payload.value;\n      }\n\n      return aboutcv;\n\n    case UPDATE_CV_LAST_UPDATE:\n      let aboutcvUpd = _objectSpread({}, state);\n\n      let today = new Date();\n      let currdate = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n      aboutcvUpd[\"my0:cvLastUpdate\"] = currdate;\n      return aboutcvUpd;\n\n    case UPDATE_ABOUT_PERSON:\n      let aboutperson = _objectSpread({}, state);\n\n      if (action.payload.secondLevel && action.payload.secondLevel !== undefined) {\n        let propertyPersonal = aboutperson['my0:aboutPerson'][\"my0:\" + action.payload.secondLevel][\"my0:\" + action.payload.id];\n\n        if (action.payload.language) {\n          propertyPersonal = replaceLanguageValue(propertyPersonal, action.payload.language, action.payload.value);\n          aboutperson['my0:aboutPerson'][\"my0:\" + action.payload.secondLevel][\"my0:\" + action.payload.id] = propertyPersonal;\n        } else {\n          aboutperson['my0:aboutPerson'][\"my0:\" + action.payload.secondLevel][\"my0:\" + action.payload.id] = action.payload.value;\n        }\n      } else {\n        let propertyPersonal = aboutperson['my0:aboutPerson'][\"my0:\" + action.payload.id];\n\n        if (action.payload.language) {\n          propertyPersonal = replaceLanguageValue(propertyPersonal, action.payload.language, action.payload.value);\n          aboutperson['my0:aboutPerson'][\"my0:\" + action.payload.id] = propertyPersonal;\n        } else {\n          aboutperson['my0:aboutPerson'][\"my0:\" + action.payload.id] = action.payload.value;\n        }\n      }\n\n      return aboutperson;\n\n    case UPDATE_SKILLS:\n      let updatedSkills = _objectSpread({}, state);\n\n      updatedSkills['my0:hasSkill'] = action.payload;\n      return updatedSkills;\n\n    case UPDATE_TARGET:\n      let updatetarget = _objectSpread({}, state);\n\n      let propertyTarget = updatetarget['my0:hasTarget'][\"my0:\" + action.payload.id];\n\n      if (action.payload.language) {\n        propertyTarget = replaceLanguageValue(propertyTarget, action.payload.language, action.payload.value);\n        updatetarget['my0:hasTarget'][\"my0:\" + action.payload.id] = propertyTarget;\n      } else {\n        updatetarget['my0:hasTarget'][\"my0:\" + action.payload.id] = action.payload.value;\n      }\n\n      return updatetarget;\n\n    case UPDATE_CV:\n      return _objectSpread({}, action.payload);\n\n    case CREATE_WEBSITE:\n      let aps = _objectSpread({}, state);\n\n      aps['my0:aboutPerson']['my0:hasWebsite'].push({\n        \"@type\": \"my0:Website\",\n        \"my0:websiteURL\": \"\",\n        \"my0:websiteType\": \"\"\n      });\n      return aps;\n\n    case UPDATE_WEBSITE:\n      let uaps = _objectSpread({}, state);\n\n      uaps['my0:aboutPerson']['my0:hasWebsite'][action.payload.id][action.payload.name] = action.payload.value;\n      return uaps;\n\n    case REMOVE_WEBSITE:\n      let removedimsdd = _objectSpread({}, state);\n\n      removedimsdd = removedimsdd[\"my0:aboutPerson\"];\n\n      let removedimss = _.filter(removedimsdd['my0:hasWebsite'], function (item, index) {\n        return index !== action.payload;\n      });\n\n      removedimsdd['my0:hasWebsite'] = removedimss;\n      return _objectSpread({}, state, {\n        \"my0:aboutPerson\": removedimsdd\n      });\n\n    case CREATE_IM:\n      let ap = _objectSpread({}, state);\n\n      ap['my0:aboutPerson']['my0:hasInstantMessaging'].push({\n        \"@type\": \"my0:InstantMessaging\",\n        \"my0:instantMessagingName\": \"\",\n        \"my0:instantMessagingUsername\": \"\"\n      });\n      return ap;\n\n    case UPDATE_IM:\n      let uap = _objectSpread({}, state);\n\n      uap['my0:aboutPerson']['my0:hasInstantMessaging'][action.payload.id][action.payload.name] = action.payload.value;\n      return uap;\n\n    case REMOVE_IM:\n      let removedim = _objectSpread({}, state);\n\n      removedim = removedim[\"my0:aboutPerson\"];\n\n      let removedims = _.filter(removedim['my0:hasInstantMessaging'], function (item, index) {\n        return index !== action.payload;\n      });\n\n      removedim['my0:hasInstantMessaging'] = removedims;\n      return _objectSpread({}, state, {\n        \"my0:aboutPerson\": removedim\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/eelezi/thesis/rdf2resume/UI/src/reducers/cvReducer.js"],"names":["_","FETCH_CV","FETCH_ABOUT_CV","FETCH_TARGET","FETCH_ABOUT_PERSON","FETCH_COURSES","FETCH_EDUCATION","FETCH_OTHER_INFO","FETCH_REFERENCES","FETCH_SKILLS","FETCH_WORK_HISTORY","CREATE_OTHER_INFO","REMOVE_OTHER_INFO","UPDATE_OTHER_INFO","CREATE_IM","UPDATE_IM","REMOVE_IM","CREATE_HONOR","UPDATE_HONOR","REMOVE_HONOR","CREATE_PATENT","UPDATE_PATENT","REMOVE_PATENT","CREATE_PROJECT","UPDATE_PROJECT","REMOVE_PROJECT","CREATE_PUBLICATION","UPDATE_PUBLICATION","REMOVE_PUBLICATION","CREATE_WEBSITE","UPDATE_WEBSITE","REMOVE_WEBSITE","CREATE_REFERENCE","UPDATE_REFERENCE","REMOVE_REFERENCE","CREATE_WORK_HISTORY","UPDATE_WORK_HISTORY","REMOVE_WORK_HISTORY","CREATE_EDUCATION","UPDATE_EDUCATION","REMOVE_EDUCATION","CREATE_COURSE","UPDATE_COURSE","REMOVE_COURSE","CREATE_OTHER_SKILL","UPDATE_OTHER_SKILL","REMOVE_OTHER_SKILL","UPDATE_ABOUT_CV","UPDATE_ABOUT_PERSON","UPDATE_TARGET","UPDATE_SKILLS","UPDATE_CV","UPDATE_CV_LAST_UPDATE","INITIAL_STATE","replaceLanguageValue","data","language","value","length","i","orderListByDate","listObject","dateName","console","log","newOrderedList","sort","a","b","Date","state","action","type","cv","payload","aboutCV","aboutPerson","target","education","courses","workHistory","skills","references","mapKeys","otherinfos","push","updateotherinfos","index","object","removedotherinfo","removedotherinfos","filter","item","pubs","puArray","sortedpuArray","updatedpubs","uppuArray","sorteduppuArray","removepub","removedpubss","pats","paArray","sortedpaArray","updatedpats","uppaArray","sorteduppaArray","removepat","removedpatss","pros","updatedpros","removepros","removeprosss","hons","honsArray","sortedHonsArray","updateshons","uphonsArray","sortedupHonsArray","removehons","removehonss","updatereferences","removereference","removereferences","workhistories","workArray","sortedworkArray","updateworkhistories","upworkArray","sortedupworkArray","removeworkhistory","removeworkhistorys","educations","eduArray","sortededuArray","updateeducations","upeduArray","sortedupeduArray","removeeducation","removeeducations","coArray","sortedcoArray","updatecourses","upcoArray","sortedupcoArray","removecourses","removecoursess","otherskills","updatedskill","removedskills","removedskillss","aboutcv","property","id","aboutcvUpd","today","currdate","getFullYear","getMonth","getDate","aboutperson","secondLevel","undefined","propertyPersonal","updatedSkills","updatetarget","propertyTarget","aps","uaps","name","removedimsdd","removedimss","ap","uap","removedim","removedims"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\nimport {\n  FETCH_CV,\n  FETCH_ABOUT_CV,\n  FETCH_TARGET,\n  FETCH_ABOUT_PERSON,\n  FETCH_COURSES,\n  FETCH_EDUCATION,\n  FETCH_OTHER_INFO,\n  FETCH_REFERENCES,\n  FETCH_SKILLS,\n  FETCH_WORK_HISTORY,\n  CREATE_OTHER_INFO,\n  REMOVE_OTHER_INFO,\n  UPDATE_OTHER_INFO,\n  CREATE_IM,\n  UPDATE_IM,\n  REMOVE_IM,\n  CREATE_HONOR,\n  UPDATE_HONOR,\n  REMOVE_HONOR,\n  CREATE_PATENT,\n  UPDATE_PATENT,\n  REMOVE_PATENT,\n  CREATE_PROJECT,\n  UPDATE_PROJECT,\n  REMOVE_PROJECT,\n  CREATE_PUBLICATION,\n  UPDATE_PUBLICATION,\n  REMOVE_PUBLICATION,\n  CREATE_WEBSITE,\n  UPDATE_WEBSITE,\n  REMOVE_WEBSITE,\n  CREATE_REFERENCE,\n  UPDATE_REFERENCE,\n  REMOVE_REFERENCE,\n  CREATE_WORK_HISTORY,\n  UPDATE_WORK_HISTORY,\n  REMOVE_WORK_HISTORY,\n  CREATE_EDUCATION,\n  UPDATE_EDUCATION,\n  REMOVE_EDUCATION,\n  CREATE_COURSE,\n  UPDATE_COURSE,\n  REMOVE_COURSE,\n  CREATE_OTHER_SKILL,\n  UPDATE_OTHER_SKILL,\n  REMOVE_OTHER_SKILL,\n  UPDATE_ABOUT_CV,\n  UPDATE_ABOUT_PERSON,\n  UPDATE_TARGET,\n  UPDATE_SKILLS,\n  UPDATE_CV,\n  UPDATE_CV_LAST_UPDATE\n} from \"../actions/types\";\n\n// export function generateUUID() { // Public Domain/MIT\n//   var d = new Date().getTime();//Timestamp\n//   var d2 = (performance && performance.now && (performance.now()*1000)) || 0;//Time in microseconds since page-load or 0 if unsupported\n//   return 'Nxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n//       var r = Math.random() * 16;//random number between 0 and 16\n//       if(d > 0){//Use timestamp until depleted\n//           r = (d + r)%16 | 0;\n//           d = Math.floor(d/16);\n//       } else {//Use microseconds since page-load if supported\n//           r = (d2 + r)%16 | 0;\n//           d2 = Math.floor(d2/16);\n//       }\n//       return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n//   });\n// }\n\nconst INITIAL_STATE = {\n  \"my0:hasReference\": [],\n  \"my0:hasWorkHistory\": [],\n  \"my0:cvLastUpdate\": \"\",\n  \"my0:cvIsConfidential\": false,\n  \"my0:cvCopyright\": [{\n      \"@value\": \"\",\n      \"@language\": \"en\"\n    },\n    {\n      \"@value\": \"\",\n      \"@language\": \"de\"\n    },\n    {\n      \"@value\": \"\",\n      \"@language\": \"it\"\n    },\n    {\n      \"@value\": \"\",\n      \"@language\": \"fr\"\n    },\n    {\n      \"@value\": \"\",\n      \"@language\": \"sq\"\n    }\n  ],\n  \"my0:cvNotes\": [{\n      \"@value\": \"\",\n      \"@language\": \"en\"\n    },\n    {\n      \"@value\": \"\",\n      \"@language\": \"de\"\n    },\n    {\n      \"@value\": \"\",\n      \"@language\": \"it\"\n    },\n    {\n      \"@value\": \"\",\n      \"@language\": \"fr\"\n    },\n    {\n      \"@value\": \"\",\n      \"@language\": \"sq\"\n    }\n  ],\n  \"my0:hasCourse\": [],\n  \"my0:aboutPerson\": {\n    \"my0:hasNationality\": [],\n    \"my0:firstName\": \"\",\n    \"my0:lastName\": \"\",\n    \"my0:formerName\": \"\",\n    \"my0:hasInstantMessaging\": [],\n    \"my0:dateOfBirth\": \"\",\n    \"@type\": \"my0:Person\",\n    \"my0:email\": \"\",\n    \"my0:photo\": \"\",\n    \"my0:title\": \"\",\n    \"my0:driversLicence\": \"\",\n    \"my0:hasCitizenship\": [],\n    \"my0:hasWebsite\": [],\n    \"my0:address\": {\n      \"@type\": \"my0:Address\",\n      \"my0:country\": \"\",\n      \"my0:postalCode\": \"\",\n      \"my0:street\": [{\n          \"@value\": \"\",\n          \"@language\": \"en\"\n        },\n        {\n          \"@value\": \"\",\n          \"@language\": \"de\"\n        },\n        {\n          \"@value\": \"\",\n          \"@language\": \"it\"\n        },\n        {\n          \"@value\": \"\",\n          \"@language\": \"fr\"\n        },\n        {\n          \"@value\": \"\",\n          \"@language\": \"sq\"\n        }\n      ],\n      \"my0:city\": [{\n          \"@value\": \"\",\n          \"@language\": \"en\"\n        },\n        {\n          \"@value\": \"\",\n          \"@language\": \"de\"\n        },\n        {\n          \"@value\": \"\",\n          \"@language\": \"it\"\n        },\n        {\n          \"@value\": \"\",\n          \"@language\": \"fr\"\n        },\n        {\n          \"@value\": \"\",\n          \"@language\": \"sq\"\n        }\n      ]\n    },\n    \"my0:phoneNumberHome\": \"\",\n    \"my0:phoneNumberWork\": \"\",\n    \"my0:phoneNumberMobile\": \"\",\n    \"my0:personShortDescription\": [{\n        \"@value\": \"\",\n        \"@language\": \"en\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"it\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"fr\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"de\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"sq\"\n      },\n    ],\n    \"my0:personLongDescription\": [{\n        \"@value\": \"\",\n        \"@language\": \"en\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"it\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"fr\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"de\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"sq\"\n      },\n    ],\n    \"my0:gender\": \"\"\n  },\n  \"my0:hasSkill\": [],\n  \"@type\": \"my0:CV\",\n  \"my0:hasTarget\": {\n    \"@type\": \"my0:Target\",\n    \"my0:targetJobDescription\": [{\n        \"@value\": \"\",\n        \"@language\": \"en\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"de\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"it\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"fr\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"sq\"\n      }\n    ],\n    \"my0:targetJobTitle\": [{\n        \"@value\": \"\",\n        \"@language\": \"en\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"de\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"it\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"fr\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"sq\"\n      }\n    ],\n    \"my0:targetWeeksNoticePeriod\": [{\n        \"@value\": \"\",\n        \"@language\": \"en\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"de\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"it\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"fr\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"sq\"\n      }\n    ],\n    \"my0:targetCountry\": [],\n    \"my0:targetConditionWillRelocate\": true,\n    \"my0:targetConditionWillTravel\": \"\",\n    \"my0:conditionWillRelocate\": true,\n    \"my0:targetSalaryRange\": \"\",\n    \"my0:targetCompanySize\": \"\",\n    \"my0:targetCareerLevel\": \"\",\n    \"my0:targetCompanyDescription\": [{\n        \"@value\": \"\",\n        \"@language\": \"en\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"de\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"it\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"fr\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"sq\"\n      }\n    ],\n    \"my0:targetCompanyField\": [],\n    \"my0:targetRegion\": []\n  },\n  \"my0:hasOtherInfo\": [],\n  \"my0:hasPublication\": [],\n  \"my0:hasPatent\": [],\n  \"my0:hasProject\": [],\n  \"my0:hasHonorAward\": [],\n  \"my0:hasEducation\": [],\n  \"my0:cvIsActive\": true,\n  \"@context\": {\n    \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\n    \"rdf\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n    \"country\": \"http://www.bpiresearch.com/BPMO/2004/03/03/cdl/Countries#\",\n    \"my0\": \"http://example.com/rdf2resume_ontology.rdf#\",\n    \"xsd\": \"http://www.w3.org/2001/XMLSchema#\",\n    \"mybase0\": \"http://example.com/rdf2resume_base_ontology.rdf#\"\n  }\n}\n\nfunction replaceLanguageValue(data, language, value) {\n  let length = data.length;\n  for (let i = 0; i < length; i++) {\n    if (data[i][\"@language\"] === language) {\n      data[i][\"@value\"] = value;\n      break;\n    }\n  }\n  return data;\n}\n\nfunction orderListByDate(listObject, dateName) {\n  console.log(listObject);\n  let newOrderedList = listObject.sort(function (a, b) {\n    // Turn your strings into dates, and then subtract them\n    // to get a value that is either negative, positive, or zero.\n    return new Date(b[dateName]) - new Date(a[dateName]);\n  });\n  return newOrderedList\n}\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case FETCH_CV:\n      return {\n        ...state, cv: action.payload\n      };\n    case FETCH_ABOUT_CV:\n      return {\n        ...state, aboutCV: action.payload\n      };\n    case FETCH_ABOUT_PERSON:\n      return {\n        ...state, aboutPerson: action.payload\n      };\n    case FETCH_TARGET:\n      return {\n        ...state, target: action.payload\n      };\n    case FETCH_EDUCATION:\n      return {\n        ...state, education: action.payload\n      };\n    case FETCH_COURSES:\n      return {\n        ...state, courses: action.payload\n      };\n    case FETCH_WORK_HISTORY:\n      return {\n        ...state, workHistory: action.payload\n      };\n    case FETCH_SKILLS:\n      return {\n        ...state, skills: action.payload\n      };\n    case FETCH_REFERENCES:\n      return {\n        ...state, references: action.payload\n      };\n    case FETCH_OTHER_INFO:\n      return {\n        ...state[\"my0:hasOtherInfo\"], ..._.mapKeys(action.payload, \"id\")\n      };\n    case CREATE_OTHER_INFO:\n      let otherinfos = {\n        ...state\n      };\n      otherinfos['my0:hasOtherInfo'].push(action.payload);\n      return otherinfos;\n    case UPDATE_OTHER_INFO:\n      let updateotherinfos = {\n        ...state\n      };\n      updateotherinfos['my0:hasOtherInfo'][action.payload.index] = action.payload.object;\n      return updateotherinfos;\n    case REMOVE_OTHER_INFO:\n      let removedotherinfo = {\n        ...state\n      };\n      removedotherinfo = removedotherinfo[\"my0:hasOtherInfo\"];\n      let removedotherinfos = _.filter(removedotherinfo, function (item, index) {\n        return index !== action.payload;\n      });\n      return {\n        ...state, \"my0:hasOtherInfo\": removedotherinfos\n      };\n    case CREATE_PUBLICATION:\n      let pubs = {\n        ...state\n      };\n      let puArray = pubs['my0:hasPublication'];\n      puArray.push(action.payload);\n      let sortedpuArray = orderListByDate(puArray, \"my0:publicationDate\");\n      pubs['my0:hasPublication'] = sortedpuArray;\n      return pubs;\n    case UPDATE_PUBLICATION:\n      let updatedpubs = {\n        ...state\n      };\n      let uppuArray = updatedpubs['my0:hasPublication'];\n      uppuArray[action.payload.index] = action.payload.object;\n      let sorteduppuArray = orderListByDate(uppuArray, \"my0:publicationDate\");\n      updatedpubs['my0:hasPublication'] = sorteduppuArray;\n      return updatedpubs;\n    case REMOVE_PUBLICATION:\n      let removepub = {\n        ...state\n      };\n      removepub = removepub[\"my0:hasPublication\"];\n      let removedpubss = _.filter(removepub, function (item, index) {\n        return index !== action.payload;\n      });\n      return {\n        ...state, \"my0:hasPublication\": removedpubss\n      };\n    case CREATE_PATENT:\n      let pats = {\n        ...state\n      };\n      let paArray = pats['my0:hasPatent'];\n      paArray.push(action.payload);\n      let sortedpaArray = orderListByDate(paArray, \"my0:patentIssuedDate\");\n      pats['my0:hasPatent'] = sortedpaArray;\n      return pats;\n    case UPDATE_PATENT:\n      let updatedpats = {\n        ...state\n      };\n      let uppaArray = updatedpats['my0:hasPatent'];\n      uppaArray[action.payload.index] = action.payload.object;\n      let sorteduppaArray = orderListByDate(uppaArray, \"my0:patentIssuedDate\");\n      updatedpats['my0:hasPatent'] = sorteduppaArray;\n      return updatedpats;\n    case REMOVE_PATENT:\n      let removepat = {\n        ...state\n      };\n      removepat = removepat[\"my0:hasPatent\"];\n      let removedpatss = _.filter(removepat, function (item, index) {\n        return index !== action.payload;\n      });\n      return {\n        ...state, \"my0:hasPatent\": removedpatss\n      };\n    case CREATE_PROJECT:\n      let pros = {\n        ...state\n      };\n      pros['my0:hasProject'].push(action.payload);\n      return pros;\n    case UPDATE_PROJECT:\n      let updatedpros = {\n        ...state\n      };\n      updatedpros['my0:hasProject'][action.payload.index] = action.payload.object;\n      return updatedpros;\n    case REMOVE_PROJECT:\n      let removepros = {\n        ...state\n      };\n      removepros = removepros[\"my0:hasProject\"];\n      let removeprosss = _.filter(removepros, function (item, index) {\n        return index !== action.payload;\n      });\n      return {\n        ...state, \"my0:hasProject\": removeprosss\n      };\n    case CREATE_HONOR:\n      let hons = {\n        ...state\n      };\n      let honsArray = hons['my0:hasHonorAward']\n      honsArray.push(action.payload);\n      let sortedHonsArray = orderListByDate(honsArray, \"my0:honorIssuedDate\");\n      hons['my0:hasHonorAward'] = sortedHonsArray;\n      return hons;\n    case UPDATE_HONOR:\n      let updateshons = {\n        ...state\n      };\n      let uphonsArray = updateshons['my0:hasHonorAward']\n      uphonsArray[action.payload.index] = action.payload.object;\n      let sortedupHonsArray = orderListByDate(uphonsArray, \"my0:honorIssuedDate\");\n      updateshons['my0:hasHonorAward'] = sortedupHonsArray;\n      return updateshons;\n    case REMOVE_HONOR:\n      let removehons = {\n        ...state\n      };\n      removehons = removehons[\"my0:hasHonorAward\"];\n      let removehonss = _.filter(removehons, function (item, index) {\n        return index !== action.payload;\n      });\n      return {\n        ...state, \"my0:hasHonorAward\": removehonss\n      };\n    case CREATE_REFERENCE:\n      let references = {\n        ...state\n      };\n      references['my0:hasReference'].push(action.payload);\n      return references;\n    case UPDATE_REFERENCE:\n      let updatereferences = {\n        ...state\n      };\n      updatereferences['my0:hasReference'][action.payload.index] = action.payload.object;\n      return updatereferences;\n    case REMOVE_REFERENCE:\n      let removereference = {\n        ...state\n      };\n      removereference = removereference[\"my0:hasReference\"];\n      let removereferences = _.filter(removereference, function (item, index) {\n        return index !== action.payload;\n      });\n      return {\n        ...state, \"my0:hasReference\": removereferences\n      };\n    case CREATE_WORK_HISTORY:\n      let workhistories = {\n        ...state\n      };\n      let workArray = workhistories['my0:hasWorkHistory'];\n      workArray.push(action.payload);\n      let sortedworkArray = orderListByDate(workArray, \"my0:startDate\");\n      workhistories['my0:hasWorkHistory'] = sortedworkArray;\n      return workhistories;\n    case UPDATE_WORK_HISTORY:\n      let updateworkhistories = {\n        ...state\n      };\n      let upworkArray = updateworkhistories['my0:hasWorkHistory'];\n      upworkArray[action.payload.index] = action.payload.object;\n      let sortedupworkArray = orderListByDate(upworkArray, \"my0:startDate\");\n      updateworkhistories['my0:hasWorkHistory'] = sortedupworkArray;\n      return updateworkhistories;\n    case REMOVE_WORK_HISTORY:\n      let removeworkhistory = {\n        ...state\n      };\n      removeworkhistory = removeworkhistory[\"my0:hasWorkHistory\"];\n      let removeworkhistorys = _.filter(removeworkhistory, function (item, index) {\n        return index !== action.payload;\n      });\n      return {\n        ...state, \"my0:hasWorkHistory\": removeworkhistorys\n      };\n    case CREATE_EDUCATION:\n      let educations = {\n        ...state\n      };\n      let eduArray = educations['my0:hasEducation'];\n      eduArray.push(action.payload);\n      let sortededuArray = orderListByDate(eduArray, \"my0:eduStartDate\");\n      educations['my0:hasEducation'] = sortededuArray;\n      return educations;\n    case UPDATE_EDUCATION:\n      let updateeducations = {\n        ...state\n      };\n      let upeduArray = updateeducations['my0:hasEducation'];\n      upeduArray[action.payload.index] = action.payload.object;\n      let sortedupeduArray = orderListByDate(upeduArray, \"my0:eduStartDate\");\n      updateeducations['my0:hasEducation'] = sortedupeduArray;\n      return updateeducations;\n    case REMOVE_EDUCATION:\n      let removeeducation = {\n        ...state\n      };\n      removeeducation = removeeducation[\"my0:hasEducation\"];\n      let removeeducations = _.filter(removeeducation, function (item, index) {\n        return index !== action.payload;\n      });\n      return {\n        ...state, \"my0:hasEducation\": removeeducations\n      };\n    case CREATE_COURSE:\n      let courses = {\n        ...state\n      };\n      let coArray = courses['my0:hasCourse'];\n      coArray.push(action.payload);\n      let sortedcoArray = orderListByDate(coArray, \"my0:courseStartDate\");\n      courses['my0:hasCourse'] = sortedcoArray;\n      return courses;\n    case UPDATE_COURSE:\n      let updatecourses = {\n        ...state\n      };\n      let upcoArray = updatecourses['my0:hasCourse'];\n      upcoArray[action.payload.index] = action.payload.object;;\n      let sortedupcoArray = orderListByDate(upcoArray, \"my0:courseStartDate\");\n      updatecourses['my0:hasCourse'] = sortedupcoArray;\n      return updatecourses;\n    case REMOVE_COURSE:\n      let removecourses = {\n        ...state\n      };\n      removecourses = removecourses[\"my0:hasCourse\"];\n      let removecoursess = _.filter(removecourses, function (item, index) {\n        return index !== action.payload;\n      });\n      return {\n        ...state, \"my0:hasCourse\": removecoursess\n      };\n    case CREATE_OTHER_SKILL:\n      let otherskills = {\n        ...state\n      };\n      otherskills['my0:hasSkill'].push(action.payload);\n      return otherskills;\n    case UPDATE_OTHER_SKILL:\n      let updatedskill = {\n        ...state\n      };\n      updatedskill['my0:hasSkill'][action.payload.index] = action.payload.object;\n      return updatedskill;\n    case REMOVE_OTHER_SKILL:\n      let removedskills = {\n        ...state\n      };\n      removedskills = removedskills[\"my0:hasSkill\"];\n      let removedskillss = _.filter(removedskills, function (item, index) {\n        return index !== action.payload;\n      });\n      return {\n        ...state, \"my0:hasSkill\": removedskillss\n      };\n    case UPDATE_ABOUT_CV:\n      let aboutcv = {\n        ...state\n      };\n      let property = aboutcv[\"my0:\" + action.payload.id];\n      if (action.payload.language) {\n        property = replaceLanguageValue(property, action.payload.language, action.payload.value);\n        aboutcv[\"my0:\" + action.payload.id] = property;\n      } else {\n        aboutcv[\"my0:\" + action.payload.id] = action.payload.value;\n      }\n      return aboutcv;\n    case UPDATE_CV_LAST_UPDATE:\n      let aboutcvUpd = {\n        ...state\n      };\n      let today = new Date();\n      let currdate = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n      aboutcvUpd[\"my0:cvLastUpdate\"] = currdate;\n      return aboutcvUpd;\n    case UPDATE_ABOUT_PERSON:\n      let aboutperson = {\n        ...state\n      };\n      if (action.payload.secondLevel && action.payload.secondLevel !== undefined) {\n        let propertyPersonal = aboutperson['my0:aboutPerson'][\"my0:\" + action.payload.secondLevel][\"my0:\" + action.payload.id];\n        if (action.payload.language) {\n          propertyPersonal = replaceLanguageValue(propertyPersonal, action.payload.language, action.payload.value);\n          aboutperson['my0:aboutPerson'][\"my0:\" + action.payload.secondLevel][\"my0:\" + action.payload.id] = propertyPersonal;\n        } else {\n          aboutperson['my0:aboutPerson'][\"my0:\" + action.payload.secondLevel][\"my0:\" + action.payload.id] = action.payload.value;\n        }\n      } else {\n        let propertyPersonal = aboutperson['my0:aboutPerson'][\"my0:\" + action.payload.id];\n        if (action.payload.language) {\n          propertyPersonal = replaceLanguageValue(propertyPersonal, action.payload.language, action.payload.value);\n          aboutperson['my0:aboutPerson'][\"my0:\" + action.payload.id] = propertyPersonal;\n        } else {\n          aboutperson['my0:aboutPerson'][\"my0:\" + action.payload.id] = action.payload.value;\n        }\n      }\n      return aboutperson;\n    case UPDATE_SKILLS:\n      let updatedSkills = {\n        ...state\n      };\n      updatedSkills['my0:hasSkill'] = action.payload;\n      return updatedSkills;\n    case UPDATE_TARGET:\n      let updatetarget = {\n        ...state\n      };\n      let propertyTarget = updatetarget['my0:hasTarget'][\"my0:\" + action.payload.id];\n      if (action.payload.language) {\n        propertyTarget = replaceLanguageValue(propertyTarget, action.payload.language, action.payload.value);\n        updatetarget['my0:hasTarget'][\"my0:\" + action.payload.id] = propertyTarget;\n      } else {\n        updatetarget['my0:hasTarget'][\"my0:\" + action.payload.id] = action.payload.value;\n      }\n      return updatetarget;\n    case UPDATE_CV:\n      return {\n        ...action.payload\n      };\n    case CREATE_WEBSITE:\n      let aps = {\n        ...state\n      };\n      aps['my0:aboutPerson']['my0:hasWebsite'].push({\n        \"@type\": \"my0:Website\",\n        \"my0:websiteURL\": \"\",\n        \"my0:websiteType\": \"\"\n      });\n      return aps;\n    case UPDATE_WEBSITE:\n      let uaps = {\n        ...state\n      };\n      uaps['my0:aboutPerson']['my0:hasWebsite'][action.payload.id][action.payload.name] = action.payload.value;\n      return uaps;\n    case REMOVE_WEBSITE:\n      let removedimsdd = {\n        ...state\n      };\n      removedimsdd = removedimsdd[\"my0:aboutPerson\"];\n      let removedimss = _.filter(removedimsdd['my0:hasWebsite'], function (item, index) {\n        return index !== action.payload;\n      });\n      removedimsdd['my0:hasWebsite'] = removedimss;\n      return {\n        ...state, \"my0:aboutPerson\": removedimsdd\n      };\n    case CREATE_IM:\n      let ap = {\n        ...state\n      };\n      ap['my0:aboutPerson']['my0:hasInstantMessaging'].push({\n        \"@type\": \"my0:InstantMessaging\",\n        \"my0:instantMessagingName\": \"\",\n        \"my0:instantMessagingUsername\": \"\"\n      });\n      return ap;\n    case UPDATE_IM:\n      let uap = {\n        ...state\n      };\n      uap['my0:aboutPerson']['my0:hasInstantMessaging'][action.payload.id][action.payload.name] = action.payload.value;\n      return uap;\n    case REMOVE_IM:\n      let removedim = {\n        ...state\n      };\n      removedim = removedim[\"my0:aboutPerson\"];\n      let removedims = _.filter(removedim['my0:hasInstantMessaging'], function (item, index) {\n        return index !== action.payload;\n      });\n      removedim['my0:hasInstantMessaging'] = removedims;\n      return {\n        ...state, \"my0:aboutPerson\": removedim\n      };\n    default:\n      return state;\n  }\n};"]},"metadata":{},"sourceType":"module"}