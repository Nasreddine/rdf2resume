{"ast":null,"code":"export const getLabelFromURI = uri => {\n  let uriIndex = uri.lastIndexOf(\"#\");\n  return uri.substring(uriIndex);\n};\nexport function getDataOfType(data, type) {\n  let graphs = data[\"@graph\"];\n  let length = graphs.length;\n\n  for (let i = 0; i < length; i++) {\n    if (graphs[i][\"@type\"] === type) {\n      return graphs[i];\n    }\n  }\n}\nexport function getDataOfId(data, id) {\n  let graphs = data[\"@graph\"];\n  let length = graphs.length;\n\n  for (let i = 0; i < length; i++) {\n    if (graphs[i][\"@id\"] === id) {\n      return graphs[i];\n    }\n  }\n}\nexport function getDataArrayOfType(data, type) {\n  let graphs = data[\"@graph\"];\n  let myarr = [];\n  let length = graphs.length;\n\n  for (let i = 0; i < length; i++) {\n    if (graphs[i][\"@type\"] === type) {\n      myarr.push(graphs[i]);\n    }\n  }\n\n  return myarr;\n}\nexport function renderPartialDate(dateString) {\n  var pattern = /(\\d{4})-(\\d{2})-(\\d{2})/;\n  var dt = new Date(dateString.replace(pattern, '$1-$2-$3'));\n  var m = dt.getMonth() + 1; //Month from 0 to 11\n\n  var y = dt.getFullYear();\n  return m + '/' + y;\n}\nexport function renderFullDate(dateString) {\n  var pattern = /(\\d{4})-(\\d{2})-(\\d{2})/;\n  var dt = new Date(dateString.replace(pattern, '$1-$2-$3'));\n  return dt.toDateString();\n}\n\nfunction replaceEmptyProperties(data) {\n  let hasCourse = false;\n  let hasEducation = false;\n  let hasWork = false;\n  let hasReference = false;\n  let hasPatent = false;\n  let hasPublication = false;\n  let hasProject = false;\n  let hasHonorAward = false;\n  let hasSkill = false;\n  let hasOtherInfo = false;\n  let hasNationality = false;\n  let hasInstantMessaging = false;\n  let hasCitizenship = false;\n  let hasWebsite = false;\n  let targetCompanyField = false;\n  let targetCountry = false;\n  let targetRegion = false;\n\n  for (let x in data) {\n    //check if it has course\n    if (x === \"my0:hasCourse\") {\n      hasCourse = true;\n    } else if (x === \"my0:hasPublication\") {\n      hasPublication = true;\n    } else if (x === \"my0:hasProject\") {\n      hasProject = true;\n    } else if (x === \"my0:hasPatent\") {\n      hasPatent = true;\n    } else if (x === \"my0:hasHonorAward\") {\n      hasHonorAward = true;\n    } else if (x === \"my0:hasSkill\") {\n      hasSkill = true;\n    } else if (x === \"my0:hasEducation\") {\n      hasEducation = true;\n    } else if (x === \"my0:hasReference\") {\n      hasReference = true;\n    } else if (x === \"my0:hasWorkHistory\") {\n      hasWork = true;\n    } else if (x === \"my0:hasOtherInfo\") {\n      hasOtherInfo = true;\n    } else if (x === \"my0:hasTarget\") {\n      for (let y in data[x]) {\n        if (y === \"my0:targetCompanyField\") {\n          targetCompanyField = true;\n        } else if (y === \"my0:targetCountry\") {\n          targetCountry = true;\n        } else if (y === \"my0:targetRegion\") {\n          targetRegion = true;\n        }\n      }\n    } else if (x === \"my0:aboutPerson\") {\n      for (let y in data[x]) {\n        if (y === \"my0:hasNationality\") {\n          hasNationality = true;\n        } else if (y === \"my0:hasCitizenship\") {\n          hasCitizenship = true;\n        } else if (y === \"my0:hasInstantMessaging\") {\n          hasInstantMessaging = true;\n        } else if (y === \"my0:hasWebsite\") {\n          hasWebsite = true;\n        }\n      }\n    }\n  }\n\n  if (!hasCourse) {\n    data[\"my0:hasCourse\"] = [];\n  }\n\n  if (!hasSkill) {\n    data[\"my0:hasSkill\"] = [];\n  }\n\n  if (!hasPublication) {\n    data[\"my0:hasPublication\"] = [];\n  }\n\n  if (!hasProject) {\n    data[\"my0:hasProject\"] = [];\n  }\n\n  if (!hasPatent) {\n    data[\"my0:hasPatent\"] = [];\n  }\n\n  if (!hasHonorAward) {\n    data[\"my0:hasHonorAward\"] = [];\n  }\n\n  if (!hasEducation) {\n    data[\"my0:hasEducation\"] = [];\n  }\n\n  if (!hasWork) {\n    data[\"my0:hasWorkHistory\"] = [];\n  }\n\n  if (!hasReference) {\n    data[\"my0:hasReference\"] = [];\n  }\n\n  if (!hasOtherInfo) {\n    data[\"my0:hasOtherInfo\"] = [];\n  }\n\n  if (!hasWebsite) {\n    data[\"my0:aboutPerson\"][\"my0:hasWebsite\"] = [];\n  }\n\n  if (!hasInstantMessaging) {\n    data[\"my0:aboutPerson\"][\"my0:hasInstantMessaging\"] = [];\n  }\n\n  if (!hasCitizenship) {\n    data[\"my0:aboutPerson\"][\"my0:hasCitizenship\"] = [];\n  }\n\n  if (!hasNationality) {\n    data[\"my0:aboutPerson\"][\"my0:hasNationality\"] = [];\n  }\n\n  if (!targetCompanyField) {\n    data[\"my0:hasTarget\"][\"my0:targetCompanyField\"] = [];\n  }\n\n  if (!targetCountry) {\n    data[\"my0:hasTarget\"][\"my0:targetCountry\"] = [];\n  }\n\n  if (!targetRegion) {\n    data[\"my0:hasTarget\"][\"my0:targetRegion\"] = [];\n  }\n\n  return data;\n}\n\nexport function parseJSONLDTOJSON(data) {\n  var obj = {};\n  obj[\"@context\"] = data[\"@context\"];\n  let cv = getDataOfType(data, \"my0:CV\"); //main cv properties\n\n  for (let x in cv) {\n    if (x !== \"@id\") {\n      //check if property is linked to an object\n      if (cv[x][\"@id\"]) {\n        let newobj = getDataOfId(data, cv[x][\"@id\"]);\n\n        if (x === \"my0:aboutPerson\" || x === \"my0:hasTarget\") {\n          obj[x] = {};\n\n          for (let y in newobj) {\n            if (y !== \"@id\") {\n              //check if property is linked to an object\n              if (newobj[y][\"@id\"]) {\n                let subnewobj = getDataOfId(data, newobj[y][\"@id\"]);\n\n                if (y === \"my0:hasInstantMessaging\" || y === \"my0:hasWebsite\") {\n                  obj[x][y] = [];\n                  let objc = {};\n\n                  for (let z in subnewobj) {\n                    if (z !== \"@id\") {\n                      objc[z] = subnewobj[z];\n                    }\n                  }\n\n                  obj[x][y].push(objc);\n                } else {\n                  obj[x][y] = {};\n\n                  for (let z in subnewobj) {\n                    if (z !== \"@id\") {\n                      obj[x][y][z] = subnewobj[z];\n                    }\n                  }\n                } //else check property leads to an array\n\n              } else if (Array.isArray(newobj[y])) {\n                let length = newobj[y].length;\n                obj[x][y] = [];\n                let arrayIsOkay = false;\n\n                for (let i = 0; i < length; i++) {\n                  if (newobj[y][i][\"@id\"]) {\n                    let subnewobj = getDataOfId(data, newobj[y][i][\"@id\"]);\n                    let objc = {};\n\n                    for (let z in subnewobj) {\n                      if (z !== \"@id\") {\n                        objc[z] = subnewobj[z];\n                      }\n                    }\n\n                    obj[x][y].push(objc);\n                  } else {\n                    arrayIsOkay = true;\n                  }\n                }\n\n                if (arrayIsOkay) {\n                  obj[x][y] = newobj[y];\n                } //else its a simple property\n\n              } else {\n                if (y === \"my0:hasNationality\" || y === \"my0:hasCitizenship\" || y === \"my0:targetCountry\" || y === \"my0:targetRegion\" || y === \"my0:targetCompanyField\") {\n                  obj[x][y] = [];\n                  obj[x][y].push(newobj[y]);\n                } else {\n                  obj[x][y] = newobj[y];\n                }\n              }\n            }\n          }\n        } else {\n          //all the hasSkill, hasReference etc properties which might have only one individual\n          obj[x] = [];\n          let objx = {};\n\n          for (let y in newobj) {\n            if (y !== \"@id\") {\n              //check if property leads to another object\n              if (newobj[y][\"@id\"]) {\n                let subnewobj = getDataOfId(data, newobj[y][\"@id\"]);\n                objx[y] = {};\n\n                for (let z in subnewobj) {\n                  if (z !== \"@id\") {\n                    if (subnewobj[z][\"@id\"]) {\n                      let subsubnewobj = getDataOfId(data, subnewobj[z][\"@id\"]);\n                      objx[y][z] = {};\n\n                      for (let d in subsubnewobj) {\n                        if (d !== \"@id\") {\n                          if (subsubnewobj[d][\"@id\"]) {\n                            let subsubsubnewobj = getDataOfId(data, subsubnewobj[d][\"@id\"]);\n                            objx[y][z][d] = {};\n\n                            for (let e in subsubsubnewobj) {\n                              if (e !== \"@id\") {\n                                objx[y][z][d][e] = subsubsubnewobj[e];\n                              }\n                            }\n                          } else {\n                            if (d === \"@type\" && subsubnewobj[d].indexOf(\"Address\") >= 0) {\n                              objx[y][z][d] = \"my0:Address\";\n                            } else {\n                              objx[y][z][d] = subsubnewobj[d];\n                            }\n                          }\n                        }\n                      }\n                    } else {\n                      objx[y][z] = subnewobj[z];\n                    }\n                  }\n                }\n              } else {\n                objx[y] = newobj[y];\n              }\n            }\n          }\n\n          obj[x].push(objx);\n        } //else check property leads to an array\n\n      } else if (Array.isArray(cv[x])) {\n        obj[x] = [];\n        let length = cv[x].length;\n\n        for (let i = 0; i < length; i++) {\n          let item = cv[x][i];\n          let objx = {}; //check if property leads to an object\n\n          if (item[\"@id\"]) {\n            let newobj = getDataOfId(data, item[\"@id\"]);\n\n            for (let y in newobj) {\n              if (y !== \"@id\") {\n                if (newobj[y][\"@id\"]) {\n                  let subnewobj = getDataOfId(data, newobj[y][\"@id\"]);\n                  objx[y] = {};\n\n                  for (let z in subnewobj) {\n                    if (z !== \"@id\") {\n                      if (subnewobj[z][\"@id\"]) {\n                        let subsubnewobj = getDataOfId(data, subnewobj[z][\"@id\"]);\n                        objx[y][z] = {};\n\n                        for (let d in subsubnewobj) {\n                          if (d !== \"@id\") {\n                            if (subsubnewobj[d][\"@id\"]) {\n                              let subsubsubnewobj = getDataOfId(data, subsubnewobj[d][\"@id\"]);\n                              objx[y][z][d] = {};\n\n                              for (let e in subsubsubnewobj) {\n                                if (e !== \"@id\") {\n                                  objx[y][z][d][e] = subsubsubnewobj[e];\n                                }\n                              }\n                            } else {\n                              if (d === \"@type\" && subsubnewobj[d].indexOf(\"Address\") >= 0) {\n                                objx[y][z][d] = \"my0:Address\";\n                              } else {\n                                objx[y][z][d] = subsubnewobj[d];\n                              }\n                            }\n                          }\n                        }\n                      } else {\n                        objx[y][z] = subnewobj[z];\n                      }\n                    }\n                  }\n                } else {\n                  objx[y] = newobj[y];\n                }\n              }\n            }\n          }\n\n          obj[x].push(objx);\n        } //else is just a straightforward property\n\n      } else {\n        obj[x] = cv[x];\n      }\n    }\n  } //checking if some empty properties are removed after converting\n\n\n  obj = replaceEmptyProperties(obj);\n  console.log(obj);\n  return obj;\n}\nexport function getNameFromURI(uri) {\n  let ind = uri.lastIndexOf(\"/\");\n  let ind2 = uri.lastIndexOf(\"#\");\n\n  if (ind2 > ind) {\n    return uri.substr(ind2 + 1);\n  } else {\n    return uri.substr(ind + 1);\n  }\n}","map":{"version":3,"sources":["/home/eelezi/thesis/rdf2resume/src/utilities/utilityFunctions.js"],"names":["getLabelFromURI","uri","uriIndex","lastIndexOf","substring","getDataOfType","data","type","graphs","length","i","getDataOfId","id","getDataArrayOfType","myarr","push","renderPartialDate","dateString","pattern","dt","Date","replace","m","getMonth","y","getFullYear","renderFullDate","toDateString","replaceEmptyProperties","hasCourse","hasEducation","hasWork","hasReference","hasPatent","hasPublication","hasProject","hasHonorAward","hasSkill","hasOtherInfo","hasNationality","hasInstantMessaging","hasCitizenship","hasWebsite","targetCompanyField","targetCountry","targetRegion","x","parseJSONLDTOJSON","obj","cv","newobj","subnewobj","objc","z","Array","isArray","arrayIsOkay","objx","subsubnewobj","d","subsubsubnewobj","e","indexOf","item","console","log","getNameFromURI","ind","ind2","substr"],"mappings":"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","sourcesContent":["export const getLabelFromURI = uri => {\n  let uriIndex = uri.lastIndexOf(\"#\");\n  return uri.substring(uriIndex);\n};\n\nexport function getDataOfType(data, type) {\n  let graphs = data[\"@graph\"];\n  let length = graphs.length;\n  for (let i = 0; i < length; i++) {\n    if (graphs[i][\"@type\"] === type) {\n      return graphs[i];\n    }\n  }\n}\n\nexport function getDataOfId(data, id) {\n  let graphs = data[\"@graph\"];\n  let length = graphs.length;\n  for (let i = 0; i < length; i++) {\n    if (graphs[i][\"@id\"] === id) {\n      return graphs[i];\n    }\n  }\n}\n\nexport function getDataArrayOfType(data, type) {\n  let graphs = data[\"@graph\"];\n  let myarr = [];\n  let length = graphs.length;\n  for (let i = 0; i < length; i++) {\n    if (graphs[i][\"@type\"] === type) {\n      myarr.push(graphs[i]);\n    }\n  }\n  return myarr;\n}\n\nexport function renderPartialDate(dateString) {\n  var pattern = /(\\d{4})-(\\d{2})-(\\d{2})/;\n  var dt = new Date(dateString.replace(pattern, '$1-$2-$3'));\n  var m = dt.getMonth() + 1; //Month from 0 to 11\n  var y = dt.getFullYear();\n  return m + '/' + y;\n}\n\nexport function renderFullDate(dateString) {\n  var pattern = /(\\d{4})-(\\d{2})-(\\d{2})/;\n  var dt = new Date(dateString.replace(pattern, '$1-$2-$3'));\n  return dt.toDateString();\n}\n\nfunction replaceEmptyProperties(data) {\n  let hasCourse = false;\n  let hasEducation = false;\n  let hasWork = false;\n  let hasReference = false;\n  let hasPatent = false;\n  let hasPublication = false;\n  let hasProject = false;\n  let hasHonorAward = false;\n  let hasSkill = false;\n  let hasOtherInfo = false;\n  let hasNationality = false;\n  let hasInstantMessaging = false;\n  let hasCitizenship = false;\n  let hasWebsite = false;\n  let targetCompanyField = false;\n  let targetCountry = false;\n  let targetRegion = false;\n  for (let x in data) {\n    //check if it has course\n    if (x === \"my0:hasCourse\") {\n      hasCourse = true;\n    } else if (x === \"my0:hasPublication\") {\n      hasPublication = true;\n    } else if (x === \"my0:hasProject\") {\n      hasProject = true;\n    } else if (x === \"my0:hasPatent\") {\n      hasPatent = true;\n    } else if (x === \"my0:hasHonorAward\") {\n      hasHonorAward = true;\n    } else if (x === \"my0:hasSkill\") {\n      hasSkill = true;\n    } else if (x === \"my0:hasEducation\") {\n      hasEducation = true;\n    } else if (x === \"my0:hasReference\") {\n      hasReference = true;\n    } else if (x === \"my0:hasWorkHistory\") {\n      hasWork = true;\n    } else if (x === \"my0:hasOtherInfo\") {\n      hasOtherInfo = true;\n    } else if (x === \"my0:hasTarget\") {\n      for (let y in data[x]) {\n        if (y === \"my0:targetCompanyField\") {\n          targetCompanyField = true;\n        } else if (y === \"my0:targetCountry\") {\n          targetCountry = true;\n        } else if (y === \"my0:targetRegion\") {\n          targetRegion = true;\n        }\n      }\n    } else if (x === \"my0:aboutPerson\") {\n      for (let y in data[x]) {\n        if (y === \"my0:hasNationality\") {\n          hasNationality = true;\n        } else if (y === \"my0:hasCitizenship\") {\n          hasCitizenship = true;\n        } else if (y === \"my0:hasInstantMessaging\") {\n          hasInstantMessaging = true;\n        } else if (y === \"my0:hasWebsite\") {\n          hasWebsite = true;\n        }\n      }\n    }\n  }\n  if (!hasCourse) {\n    data[\"my0:hasCourse\"] = [];\n  }\n  if (!hasSkill) {\n    data[\"my0:hasSkill\"] = [];\n  }\n  if (!hasPublication) {\n    data[\"my0:hasPublication\"] = [];\n  }\n  if (!hasProject) {\n    data[\"my0:hasProject\"] = [];\n  }\n  if (!hasPatent) {\n    data[\"my0:hasPatent\"] = [];\n  }\n  if (!hasHonorAward) {\n    data[\"my0:hasHonorAward\"] = [];\n  }\n  if (!hasEducation) {\n    data[\"my0:hasEducation\"] = [];\n  }\n  if (!hasWork) {\n    data[\"my0:hasWorkHistory\"] = [];\n  }\n  if (!hasReference) {\n    data[\"my0:hasReference\"] = [];\n  }\n  if (!hasOtherInfo) {\n    data[\"my0:hasOtherInfo\"] = [];\n  }\n  if (!hasWebsite) {\n    data[\"my0:aboutPerson\"][\"my0:hasWebsite\"] = [];\n  }\n  if (!hasInstantMessaging) {\n    data[\"my0:aboutPerson\"][\"my0:hasInstantMessaging\"] = [];\n  }\n  if (!hasCitizenship) {\n    data[\"my0:aboutPerson\"][\"my0:hasCitizenship\"] = [];\n  }\n  if (!hasNationality) {\n    data[\"my0:aboutPerson\"][\"my0:hasNationality\"] = [];\n  }\n  if (!targetCompanyField) {\n    data[\"my0:hasTarget\"][\"my0:targetCompanyField\"] = [];\n  }\n  if (!targetCountry) {\n    data[\"my0:hasTarget\"][\"my0:targetCountry\"] = [];\n  }\n  if (!targetRegion) {\n    data[\"my0:hasTarget\"][\"my0:targetRegion\"] = [];\n  }\n  return data;\n}\n\nexport function parseJSONLDTOJSON(data) {\n  var obj = {};\n  obj[\"@context\"] = data[\"@context\"];\n  let cv = getDataOfType(data, \"my0:CV\");\n  //main cv properties\n  for (let x in cv) {\n    if (x !== \"@id\") {\n      //check if property is linked to an object\n      if (cv[x][\"@id\"]) {\n        let newobj = getDataOfId(data, cv[x][\"@id\"]);\n        if (x === \"my0:aboutPerson\" || x === \"my0:hasTarget\") {\n          obj[x] = {};\n          for (let y in newobj) {\n            if (y !== \"@id\") {\n              //check if property is linked to an object\n              if (newobj[y][\"@id\"]) {\n                let subnewobj = getDataOfId(data, newobj[y][\"@id\"]);\n                if (y === \"my0:hasInstantMessaging\" || y === \"my0:hasWebsite\") {\n                  obj[x][y] = [];\n                  let objc = {};\n                  for (let z in subnewobj) {\n                    if (z !== \"@id\") {\n                      objc[z] = subnewobj[z];\n                    }\n                  }\n                  obj[x][y].push(objc);\n                } else {\n                  obj[x][y] = {};\n                  for (let z in subnewobj) {\n                    if (z !== \"@id\") {\n                      obj[x][y][z] = subnewobj[z];\n                    }\n                  }\n                }\n                //else check property leads to an array\n              } else if (Array.isArray(newobj[y])) {\n                let length = newobj[y].length;\n                obj[x][y] = [];\n                let arrayIsOkay = false;\n                for (let i = 0; i < length; i++) {\n                  if (newobj[y][i][\"@id\"]) {\n                    let subnewobj = getDataOfId(data, newobj[y][i][\"@id\"]);\n                    let objc = {};\n                    for (let z in subnewobj) {\n                      if (z !== \"@id\") {\n                        objc[z] = subnewobj[z];\n                      }\n                    }\n                    obj[x][y].push(objc);\n                  } else {\n                    arrayIsOkay = true;\n                  }\n                }\n                if (arrayIsOkay) {\n                  obj[x][y] = newobj[y];\n                }\n                //else its a simple property\n              } else {\n                if (\n                  y === \"my0:hasNationality\" ||\n                  y === \"my0:hasCitizenship\" ||\n                  y === \"my0:targetCountry\" ||\n                  y === \"my0:targetRegion\" ||\n                  y === \"my0:targetCompanyField\"\n                ) {\n                  obj[x][y] = [];\n                  obj[x][y].push(newobj[y]);\n                } else {\n                  obj[x][y] = newobj[y];\n                }\n              }\n            }\n          }\n        } else {\n          //all the hasSkill, hasReference etc properties which might have only one individual\n          obj[x] = [];\n          let objx = {};\n          for (let y in newobj) {\n            if (y !== \"@id\") {\n              //check if property leads to another object\n              if (newobj[y][\"@id\"]) {\n                let subnewobj = getDataOfId(data, newobj[y][\"@id\"]);\n                objx[y] = {};\n                for (let z in subnewobj) {\n                  if (z !== \"@id\") {\n                    if (subnewobj[z][\"@id\"]) {\n                      let subsubnewobj = getDataOfId(data, subnewobj[z][\"@id\"]);\n                      objx[y][z] = {};\n                      for (let d in subsubnewobj) {\n                        if (d !== \"@id\") {\n                          if (subsubnewobj[d][\"@id\"]) {\n                            let subsubsubnewobj = getDataOfId(\n                              data,\n                              subsubnewobj[d][\"@id\"]\n                            );\n                            objx[y][z][d] = {};\n                            for (let e in subsubsubnewobj) {\n                              if (e !== \"@id\") {\n                                objx[y][z][d][e] = subsubsubnewobj[e];\n                              }\n                            }\n                          } else {\n                            if (\n                              d === \"@type\" &&\n                              subsubnewobj[d].indexOf(\"Address\") >= 0\n                            ) {\n                              objx[y][z][d] = \"my0:Address\";\n                            } else {\n                              objx[y][z][d] = subsubnewobj[d];\n                            }\n                          }\n                        }\n                      }\n                    } else {\n                      objx[y][z] = subnewobj[z];\n                    }\n                  }\n                }\n              } else {\n                objx[y] = newobj[y];\n              }\n            }\n          }\n          obj[x].push(objx);\n        }\n        //else check property leads to an array\n      } else if (Array.isArray(cv[x])) {\n        obj[x] = [];\n        let length = cv[x].length;\n        for (let i = 0; i < length; i++) {\n          let item = cv[x][i];\n          let objx = {};\n          //check if property leads to an object\n          if (item[\"@id\"]) {\n            let newobj = getDataOfId(data, item[\"@id\"]);\n            for (let y in newobj) {\n              if (y !== \"@id\") {\n                if (newobj[y][\"@id\"]) {\n                  let subnewobj = getDataOfId(data, newobj[y][\"@id\"]);\n                  objx[y] = {};\n                  for (let z in subnewobj) {\n                    if (z !== \"@id\") {\n                      if (subnewobj[z][\"@id\"]) {\n                        let subsubnewobj = getDataOfId(\n                          data,\n                          subnewobj[z][\"@id\"]\n                        );\n                        objx[y][z] = {};\n                        for (let d in subsubnewobj) {\n                          if (d !== \"@id\") {\n                            if (subsubnewobj[d][\"@id\"]) {\n                              let subsubsubnewobj = getDataOfId(\n                                data,\n                                subsubnewobj[d][\"@id\"]\n                              );\n                              objx[y][z][d] = {};\n                              for (let e in subsubsubnewobj) {\n                                if (e !== \"@id\") {\n                                  objx[y][z][d][e] = subsubsubnewobj[e];\n                                }\n                              }\n                            } else {\n                              if (\n                                d === \"@type\" &&\n                                subsubnewobj[d].indexOf(\"Address\") >= 0\n                              ) {\n                                objx[y][z][d] = \"my0:Address\";\n                              } else {\n                                objx[y][z][d] = subsubnewobj[d];\n                              }\n                            }\n                          }\n                        }\n                      } else {\n                        objx[y][z] = subnewobj[z];\n                      }\n                    }\n                  }\n                } else {\n                  objx[y] = newobj[y];\n                }\n              }\n            }\n          }\n          obj[x].push(objx);\n        }\n        //else is just a straightforward property\n      } else {\n        obj[x] = cv[x];\n      }\n    }\n  }\n\n  //checking if some empty properties are removed after converting\n  obj = replaceEmptyProperties(obj);\n  console.log(obj);\n  return obj;\n}\n\nexport function getNameFromURI(uri) {\n  let ind = uri.lastIndexOf(\"/\");\n  let ind2 = uri.lastIndexOf(\"#\");\n  if (ind2 > ind) {\n    return uri.substr(ind2 + 1);\n  } else {\n    return uri.substr(ind + 1);\n  }\n}"]},"metadata":{},"sourceType":"module"}