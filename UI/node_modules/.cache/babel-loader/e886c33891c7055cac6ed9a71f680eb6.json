{"ast":null,"code":"var _jsxFileName = \"/home/eelezi/thesis/rdf2resume/UI/src/components/core/LanguageToggle.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Combobox } from \"react-widgets\";\nimport de from \"../../images/de.png\";\nimport fr from \"../../images/fr.png\";\nimport it from \"../../images/it.png\";\nimport en from \"../../images/en.png\";\nimport sq from \"../../images/sq.png\";\nimport { updateLanguage } from \"../../actions/utilityActions\";\nexport class LanguageToggle extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLanguageChange = value => {\n      this.setState({\n        language: value\n      });\n    };\n\n    this.changeLanguage = value => {\n      this.props.updateLanguage(value);\n    };\n  }\n\n  render() {\n    let ListItem = ({\n      item\n    }) => React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, item === \"de\" ? React.createElement(\"img\", {\n      src: de,\n      width: \"20px\",\n      height: \"20px\",\n      alt: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }) : \"\", item === \"sq\" ? React.createElement(\"img\", {\n      src: sq,\n      width: \"20px\",\n      height: \"20px\",\n      alt: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }) : \"\", item === \"fr\" ? React.createElement(\"img\", {\n      src: fr,\n      width: \"20px\",\n      height: \"20px\",\n      alt: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }) : \"\", item === \"it\" ? React.createElement(\"img\", {\n      src: it,\n      width: \"20px\",\n      height: \"20px\",\n      alt: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }) : \"\", item === \"en\" ? React.createElement(\"img\", {\n      src: en,\n      width: \"20px\",\n      height: \"20px\",\n      alt: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }) : \"\", \" \", React.createElement(\"span\", {\n      style: {\n        textTransform: 'uppercase'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, item)));\n\n    let languages = [\"de\", \"en\", \"it\", \"fr\", \"sq\"];\n    let lang = this.props.language;\n    return React.createElement(Combobox, {\n      onChange: changeLanguage,\n      defaultValue: lang,\n      containerClassName: \"languagebox\",\n      data: languages,\n      itemComponent: ListItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapstateToProps = state => {\n  return {\n    language: state.utility.language\n  };\n};\n\nexport default connect(mapstateToProps, {\n  updateLanguage\n})(LanguageToggle);","map":{"version":3,"sources":["/home/eelezi/thesis/rdf2resume/UI/src/components/core/LanguageToggle.jsx"],"names":["React","connect","Combobox","de","fr","it","en","sq","updateLanguage","LanguageToggle","Component","handleLanguageChange","value","setState","language","changeLanguage","props","render","ListItem","item","textTransform","languages","lang","mapstateToProps","state","utility"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Combobox } from \"react-widgets\";\nimport de from \"../../images/de.png\";\nimport fr from \"../../images/fr.png\";\nimport it from \"../../images/it.png\";\nimport en from \"../../images/en.png\";\nimport sq from \"../../images/sq.png\";\nimport { updateLanguage } from \"../../actions/utilityActions\";\n\nexport class LanguageToggle extends React.Component {\n\n    handleLanguageChange = (value) => {\n        this.setState({\n            language: value\n        })\n    }\n\n    changeLanguage = (value) => {\n        this.props.updateLanguage(value);\n    }\n\n\n    render() {\n        let ListItem = ({ item }) => (\n            <React.Fragment>\n                <span>\n                    {item === \"de\" ? (\n                        <img src={de} width=\"20px\" height=\"20px\" alt={item}></img>\n                    ) : (\n                            \"\"\n                        )}\n                    {item === \"sq\" ? (\n                        <img src={sq} width=\"20px\" height=\"20px\" alt={item}></img>\n                    ) : (\n                            \"\"\n                        )}\n                    {item === \"fr\" ? (\n                        <img src={fr} width=\"20px\" height=\"20px\" alt={item}></img>\n                    ) : (\n                            \"\"\n                        )}\n                    {item === \"it\" ? (\n                        <img src={it} width=\"20px\" height=\"20px\" alt={item}></img>\n                    ) : (\n                            \"\"\n                        )}\n                    {item === \"en\" ? (\n                        <img src={en} width=\"20px\" height=\"20px\" alt={item}></img>\n                    ) : (\n                            \"\"\n                        )}{\" \"}\n                    <span style={{ textTransform: 'uppercase' }} >{item}</span>\n                </span>\n            </React.Fragment>\n        );\n\n        let languages = [\"de\", \"en\", \"it\", \"fr\", \"sq\"];\n\n        let lang = this.props.language;\n\n        return (\n            <Combobox onChange={changeLanguage} defaultValue={lang} containerClassName=\"languagebox\" data={languages} itemComponent={ListItem} />\n        );\n    }\n}\n\n\nconst mapstateToProps = state => {\n    return {\n        language: state.utility.language\n    };\n};\n\nexport default connect(\n    mapstateToProps,\n    { updateLanguage }\n)(LanguageToggle);\n"]},"metadata":{},"sourceType":"module"}