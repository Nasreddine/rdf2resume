{"ast":null,"code":"import _objectSpread from \"/home/eelezi/thesis/rdf2resume/UI/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/eelezi/thesis/rdf2resume/UI/src/components/Dashboard/Forms/Modals/FormHonor/HonorModal.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport { Combobox } from \"react-widgets\";\nimport { Modal, Row, Col, Button } from \"react-bootstrap\";\nimport CustomTextarea from \"../../../../core/CustomTextarea\";\nimport CustomInput from \"../../../../core/CustomInput\";\nimport { createHonor, updateHonor, updateCVLastUpdate } from \"../../../../../actions\";\nimport { fetchMainPropertiess, updateLanguage } from \"../../../../../actions/utilityActions\";\nimport { retrieveMainProperties } from \"../../../../../utilities/utilityQueries\";\nimport { cancelLabel, resetLabel, saveLabel, updateLabel, honorAddTitle, honorUpdateTitle, successTitle } from \"../../../../../translations/translations\";\n\nclass HonorModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      honor: {\n        \"@type\": \"my0:Honor\",\n        \"my0:honortitle\": [{\n          \"@value\": \"\",\n          \"@language\": \"en\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"it\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"fr\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"de\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"sq\"\n        }],\n        \"my0:honorIssuedDate\": \"\",\n        \"my0:honorIssuer\": [{\n          \"@value\": \"\",\n          \"@language\": \"en\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"it\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"fr\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"de\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"sq\"\n        }],\n        \"my0:honorDescription\": [{\n          \"@value\": \"\",\n          \"@language\": \"en\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"it\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"fr\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"de\"\n        }, {\n          \"@value\": \"\",\n          \"@language\": \"sq\"\n        }]\n      }\n    };\n\n    this.setInitialValues = () => {\n      if (this.props.id !== null && this.props.isUpdate === true) {\n        let inputRef = this.props.initialValues;\n\n        let honor = _objectSpread({}, this.state.honor);\n\n        honor[\"my0:honortitle\"] = inputRef[\"my0:honortitle\"];\n        honor[\"my0:honorIssuedDate\"] = inputRef[\"my0:honorIssuedDate\"];\n        honor[\"my0:honorIssuer\"] = inputRef[\"my0:honorIssuer\"];\n        honor[\"my0:honorDescription\"] = inputRef[\"my0:honorDescription\"];\n        this.setState({\n          honor\n        });\n      }\n    };\n\n    this.clearForm = () => {\n      if (!this.props.isUpdate) {\n        this.setState({\n          honor: {\n            \"@type\": \"my0:Honor\",\n            \"my0:honortitle\": [{\n              \"@value\": \"\",\n              \"@language\": \"en\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"it\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"fr\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"de\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"sq\"\n            }],\n            \"my0:honorIssuedDate\": \"\",\n            \"my0:honorIssuer\": [{\n              \"@value\": \"\",\n              \"@language\": \"en\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"it\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"fr\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"de\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"sq\"\n            }],\n            \"my0:honorDescription\": [{\n              \"@value\": \"\",\n              \"@language\": \"en\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"it\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"fr\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"de\"\n            }, {\n              \"@value\": \"\",\n              \"@language\": \"sq\"\n            }]\n          }\n        });\n      } else {\n        this.setInitialValues();\n      }\n    };\n\n    this.handleInputChange = (e, lang) => {\n      let obj = _objectSpread({}, this.state.honor);\n\n      let label = e.target.id;\n\n      if (lang) {\n        obj[label] = this.replaceLanguageValue(obj[label], lang, e.target.value);\n      } else {\n        obj[label] = e.target.value;\n      }\n\n      this.setState({\n        honor: obj\n      });\n    };\n\n    this.handleSave = () => {\n      this.props.createHonor(this.state.honor);\n      this.props.updateCVLastUpdate();\n    };\n\n    this.handleUpdate = () => {\n      this.props.updateHonor({\n        object: this.state.honor,\n        index: this.props.id\n      });\n      this.props.updateCVLastUpdate();\n    };\n\n    this.handleRenderingSubmitButton = lang => {\n      let isDisabled = this.state.honor[\"my0:honortitle\"] === \"\";\n\n      if (!this.props.isUpdate) {\n        return React.createElement(Button, {\n          disabled: isDisabled,\n          type: \"submit\",\n          variant: \"primary\",\n          onClick: this.handleSave,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260\n          },\n          __self: this\n        }, saveLabel[lang]);\n      } else {\n        return React.createElement(Button, {\n          disabled: isDisabled,\n          type: \"submit\",\n          variant: \"primary\",\n          onClick: this.handleUpdate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271\n          },\n          __self: this\n        }, updateLabel[lang]);\n      }\n    };\n  }\n\n  componentWillMount() {\n    this.props.fetchMainPropertiess(\"my0:HonorAward\");\n    this.setInitialValues();\n  }\n\n  replaceLanguageValue(data, language, value) {\n    let length = data.length;\n\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@language\"] === language) {\n        data[i][\"@value\"] = value;\n        break;\n      }\n    }\n\n    return data;\n  }\n\n  findTranslatedValue(data, lang) {\n    let length = data.length;\n\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@language\"] === lang) {\n        return data[i][\"@value\"];\n      }\n    }\n  }\n\n  findInArray(data, name) {\n    let length = data.length;\n\n    for (let i = 0; i < length; i++) {\n      let index = data[i][\"@type\"].indexOf(name);\n      let newlength = data[i][\"@type\"].length;\n\n      if (index >= 0 && index + name.length >= newlength) {\n        return i;\n      }\n    }\n  }\n\n  renderLabel(translated, name, lang) {\n    let index = this.findInArray(translated, name);\n\n    if (translated[index] === undefined || translated[index][lang] === undefined) {\n      return name;\n    } else {\n      return translated[index][lang];\n    }\n  }\n\n  render() {\n    let _this$state$honor = this.state.honor,\n        honortitle = _this$state$honor[\"my0:honortitle\"],\n        honorIssuedDate = _this$state$honor[\"my0:honorIssuedDate\"],\n        honorIssuer = _this$state$honor[\"my0:honorIssuer\"],\n        honorDescription = _this$state$honor[\"my0:honorDescription\"];\n    let onHide = this.props.onHide;\n    let lang = this.props.language;\n    let translatedProps = this.props.translatedProps;\n    return React.createElement(Modal, {\n      show: this.props.show,\n      onHide: this.props.onHide,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      className: \"reference-modal\",\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      id: \"contained-modal-title-vcenter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, this.props.isUpdate ? honorUpdateTitle[lang] : honorAddTitle[lang])))), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: {\n        alignItems: \"flex-start\",\n        margin: \"0 40px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: {\n        justifyContent: \"flex-start\",\n        alignItems: \"flex-start\",\n        display: \"flex\",\n        margin: \"0px\",\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 9,\n      style: {\n        paddingLeft: \"0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:honortitle\",\n      name: \"honor\",\n      label: this.renderLabel(translatedProps, \"honortitle\", lang) + \" *\",\n      type: \"text\",\n      value: this.findTranslatedValue(honortitle, lang),\n      handleChange: e => this.handleInputChange(e, lang),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    })), React.createElement(Col, {\n      md: 3,\n      style: {\n        paddingRight: \"0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:honorIssuedDate\",\n      name: \"honor\",\n      label: this.renderLabel(translatedProps, \"honorIssuedDate\", lang),\n      type: \"date\",\n      value: honorIssuedDate,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        marginTop: \"5px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:honorIssuer\",\n      name: \"honor\",\n      label: this.renderLabel(translatedProps, \"honorIssuer\", lang),\n      type: \"text\",\n      value: this.findTranslatedValue(honorIssuer, lang),\n      handleChange: e => this.handleInputChange(e, lang),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        marginTop: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, React.createElement(CustomTextarea, {\n      id: \"my0:honorDescription\",\n      name: \"honor\",\n      label: this.renderLabel(translatedProps, \"honorDescription\", lang),\n      value: this.findTranslatedValue(honorDescription, lang),\n      handleChange: e => this.handleInputChange(e, lang),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    })))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, this.handleRenderingSubmitButton(lang), React.createElement(Button, {\n      className: \"btn-reset\",\n      onClick: this.clearForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, resetLabel[lang]), React.createElement(Button, {\n      variant: \"danger\",\n      onClick: onHide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, cancelLabel[lang])));\n  }\n\n}\n\nconst mapstateToProps = (state, ownProps) => {\n  return {\n    initialValues: state.cv[\"my0:hasHonorAward\"][ownProps.id],\n    language: state.utility.language,\n    translatedProps: retrieveMainProperties(state.utility[\"my0:HonorAward\"])\n  };\n};\n\nexport default connect(mapstateToProps, {\n  createHonor,\n  updateHonor,\n  fetchMainPropertiess,\n  updateCVLastUpdate\n})(HonorModal);","map":{"version":3,"sources":["/home/eelezi/thesis/rdf2resume/UI/src/components/Dashboard/Forms/Modals/FormHonor/HonorModal.jsx"],"names":["React","Component","connect","Swal","Combobox","Modal","Row","Col","Button","CustomTextarea","CustomInput","createHonor","updateHonor","updateCVLastUpdate","fetchMainPropertiess","updateLanguage","retrieveMainProperties","cancelLabel","resetLabel","saveLabel","updateLabel","honorAddTitle","honorUpdateTitle","successTitle","HonorModal","state","honor","setInitialValues","props","id","isUpdate","inputRef","initialValues","setState","clearForm","handleInputChange","e","lang","obj","label","target","replaceLanguageValue","value","handleSave","handleUpdate","object","index","handleRenderingSubmitButton","isDisabled","componentWillMount","data","language","length","i","findTranslatedValue","findInArray","name","indexOf","newlength","renderLabel","translated","undefined","render","honortitle","honorIssuedDate","honorIssuer","honorDescription","onHide","translatedProps","show","alignItems","margin","justifyContent","display","width","paddingLeft","paddingRight","marginTop","mapstateToProps","ownProps","cv","utility"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport { Combobox } from \"react-widgets\";\nimport { Modal, Row, Col, Button } from \"react-bootstrap\";\nimport CustomTextarea from \"../../../../core/CustomTextarea\";\nimport CustomInput from \"../../../../core/CustomInput\";\nimport { createHonor, updateHonor, updateCVLastUpdate } from \"../../../../../actions\";\nimport { fetchMainPropertiess, updateLanguage } from \"../../../../../actions/utilityActions\";\nimport { retrieveMainProperties } from \"../../../../../utilities/utilityQueries\";\nimport {\n  cancelLabel,\n  resetLabel,\n  saveLabel,\n  updateLabel,\n  honorAddTitle,\n  honorUpdateTitle,\n  successTitle\n} from \"../../../../../translations/translations\";\n\nclass HonorModal extends Component {\n  state = {\n    honor: {\n      \"@type\": \"my0:Honor\",\n      \"my0:honortitle\": [{\n        \"@value\": \"\",\n        \"@language\": \"en\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"it\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"fr\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"de\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"sq\"\n      },\n      ],\n      \"my0:honorIssuedDate\": \"\",\n      \"my0:honorIssuer\": [{\n        \"@value\": \"\",\n        \"@language\": \"en\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"it\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"fr\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"de\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"sq\"\n      },\n      ],\n      \"my0:honorDescription\": [{\n        \"@value\": \"\",\n        \"@language\": \"en\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"it\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"fr\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"de\"\n      },\n      {\n        \"@value\": \"\",\n        \"@language\": \"sq\"\n      },\n      ]\n    }\n  };\n\n  componentWillMount() {\n    this.props.fetchMainPropertiess(\"my0:HonorAward\");\n    this.setInitialValues();\n  }\n\n  setInitialValues = () => {\n    if (this.props.id !== null && this.props.isUpdate === true) {\n      let inputRef = this.props.initialValues;\n      let honor = { ...this.state.honor };\n      honor[\"my0:honortitle\"] = inputRef[\"my0:honortitle\"];\n      honor[\"my0:honorIssuedDate\"] = inputRef[\"my0:honorIssuedDate\"];\n      honor[\"my0:honorIssuer\"] = inputRef[\"my0:honorIssuer\"];\n      honor[\"my0:honorDescription\"] = inputRef[\"my0:honorDescription\"];\n      this.setState({\n        honor\n      });\n    }\n  };\n\n  clearForm = () => {\n    if (!this.props.isUpdate) {\n      this.setState({\n        honor: {\n          \"@type\": \"my0:Honor\",\n          \"my0:honortitle\": [{\n            \"@value\": \"\",\n            \"@language\": \"en\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"it\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"fr\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"de\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"sq\"\n          },\n          ],\n          \"my0:honorIssuedDate\": \"\",\n          \"my0:honorIssuer\": [{\n            \"@value\": \"\",\n            \"@language\": \"en\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"it\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"fr\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"de\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"sq\"\n          },\n          ],\n          \"my0:honorDescription\": [{\n            \"@value\": \"\",\n            \"@language\": \"en\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"it\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"fr\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"de\"\n          },\n          {\n            \"@value\": \"\",\n            \"@language\": \"sq\"\n          },\n          ]\n        }\n      });\n    } else {\n      this.setInitialValues();\n    }\n  };\n\n  replaceLanguageValue(data, language, value) {\n    let length = data.length;\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@language\"] === language) {\n        data[i][\"@value\"] = value;\n        break;\n      }\n    }\n    return data;\n  }\n\n  findTranslatedValue(data, lang) {\n    let length = data.length;\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@language\"] === lang) {\n        return data[i][\"@value\"];\n      }\n    }\n  }\n\n  handleInputChange = (e, lang) => {\n    let obj = { ...this.state.honor };\n    let label = e.target.id;\n    if (lang) {\n      obj[label] = this.replaceLanguageValue(obj[label], lang, e.target.value);\n    } else {\n      obj[label] = e.target.value;\n    }\n    this.setState({\n      honor: obj\n    });\n  };\n\n  handleSave = () => {\n    this.props.createHonor(this.state.honor);\n    this.props.updateCVLastUpdate();\n  };\n\n  handleUpdate = () => {\n    this.props.updateHonor({\n      object: this.state.honor,\n      index: this.props.id\n    });\n    this.props.updateCVLastUpdate();\n  };\n\n  findInArray(data, name) {\n    let length = data.length;\n    for (let i = 0; i < length; i++) {\n      let index = data[i][\"@type\"].indexOf(name);\n      let newlength = data[i][\"@type\"].length;\n      if (index >= 0 && index + name.length >= newlength) {\n        return i;\n      }\n    }\n  }\n\n  renderLabel(translated, name, lang) {\n    let index = this.findInArray(translated, name);\n    if (\n      translated[index] === undefined ||\n      translated[index][lang] === undefined\n    ) {\n      return name;\n    } else {\n      return translated[index][lang];\n    }\n  }\n\n  handleRenderingSubmitButton = lang => {\n    let isDisabled = this.state.honor[\"my0:honortitle\"] === \"\";\n    if (!this.props.isUpdate) {\n      return (\n        <Button\n          disabled={isDisabled}\n          type=\"submit\"\n          variant=\"primary\"\n          onClick={this.handleSave}\n        >\n          {saveLabel[lang]}\n        </Button>\n      );\n    } else {\n      return (\n        <Button\n          disabled={isDisabled}\n          type=\"submit\"\n          variant=\"primary\"\n          onClick={this.handleUpdate}\n        >\n          {updateLabel[lang]}\n        </Button>\n      );\n    }\n  };\n\n  render() {\n    let {\n      \"my0:honortitle\": honortitle,\n      \"my0:honorIssuedDate\": honorIssuedDate,\n      \"my0:honorIssuer\": honorIssuer,\n      \"my0:honorDescription\": honorDescription\n    } = this.state.honor;\n\n    let { onHide } = this.props;\n\n    let lang = this.props.language;\n\n    let { translatedProps } = this.props;\n\n    return (\n      <Modal\n        show={this.props.show}\n        onHide={this.props.onHide}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        className=\"reference-modal\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            <Row>\n              <Col md={12}>\n                {this.props.isUpdate\n                  ? honorUpdateTitle[lang]\n                  : honorAddTitle[lang]}\n              </Col>\n            </Row>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Row style={{ alignItems: \"flex-start\", margin: \"0 40px\" }}>\n            <Row\n              style={{\n                justifyContent: \"flex-start\",\n                alignItems: \"flex-start\",\n                display: \"flex\",\n                margin: \"0px\",\n                width: \"100%\"\n              }}\n            >\n              <Col md={9} style={{ paddingLeft: \"0\" }}>\n                <CustomInput\n                  id=\"my0:honortitle\"\n                  name=\"honor\"\n                  label={\n                    this.renderLabel(translatedProps, \"honortitle\", lang) + \" *\"\n                  }\n                  type=\"text\"\n                  value={this.findTranslatedValue(honortitle, lang)}\n                  handleChange={(e) => this.handleInputChange(e, lang)}\n                />\n              </Col>\n              <Col md={3} style={{ paddingRight: \"0\" }}>\n                <CustomInput\n                  id=\"my0:honorIssuedDate\"\n                  name=\"honor\"\n                  label={this.renderLabel(\n                    translatedProps,\n                    \"honorIssuedDate\",\n                    lang\n                  )}\n                  type=\"date\"\n                  value={honorIssuedDate}\n                  handleChange={this.handleInputChange}\n                />\n              </Col>\n            </Row>\n            <div style={{ width: \"100%\", marginTop: \"5px\" }}>\n              <CustomInput\n                id=\"my0:honorIssuer\"\n                name=\"honor\"\n                label={this.renderLabel(translatedProps, \"honorIssuer\", lang)}\n                type=\"text\"\n                value={this.findTranslatedValue(honorIssuer, lang)}\n                handleChange={(e) => this.handleInputChange(e, lang)}\n              />\n            </div>\n            <div style={{ width: \"100%\", marginTop: \"10px\" }}>\n              <CustomTextarea\n                id=\"my0:honorDescription\"\n                name=\"honor\"\n                label={this.renderLabel(\n                  translatedProps,\n                  \"honorDescription\",\n                  lang\n                )}\n                value={this.findTranslatedValue(honorDescription, lang)}\n                handleChange={(e) => this.handleInputChange(e, lang)}\n              />\n            </div>\n          </Row>\n        </Modal.Body>\n        <Modal.Footer>\n          {this.handleRenderingSubmitButton(lang)}\n          <Button className=\"btn-reset\" onClick={this.clearForm}>\n            {resetLabel[lang]}\n          </Button>\n          <Button variant=\"danger\" onClick={onHide}>\n            {cancelLabel[lang]}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapstateToProps = (state, ownProps) => {\n  return {\n    initialValues: state.cv[\"my0:hasHonorAward\"][ownProps.id],\n    language: state.utility.language,\n    translatedProps: retrieveMainProperties(state.utility[\"my0:HonorAward\"])\n  };\n};\n\nexport default connect(\n  mapstateToProps,\n  { createHonor, updateHonor, fetchMainPropertiess, updateCVLastUpdate }\n)(HonorModal);\n"]},"metadata":{},"sourceType":"module"}