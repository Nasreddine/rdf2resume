{"ast":null,"code":"var _jsxFileName = \"/home/eelezi/thesis/rdf2resume/src/components/Dashboard/Forms/FormPersonal.jsx\";\nimport React, { Component } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport AddButton from \"../../core/AddButton\";\nimport RemoveButton from \"../../core/RemoveButton\";\nimport CustomInput from \"../../core/CustomInput\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport CustomRadioGroup from \"../../core/CustomRadioGroup\";\nimport { Combobox, Multiselect } from \"react-widgets\";\nimport Swal from \"sweetalert2\";\nimport { connect } from \"react-redux\";\nimport CustomTextarea from \"../../core/CustomTextarea\";\nimport { updateAboutPerson, createIM, updateIM, removeIM, createWebsite, updateWebsite, removeWebsite } from \"../../../actions\";\nimport { fetchCountries, fetchGenders, fetchTitleProperties, fetchAllWebsiteTypess, fetchAllIMTypess, updateError, fetchMainPropertiess } from \"../../../actions/utilityActions\";\nimport { retrieveCountryValues, retrieveMainProperties, retrieveBaseProperties } from \"../../../utilities/utilityQueries\";\nimport { personalAccepted, personalIM, personalSizeMax, personalWebsite, mainSidebar, personalNationalityAlert } from \"../../../translations/translations\";\nimport axios from \"axios\";\n\nclass FormPersonal extends Component {\n  constructor(props) {\n    super(props); // Create the ref\n\n    this.handleInputChange = (e, secondLevel) => {\n      this.props.updateAboutPerson({\n        id: e.target.id,\n        value: e.target.value,\n        secondLevel\n      });\n    };\n\n    this.handleInputChangeWithLanguage = (e, lang, secondLevel) => {\n      this.props.updateAboutPerson({\n        id: e.target.id,\n        language: lang,\n        value: e.target.value,\n        secondLevel\n      });\n    };\n\n    this.handleSelectChange = (name, value, secondLevel) => {\n      this.props.updateAboutPerson({\n        id: name,\n        value: value[\"@type\"],\n        secondLevel\n      });\n    };\n\n    this.handleMultiSelectChange = (name, value, lang) => {\n      let myarr = [];\n      let length = value.length;\n\n      if (name === \"hasCitizenship\" || name === \"hasNationality\") {\n        if (value.length >= 3) {\n          Swal.fire({\n            title: \"Warning!\",\n            text: personalNationalityAlert[lang],\n            type: \"warning\",\n            confirmButtonColor: \"#4bb3cc\",\n            heightAuto: false,\n            confirmButtonText: \"Okay\"\n          });\n          return;\n        }\n      }\n\n      for (let i = 0; i < length; i++) {\n        myarr.push(value[i][\"@type\"]);\n      }\n\n      this.props.updateAboutPerson({\n        id: name,\n        value: myarr\n      });\n    };\n\n    this.handleRadioChange = e => {\n      this.props.updateAboutPerson({\n        id: e.target.name,\n        value: e.target.id\n      });\n    };\n\n    this.addWebsite = id => {\n      this.props.createWebsite();\n    };\n\n    this.updateWebsite = (name, value, index) => {\n      if (value[\"@type\"]) {\n        this.props.updateWebsite({\n          id: index,\n          name: name,\n          value: value[\"@type\"]\n        });\n      } else {\n        this.props.updateWebsite({\n          id: index,\n          name: name,\n          value: value\n        });\n      }\n    };\n\n    this.removeWebsite = index => {\n      this.props.removeWebsite(index);\n    };\n\n    this.addInstantMessaging = id => {\n      this.props.createIM();\n    };\n\n    this.updateInstantMessaging = (name, value, index) => {\n      if (value[\"@type\"]) {\n        this.props.updateIM({\n          id: index,\n          name: name,\n          value: value[\"@type\"]\n        });\n      } else {\n        this.props.updateIM({\n          id: index,\n          name: name,\n          value: value\n        });\n      }\n    };\n\n    this.removeInstantMessaging = index => {\n      this.props.removeIM(index);\n    };\n\n    this.handleAddPhotoClick = () => {\n      this.inputHiddenRef.click();\n    };\n\n    this.onChangePhotoUpload = async e => {\n      let file = e.target.files[0];\n      var formData = new FormData();\n      formData.append(\"file\", file);\n      axios.post(\"/upload_photo\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(resp => {\n        this.props.updateAboutPerson({\n          id: \"photo\",\n          value: resp.data\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.clearPhotoUpload = () => {\n      this.props.updateAboutPerson({\n        id: \"photo\",\n        value: \"\"\n      });\n    };\n\n    this.handleBlur = e => {\n      let label = e.target.id;\n\n      if (label === \"firstName\" || label === \"lastName\" || label === \"email\") {\n        if (e.target.value === \"\") {\n          this.props.updateError({\n            object: \"my0:\" + label,\n            value: true\n          });\n        } else {\n          this.props.updateError({\n            object: \"my0:\" + label,\n            value: false\n          });\n        }\n      }\n    };\n\n    this.inputHiddenRef = React.createRef();\n    this.state = {};\n  }\n\n  componentWillMount() {\n    this.props.fetchCountries();\n    this.props.fetchGenders();\n    this.props.fetchTitleProperties();\n    this.props.fetchAllWebsiteTypess();\n    this.props.fetchAllIMTypess();\n    this.props.fetchMainPropertiess(\"my0:Person\");\n    this.props.fetchMainPropertiess(\"my0:Address\");\n    this.props.fetchMainPropertiess(\"my0:Website\");\n    this.props.fetchMainPropertiess(\"my0:InstantMessaging\");\n  }\n\n  findInArray(data, name) {\n    let length = data.length;\n\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@type\"].indexOf(name) >= 0) {\n        return i;\n      }\n    }\n  }\n\n  renderLabel(translated, name, lang) {\n    let index = this.findInArray(translated, name);\n\n    if (translated[index] === undefined || translated[index][lang] === undefined) {\n      return name;\n    } else {\n      return translated[index][lang];\n    }\n  }\n\n  findTranslatedValue(data, lang) {\n    let length = data.length;\n\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@language\"] === lang) {\n        return data[i][\"@value\"];\n      }\n    }\n  }\n\n  render() {\n    let _this$props$aboutpers = this.props.aboutperson,\n        firstName = _this$props$aboutpers[\"my0:firstName\"],\n        lastName = _this$props$aboutpers[\"my0:lastName\"],\n        hasCitizenship = _this$props$aboutpers[\"my0:hasCitizenship\"],\n        hasNationality = _this$props$aboutpers[\"my0:hasNationality\"],\n        dateOfBirth = _this$props$aboutpers[\"my0:dateOfBirth\"],\n        gender = _this$props$aboutpers[\"my0:gender\"],\n        phoneNumber = _this$props$aboutpers[\"my0:phoneNumber\"],\n        email = _this$props$aboutpers[\"my0:email\"],\n        title = _this$props$aboutpers[\"my0:title\"],\n        driversLicence = _this$props$aboutpers[\"my0:driversLicence\"],\n        address = _this$props$aboutpers[\"my0:address\"],\n        personShortDescription = _this$props$aboutpers[\"my0:personShortDescription\"],\n        personLongDescription = _this$props$aboutpers[\"my0:personLongDescription\"],\n        hasWebsite = _this$props$aboutpers[\"my0:hasWebsite\"],\n        photo = _this$props$aboutpers[\"my0:photo\"];\n    let titlePage = mainSidebar[1];\n    let _this$props = this.props,\n        translatedProps = _this$props.translatedProps,\n        translatedPropsAddr = _this$props.translatedPropsAddr,\n        translatedPropsWeb = _this$props.translatedPropsWeb,\n        translatedPropsIM = _this$props.translatedPropsIM;\n    let lang = this.props.language;\n    let error = this.props.error;\n    let instantMessaging = this.props.aboutperson[\"my0:hasInstantMessaging\"];\n    return React.createElement(Row, {\n      className: \"main-content-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      style: {\n        marginTop: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, titlePage[lang]), React.createElement(CustomTextarea, {\n      id: \"personShortDescription\",\n      rows: \"5\",\n      label: this.renderLabel(translatedProps, \"personShortDescription\", lang),\n      value: this.findTranslatedValue(personShortDescription, lang),\n      handleChange: e => this.handleInputChangeWithLanguage(e, lang),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }), React.createElement(CustomTextarea, {\n      id: \"personLongDescription\",\n      rows: \"15\",\n      label: this.renderLabel(translatedProps, \"personLongDescription\", lang),\n      value: this.findTranslatedValue(personLongDescription, lang),\n      handleChange: e => this.handleInputChangeWithLanguage(e, lang),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    })), React.createElement(Col, {\n      md: 4,\n      className: \"pt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label-rw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, this.renderLabel(translatedProps, \"title\", lang)), React.createElement(Combobox, {\n      name: \"title\",\n      placeholder: this.renderLabel(translatedProps, \"title\", lang),\n      data: this.props.titles,\n      textField: lang,\n      valueField: \"@type\",\n      value: title,\n      caseSensitive: false,\n      minLength: 3,\n      filter: \"contains\",\n      onChange: value => this.handleSelectChange(\"title\", value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"firstName\",\n      label: this.renderLabel(translatedProps, \"firstName\", lang) + \" *\",\n      type: \"text\",\n      handleBlurEvent: this.handleBlur,\n      value: firstName,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }), error[\"my0:firstName\"] ? React.createElement(\"span\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, \"Required\") : \"\"), React.createElement(\"div\", {\n      className: \"col col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"lastName\",\n      label: this.renderLabel(translatedProps, \"lastName\", lang) + \" *\",\n      type: \"text\",\n      value: lastName,\n      handleBlurEvent: this.handleBlur,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }), error[\"my0:lastName\"] ? React.createElement(\"span\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, \"Required\") : \"\")), React.createElement(CustomInput, {\n      id: \"email\",\n      label: this.renderLabel(translatedProps, \"email\", lang) + \" *\",\n      type: \"text\",\n      handleBlurEvent: this.handleBlur,\n      value: email,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }), error[\"my0:email\"] ? React.createElement(\"span\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, \"Required\") : \"\", React.createElement(CustomInput, {\n      id: \"phoneNumber\",\n      label: this.renderLabel(translatedProps, \"phoneNumber\", lang),\n      type: \"text\",\n      value: phoneNumber,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"street\",\n      label: this.renderLabel(translatedPropsAddr, \"street\", lang),\n      type: \"text\",\n      value: this.findTranslatedValue(address[\"my0:street\"], lang),\n      handleChange: e => this.handleInputChangeWithLanguage(e, lang, \"address\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"postalCode\",\n      label: this.renderLabel(translatedPropsAddr, \"postalCode\", lang),\n      type: \"text\",\n      value: address[\"my0:postalCode\"],\n      handleChange: e => this.handleInputChange(e, \"address\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    })), React.createElement(Col, {\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"city\",\n      label: this.renderLabel(translatedPropsAddr, \"city\", lang),\n      type: \"text\",\n      value: this.findTranslatedValue(address[\"my0:city\"], lang),\n      handleChange: e => this.handleInputChangeWithLanguage(e, lang, \"address\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }))), React.createElement(\"label\", {\n      className: \"label-rw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, this.renderLabel(translatedPropsAddr, \"country\", lang)), React.createElement(Combobox, {\n      name: \"country\",\n      placeholder: this.renderLabel(translatedPropsAddr, \"country\", lang),\n      data: this.props.countries,\n      textField: lang,\n      valueField: \"@type\",\n      value: address[\"my0:country\"],\n      caseSensitive: false,\n      minLength: 3,\n      filter: \"contains\",\n      onChange: value => this.handleSelectChange(\"country\", value, \"address\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    })), React.createElement(CustomInput, {\n      id: \"dateOfBirth\",\n      label: this.renderLabel(translatedProps, \"dateOfBirth\", lang),\n      type: \"date\",\n      value: dateOfBirth,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"label-rw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }, this.renderLabel(translatedProps, \"hasCitizenship\", lang)), React.createElement(Multiselect, {\n      name: \"hasCitizenship\",\n      data: this.props.countries,\n      textField: lang,\n      valueField: \"@type\",\n      value: hasCitizenship,\n      placeholder: this.renderLabel(translatedProps, \"hasCitizenship\", lang),\n      caseSensitive: false,\n      minLength: 3,\n      filter: \"contains\",\n      onChange: value => this.handleMultiSelectChange(\"hasCitizenship\", value, lang),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"label-rw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, this.renderLabel(translatedProps, \"hasNationality\", lang)), React.createElement(Multiselect, {\n      name: \"hasNationality\",\n      data: this.props.countries,\n      textField: lang,\n      valueField: \"@type\",\n      value: hasNationality,\n      placeholder: this.renderLabel(translatedProps, \"hasNationality\", lang),\n      caseSensitive: false,\n      minLength: 3,\n      filter: \"contains\",\n      onChange: value => this.handleMultiSelectChange(\"hasNationality\", value, lang),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }), React.createElement(CustomInput, {\n      id: \"driversLicence\",\n      label: this.renderLabel(translatedProps, \"driversLicence\", lang),\n      type: \"text\",\n      value: driversLicence,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    }), React.createElement(Row, {\n      className: \"m-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 5,\n      className: \"p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466\n      },\n      __self: this\n    }, personalWebsite[lang])), React.createElement(Col, {\n      md: 5,\n      className: \"p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468\n      },\n      __self: this\n    }), React.createElement(Col, {\n      md: 2,\n      className: \"p-0 instant-add-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }, React.createElement(AddButton, {\n      classnames: \"add-button small-button\",\n      handleClick: () => this.addWebsite(\"hasWebsite\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    }))), hasWebsite.map((member, index) => React.createElement(Row, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 4,\n      className: \"pr-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginTop: \"22px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    }, React.createElement(Combobox, {\n      name: \"websiteType\",\n      data: this.props.websites,\n      textField: lang,\n      valueField: \"@type\",\n      value: member[\"my0:websiteType\"],\n      placeholder: this.renderLabel(translatedPropsWeb, \"websiteType\", lang),\n      caseSensitive: false,\n      minLength: 3,\n      filter: \"contains\",\n      onChange: value => this.updateWebsite(\"my0:websiteType\", value, index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      md: 7,\n      style: {\n        marginTop: \"7px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"websiteURL\",\n      label: this.renderLabel(translatedPropsWeb, \"websiteURL\", lang),\n      type: \"text\",\n      value: member[\"my0:websiteURL\"],\n      handleChange: e => this.updateWebsite(\"my0:websiteURL\", e.target.value, index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    })), React.createElement(Col, {\n      md: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515\n      },\n      __self: this\n    }, React.createElement(RemoveButton, {\n      classnames: \"shift-left\",\n      handleClick: () => this.removeInstantMessaging(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523\n      },\n      __self: this\n    }), React.createElement(Row, {\n      className: \"m-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 5,\n      className: \"p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526\n      },\n      __self: this\n    }, personalIM[lang])), React.createElement(Col, {\n      md: 5,\n      className: \"p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528\n      },\n      __self: this\n    }), React.createElement(Col, {\n      md: 2,\n      className: \"p-0 instant-add-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529\n      },\n      __self: this\n    }, React.createElement(AddButton, {\n      classnames: \"add-button small-button\",\n      handleClick: () => this.addInstantMessaging(\"hasInstantMessaging\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530\n      },\n      __self: this\n    }))), instantMessaging.map((member, index) => React.createElement(Row, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 6,\n      className: \"pr-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginTop: \"22px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542\n      },\n      __self: this\n    }, React.createElement(Combobox, {\n      name: \"instantMessagingName\",\n      data: this.props.ims,\n      textField: lang,\n      valueField: \"@type\",\n      value: member[\"my0:instantMessagingName\"],\n      placeholder: this.renderLabel(translatedPropsIM, \"instantMessagingName\", lang),\n      caseSensitive: false,\n      minLength: 3,\n      filter: \"contains\",\n      onChange: value => this.updateInstantMessaging(\"my0:instantMessagingName\", value, index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      md: 5,\n      style: {\n        marginTop: \"7px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:instantMessagingUsername\",\n      label: this.renderLabel(translatedPropsIM, \"instantMessagingUsername\", lang),\n      type: \"text\",\n      value: member[\"my0:instantMessagingUsername\"],\n      handleChange: e => this.updateInstantMessaging(\"my0:instantMessagingUsername\", e.target.value, index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568\n      },\n      __self: this\n    })), React.createElement(Col, {\n      md: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586\n      },\n      __self: this\n    }, React.createElement(RemoveButton, {\n      classnames: \"shift-left\",\n      handleClick: () => this.removeInstantMessaging(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587\n      },\n      __self: this\n    }))))), React.createElement(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginTop: \"75px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"photo-div-container\",\n      width: \"250px\",\n      height: \"300px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597\n      },\n      __self: this\n    }, photo ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faTimesCircle,\n      onClick: this.clearPhotoUpload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: \"../../static/media/photos/\" + photo,\n      width: \"250px\",\n      height: \"300px\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      className: \"photo-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        textAlign: \"center\",\n        marginTop: \"10px\",\n        marginBottom: \"0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 613\n      },\n      __self: this\n    }, this.renderLabel(translatedProps, \"photo\", lang)), React.createElement(\"div\", {\n      className: \"photo-div-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 622\n      },\n      __self: this\n    }, React.createElement(AddButton, {\n      handleClick: this.handleAddPhotoClick,\n      classnames: \"add-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 623\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.onChangePhotoUpload,\n      ref: inputHiddenRef => this.inputHiddenRef = inputHiddenRef,\n      type: \"file\",\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 627\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"alert alert-warning\",\n      style: {\n        margin: 0,\n        padding: \"10px\",\n        fontSize: \"14px\",\n        marginTop: \"15px\",\n        maxWidth: \"250px\"\n      },\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 639\n      },\n      __self: this\n    }, personalAccepted[lang], React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 651\n      },\n      __self: this\n    }), personalSizeMax[lang]), React.createElement(CustomRadioGroup, {\n      items: this.props.genders,\n      lang: lang,\n      name: \"gender\",\n      value: gender,\n      handleChange: this.handleRadioChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 654\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapstateToProps = state => {\n  return {\n    language: state.utility.language,\n    countries: retrieveCountryValues(state.utility.countryValues),\n    genders: retrieveBaseProperties(state.utility.genderValues),\n    titles: retrieveBaseProperties(state.utility.titleValues),\n    ims: retrieveBaseProperties(state.utility.ims),\n    websites: retrieveBaseProperties(state.utility.websites),\n    translatedProps: retrieveMainProperties(state.utility[\"my0:Person\"]),\n    translatedPropsAddr: retrieveMainProperties(state.utility[\"my0:Address\"]),\n    translatedPropsWeb: retrieveMainProperties(state.utility[\"my0:Website\"]),\n    translatedPropsIM: retrieveMainProperties(state.utility[\"my0:InstantMessaging\"]),\n    aboutperson: state.cv[\"my0:aboutPerson\"],\n    error: state.utility.error\n  };\n};\n\nexport default connect(mapstateToProps, {\n  fetchCountries,\n  updateAboutPerson,\n  fetchGenders,\n  fetchTitleProperties,\n  fetchAllWebsiteTypess,\n  fetchMainPropertiess,\n  fetchAllIMTypess,\n  createIM,\n  updateIM,\n  removeIM,\n  updateError,\n  createWebsite,\n  updateWebsite,\n  removeWebsite\n})(FormPersonal);","map":{"version":3,"sources":["/home/eelezi/thesis/rdf2resume/src/components/Dashboard/Forms/FormPersonal.jsx"],"names":["React","Component","Row","Col","AddButton","RemoveButton","CustomInput","FontAwesomeIcon","faTimesCircle","CustomRadioGroup","Combobox","Multiselect","Swal","connect","CustomTextarea","updateAboutPerson","createIM","updateIM","removeIM","createWebsite","updateWebsite","removeWebsite","fetchCountries","fetchGenders","fetchTitleProperties","fetchAllWebsiteTypess","fetchAllIMTypess","updateError","fetchMainPropertiess","retrieveCountryValues","retrieveMainProperties","retrieveBaseProperties","personalAccepted","personalIM","personalSizeMax","personalWebsite","mainSidebar","personalNationalityAlert","axios","FormPersonal","constructor","props","handleInputChange","e","secondLevel","id","target","value","handleInputChangeWithLanguage","lang","language","handleSelectChange","name","handleMultiSelectChange","myarr","length","fire","title","text","type","confirmButtonColor","heightAuto","confirmButtonText","i","push","handleRadioChange","addWebsite","index","addInstantMessaging","updateInstantMessaging","removeInstantMessaging","handleAddPhotoClick","inputHiddenRef","click","onChangePhotoUpload","file","files","formData","FormData","append","post","headers","then","resp","data","catch","error","console","log","clearPhotoUpload","handleBlur","label","object","createRef","state","componentWillMount","findInArray","indexOf","renderLabel","translated","undefined","findTranslatedValue","render","aboutperson","firstName","lastName","hasCitizenship","hasNationality","dateOfBirth","gender","phoneNumber","email","driversLicence","address","personShortDescription","personLongDescription","hasWebsite","photo","titlePage","translatedProps","translatedPropsAddr","translatedPropsWeb","translatedPropsIM","instantMessaging","marginTop","titles","countries","map","member","websites","ims","textAlign","marginBottom","margin","padding","fontSize","maxWidth","genders","mapstateToProps","utility","countryValues","genderValues","titleValues","cv"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport AddButton from \"../../core/AddButton\";\nimport RemoveButton from \"../../core/RemoveButton\";\nimport CustomInput from \"../../core/CustomInput\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport CustomRadioGroup from \"../../core/CustomRadioGroup\";\nimport { Combobox, Multiselect } from \"react-widgets\";\nimport Swal from \"sweetalert2\";\nimport { connect } from \"react-redux\";\nimport CustomTextarea from \"../../core/CustomTextarea\";\nimport {\n  updateAboutPerson,\n  createIM,\n  updateIM,\n  removeIM,\n  createWebsite,\n  updateWebsite,\n  removeWebsite\n} from \"../../../actions\";\nimport {\n  fetchCountries,\n  fetchGenders,\n  fetchTitleProperties,\n  fetchAllWebsiteTypess,\n  fetchAllIMTypess,\n  updateError,\n  fetchMainPropertiess\n} from \"../../../actions/utilityActions\";\nimport {\n  retrieveCountryValues,\n  retrieveMainProperties,\n  retrieveBaseProperties\n} from \"../../../utilities/utilityQueries\";\nimport {\n  personalAccepted,\n  personalIM,\n  personalSizeMax,\n  personalWebsite,\n  mainSidebar,\n  personalNationalityAlert\n} from \"../../../translations/translations\";\nimport axios from \"axios\";\n\nclass FormPersonal extends Component {\n  constructor(props) {\n    super(props);\n    // Create the ref\n    this.inputHiddenRef = React.createRef();\n    this.state = {};\n  }\n\n  componentWillMount() {\n    this.props.fetchCountries();\n    this.props.fetchGenders();\n    this.props.fetchTitleProperties();\n    this.props.fetchAllWebsiteTypess();\n    this.props.fetchAllIMTypess();\n    this.props.fetchMainPropertiess(\"my0:Person\");\n    this.props.fetchMainPropertiess(\"my0:Address\");\n    this.props.fetchMainPropertiess(\"my0:Website\");\n    this.props.fetchMainPropertiess(\"my0:InstantMessaging\");\n  }\n\n  handleInputChange = (e, secondLevel) => {\n    this.props.updateAboutPerson({\n      id: e.target.id,\n      value: e.target.value,\n      secondLevel\n    });\n  };\n\n  handleInputChangeWithLanguage = (e, lang, secondLevel) => {\n    this.props.updateAboutPerson({\n      id: e.target.id,\n      language: lang,\n      value: e.target.value,\n      secondLevel\n    });\n  };\n\n  handleSelectChange = (name, value, secondLevel) => {\n    this.props.updateAboutPerson({\n      id: name,\n      value: value[\"@type\"],\n      secondLevel\n    });\n  };\n\n  handleMultiSelectChange = (name, value, lang) => {\n    let myarr = [];\n    let length = value.length;\n    if (name === \"hasCitizenship\" || name === \"hasNationality\") {\n      if (value.length >= 3) {\n        Swal.fire({\n          title: \"Warning!\",\n          text: personalNationalityAlert[lang],\n          type: \"warning\",\n          confirmButtonColor: \"#4bb3cc\",\n          heightAuto: false,\n          confirmButtonText: \"Okay\"\n        });\n        return;\n      }\n    }\n    for (let i = 0; i < length; i++) {\n      myarr.push(value[i][\"@type\"]);\n    }\n    this.props.updateAboutPerson({ id: name, value: myarr });\n  };\n\n  handleRadioChange = e => {\n    this.props.updateAboutPerson({ id: e.target.name, value: e.target.id });\n  };\n\n  addWebsite = id => {\n    this.props.createWebsite();\n  };\n\n  updateWebsite = (name, value, index) => {\n    if (value[\"@type\"]) {\n      this.props.updateWebsite({\n        id: index,\n        name: name,\n        value: value[\"@type\"]\n      });\n    } else {\n      this.props.updateWebsite({ id: index, name: name, value: value });\n    }\n  };\n\n  removeWebsite = index => {\n    this.props.removeWebsite(index);\n  };\n\n  addInstantMessaging = id => {\n    this.props.createIM();\n  };\n\n  updateInstantMessaging = (name, value, index) => {\n    if (value[\"@type\"]) {\n      this.props.updateIM({ id: index, name: name, value: value[\"@type\"] });\n    } else {\n      this.props.updateIM({ id: index, name: name, value: value });\n    }\n  };\n\n  removeInstantMessaging = index => {\n    this.props.removeIM(index);\n  };\n\n  handleAddPhotoClick = () => {\n    this.inputHiddenRef.click();\n  };\n\n  onChangePhotoUpload = async e => {\n    let file = e.target.files[0];\n    var formData = new FormData();\n    formData.append(\"file\", file);\n    axios\n      .post(\"/upload_photo\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      })\n      .then(resp => {\n        this.props.updateAboutPerson({\n          id: \"photo\",\n          value: resp.data\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  clearPhotoUpload = () => {\n    this.props.updateAboutPerson({\n      id: \"photo\",\n      value: \"\"\n    });\n  };\n\n  findInArray(data, name) {\n    let length = data.length;\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@type\"].indexOf(name) >= 0) {\n        return i;\n      }\n    }\n  }\n\n  renderLabel(translated, name, lang) {\n    let index = this.findInArray(translated, name);\n    if (\n      translated[index] === undefined ||\n      translated[index][lang] === undefined\n    ) {\n      return name;\n    } else {\n      return translated[index][lang];\n    }\n  }\n\n  handleBlur = e => {\n    let label = e.target.id;\n    if (label === \"firstName\" || label === \"lastName\" || label === \"email\") {\n      if (e.target.value === \"\") {\n        this.props.updateError({\n          object: \"my0:\" + label,\n          value: true\n        });\n      } else {\n        this.props.updateError({\n          object: \"my0:\" + label,\n          value: false\n        });\n      }\n    }\n  };\n\n  findTranslatedValue(data, lang) {\n    let length = data.length;\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@language\"] === lang) {\n        return data[i][\"@value\"];\n      }\n    }\n  }\n\n  render() {\n    let {\n      \"my0:firstName\": firstName,\n      \"my0:lastName\": lastName,\n      \"my0:hasCitizenship\": hasCitizenship,\n      \"my0:hasNationality\": hasNationality,\n      \"my0:dateOfBirth\": dateOfBirth,\n      \"my0:gender\": gender,\n      \"my0:phoneNumber\": phoneNumber,\n      \"my0:email\": email,\n      \"my0:title\": title,\n      \"my0:driversLicence\": driversLicence,\n      \"my0:address\": address,\n      \"my0:personShortDescription\": personShortDescription,\n      \"my0:personLongDescription\": personLongDescription,\n      \"my0:hasWebsite\": hasWebsite,\n      \"my0:photo\": photo\n    } = this.props.aboutperson;\n\n    let titlePage = mainSidebar[1];\n\n    let {\n      translatedProps,\n      translatedPropsAddr,\n      translatedPropsWeb,\n      translatedPropsIM\n    } = this.props;\n\n    let lang = this.props.language;\n\n    let error = this.props.error;\n\n    let instantMessaging = this.props.aboutperson[\"my0:hasInstantMessaging\"];\n\n    return (\n      <Row className=\"main-content-row\">\n        <Col md={4}>\n          <h4 style={{ marginTop: \"10px\" }}>{titlePage[lang]}</h4>\n          <CustomTextarea\n            id=\"personShortDescription\"\n            rows=\"5\"\n            label={this.renderLabel(translatedProps, \"personShortDescription\", lang)}\n            value={this.findTranslatedValue(personShortDescription, lang)}\n            handleChange={(e) => this.handleInputChangeWithLanguage(e, lang)}\n          />\n          <CustomTextarea\n            id=\"personLongDescription\"\n            rows=\"15\"\n            label={this.renderLabel(translatedProps, \"personLongDescription\", lang)}\n            value={this.findTranslatedValue(personLongDescription, lang)}\n            handleChange={(e) => this.handleInputChangeWithLanguage(e, lang)}\n          />\n        </Col>\n        <Col md={4} className=\"pt-4\">\n          <label className=\"label-rw\">\n            {this.renderLabel(translatedProps, \"title\", lang)}\n          </label>\n          <Combobox\n            name=\"title\"\n            placeholder={this.renderLabel(translatedProps, \"title\", lang)}\n            data={this.props.titles}\n            textField={lang}\n            valueField=\"@type\"\n            value={title}\n            caseSensitive={false}\n            minLength={3}\n            filter=\"contains\"\n            onChange={value => this.handleSelectChange(\"title\", value)}\n          />\n          <div className=\"row\">\n            <div className=\"col col-sm-6\">\n              <CustomInput\n                id=\"firstName\"\n                label={\n                  this.renderLabel(translatedProps, \"firstName\", lang) + \" *\"\n                }\n                type=\"text\"\n                handleBlurEvent={this.handleBlur}\n                value={firstName}\n                handleChange={this.handleInputChange}\n              />\n              {error[\"my0:firstName\"] ? (\n                <span className=\"error\">Required</span>\n              ) : (\n                  \"\"\n                )}\n            </div>\n            <div className=\"col col-sm-6\">\n              <CustomInput\n                id=\"lastName\"\n                label={\n                  this.renderLabel(translatedProps, \"lastName\", lang) + \" *\"\n                }\n                type=\"text\"\n                value={lastName}\n                handleBlurEvent={this.handleBlur}\n                handleChange={this.handleInputChange}\n              />\n              {error[\"my0:lastName\"] ? (\n                <span className=\"error\">Required</span>\n              ) : (\n                  \"\"\n                )}\n            </div>\n          </div>\n          <CustomInput\n            id=\"email\"\n            label={this.renderLabel(translatedProps, \"email\", lang) + \" *\"}\n            type=\"text\"\n            handleBlurEvent={this.handleBlur}\n            value={email}\n            handleChange={this.handleInputChange}\n          />\n          {error[\"my0:email\"] ? <span className=\"error\">Required</span> : \"\"}\n          <CustomInput\n            id=\"phoneNumber\"\n            label={this.renderLabel(translatedProps, \"phoneNumber\", lang)}\n            type=\"text\"\n            value={phoneNumber}\n            handleChange={this.handleInputChange}\n          />\n          <div>\n            <CustomInput\n              id=\"street\"\n              label={this.renderLabel(translatedPropsAddr, \"street\", lang)}\n              type=\"text\"\n              value={this.findTranslatedValue(address[\"my0:street\"], lang)}\n              handleChange={e => this.handleInputChangeWithLanguage(e, lang, \"address\")}\n            />\n            <Row>\n              <Col md={6}>\n                <CustomInput\n                  id=\"postalCode\"\n                  label={this.renderLabel(\n                    translatedPropsAddr,\n                    \"postalCode\",\n                    lang\n                  )}\n                  type=\"text\"\n                  value={address[\"my0:postalCode\"]}\n                  handleChange={e => this.handleInputChange(e, \"address\")}\n                />\n              </Col>\n              <Col md={6}>\n                <CustomInput\n                  id=\"city\"\n                  label={this.renderLabel(translatedPropsAddr, \"city\", lang)}\n                  type=\"text\"\n                  value={this.findTranslatedValue(address[\"my0:city\"], lang)}\n                  handleChange={e => this.handleInputChangeWithLanguage(e, lang, \"address\")}\n                />\n              </Col>\n            </Row>\n            <label className=\"label-rw\">\n              {this.renderLabel(translatedPropsAddr, \"country\", lang)}\n            </label>\n            <Combobox\n              name=\"country\"\n              placeholder={this.renderLabel(\n                translatedPropsAddr,\n                \"country\",\n                lang\n              )}\n              data={this.props.countries}\n              textField={lang}\n              valueField=\"@type\"\n              value={address[\"my0:country\"]}\n              caseSensitive={false}\n              minLength={3}\n              filter=\"contains\"\n              onChange={value =>\n                this.handleSelectChange(\"country\", value, \"address\")\n              }\n            />\n          </div>\n          <CustomInput\n            id=\"dateOfBirth\"\n            label={this.renderLabel(translatedProps, \"dateOfBirth\", lang)}\n            type=\"date\"\n            value={dateOfBirth}\n            handleChange={this.handleInputChange}\n          />\n          <label className=\"label-rw\">\n            {this.renderLabel(translatedProps, \"hasCitizenship\", lang)}\n          </label>\n          <Multiselect\n            name=\"hasCitizenship\"\n            data={this.props.countries}\n            textField={lang}\n            valueField=\"@type\"\n            value={hasCitizenship}\n            placeholder={this.renderLabel(\n              translatedProps,\n              \"hasCitizenship\",\n              lang\n            )}\n            caseSensitive={false}\n            minLength={3}\n            filter=\"contains\"\n            onChange={value =>\n              this.handleMultiSelectChange(\"hasCitizenship\", value, lang)\n            }\n          />\n          <label className=\"label-rw\">\n            {this.renderLabel(translatedProps, \"hasNationality\", lang)}\n          </label>\n          <Multiselect\n            name=\"hasNationality\"\n            data={this.props.countries}\n            textField={lang}\n            valueField=\"@type\"\n            value={hasNationality}\n            placeholder={this.renderLabel(\n              translatedProps,\n              \"hasNationality\",\n              lang\n            )}\n            caseSensitive={false}\n            minLength={3}\n            filter=\"contains\"\n            onChange={value =>\n              this.handleMultiSelectChange(\"hasNationality\", value, lang)\n            }\n          />\n          <CustomInput\n            id=\"driversLicence\"\n            label={this.renderLabel(translatedProps, \"driversLicence\", lang)}\n            type=\"text\"\n            value={driversLicence}\n            handleChange={this.handleInputChange}\n          />\n          <div className=\"mb-3\" />\n          <Row className=\"m-0\">\n            <Col md={5} className=\"p-0\">\n              <p className=\"mb-0\">{personalWebsite[lang]}</p>\n            </Col>\n            <Col md={5} className=\"p-0\" />\n            <Col md={2} className=\"p-0 instant-add-wrapper\">\n              <AddButton\n                classnames=\"add-button small-button\"\n                handleClick={() => this.addWebsite(\"hasWebsite\")}\n              />\n            </Col>\n          </Row>\n          {hasWebsite.map((member, index) => (\n            <Row key={index}>\n              <Col md={4} className=\"pr-0\">\n                <div style={{ marginTop: \"22px\" }}>\n                  <Combobox\n                    name=\"websiteType\"\n                    data={this.props.websites}\n                    textField={lang}\n                    valueField=\"@type\"\n                    value={member[\"my0:websiteType\"]}\n                    placeholder={this.renderLabel(\n                      translatedPropsWeb,\n                      \"websiteType\",\n                      lang\n                    )}\n                    caseSensitive={false}\n                    minLength={3}\n                    filter=\"contains\"\n                    onChange={value =>\n                      this.updateWebsite(\"my0:websiteType\", value, index)\n                    }\n                  />\n                </div>\n              </Col>\n              <Col md={7} style={{ marginTop: \"7px\" }}>\n                <CustomInput\n                  id=\"websiteURL\"\n                  label={this.renderLabel(\n                    translatedPropsWeb,\n                    \"websiteURL\",\n                    lang\n                  )}\n                  type=\"text\"\n                  value={member[\"my0:websiteURL\"]}\n                  handleChange={e =>\n                    this.updateWebsite(\"my0:websiteURL\", e.target.value, index)\n                  }\n                />\n              </Col>\n              <Col md={1}>\n                <RemoveButton\n                  classnames=\"shift-left\"\n                  handleClick={() => this.removeInstantMessaging(index)}\n                />\n              </Col>\n            </Row>\n          ))}\n          <div className=\"mb-3\" />\n          <Row className=\"m-0\">\n            <Col md={5} className=\"p-0\">\n              <p className=\"mb-0\">{personalIM[lang]}</p>\n            </Col>\n            <Col md={5} className=\"p-0\" />\n            <Col md={2} className=\"p-0 instant-add-wrapper\">\n              <AddButton\n                classnames=\"add-button small-button\"\n                handleClick={() =>\n                  this.addInstantMessaging(\"hasInstantMessaging\")\n                }\n              />\n            </Col>\n          </Row>\n\n          {instantMessaging.map((member, index) => (\n            <Row key={index}>\n              <Col md={6} className=\"pr-0\">\n                <div style={{ marginTop: \"22px\" }}>\n                  <Combobox\n                    name=\"instantMessagingName\"\n                    data={this.props.ims}\n                    textField={lang}\n                    valueField=\"@type\"\n                    value={member[\"my0:instantMessagingName\"]}\n                    placeholder={this.renderLabel(\n                      translatedPropsIM,\n                      \"instantMessagingName\",\n                      lang\n                    )}\n                    caseSensitive={false}\n                    minLength={3}\n                    filter=\"contains\"\n                    onChange={value =>\n                      this.updateInstantMessaging(\n                        \"my0:instantMessagingName\",\n                        value,\n                        index\n                      )\n                    }\n                  />\n                </div>\n              </Col>\n              <Col md={5} style={{ marginTop: \"7px\" }}>\n                <CustomInput\n                  id=\"my0:instantMessagingUsername\"\n                  label={this.renderLabel(\n                    translatedPropsIM,\n                    \"instantMessagingUsername\",\n                    lang\n                  )}\n                  type=\"text\"\n                  value={member[\"my0:instantMessagingUsername\"]}\n                  handleChange={e =>\n                    this.updateInstantMessaging(\n                      \"my0:instantMessagingUsername\",\n                      e.target.value,\n                      index\n                    )\n                  }\n                />\n              </Col>\n              <Col md={1}>\n                <RemoveButton\n                  classnames=\"shift-left\"\n                  handleClick={() => this.removeInstantMessaging(index)}\n                />\n              </Col>\n            </Row>\n          ))}\n        </Col>\n        <Col md={4}>\n          <div style={{ marginTop: \"75px\" }}>\n            <div className=\"photo-div-container\" width=\"250px\" height=\"300px\">\n              {photo ? (\n                <React.Fragment>\n                  <FontAwesomeIcon\n                    icon={faTimesCircle}\n                    onClick={this.clearPhotoUpload}\n                  />\n                  <img\n                    src={\"../../static/media/photos/\" + photo}\n                    width=\"250px\"\n                    height=\"300px\"\n                    alt=\"\"\n                  ></img>\n                </React.Fragment>\n              ) : (\n                  <div className=\"photo-div\">\n                    <p\n                      style={{\n                        textAlign: \"center\",\n                        marginTop: \"10px\",\n                        marginBottom: \"0\"\n                      }}\n                    >\n                      {this.renderLabel(translatedProps, \"photo\", lang)}\n                    </p>\n                    <div className=\"photo-div-button\">\n                      <AddButton\n                        handleClick={this.handleAddPhotoClick}\n                        classnames=\"add-button\"\n                      />\n                      <input\n                        onChange={this.onChangePhotoUpload}\n                        ref={inputHiddenRef =>\n                          (this.inputHiddenRef = inputHiddenRef)\n                        }\n                        type=\"file\"\n                        hidden\n                      />\n                    </div>\n                  </div>\n                )}\n            </div>\n            <div\n              className=\"alert alert-warning\"\n              style={{\n                margin: 0,\n                padding: \"10px\",\n                fontSize: \"14px\",\n                marginTop: \"15px\",\n                maxWidth: \"250px\"\n              }}\n              role=\"alert\"\n            >\n              {personalAccepted[lang]}\n              <br />\n              {personalSizeMax[lang]}\n            </div>\n            <CustomRadioGroup\n              items={this.props.genders}\n              lang={lang}\n              name=\"gender\"\n              value={gender}\n              handleChange={this.handleRadioChange}\n            />\n          </div>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst mapstateToProps = state => {\n  return {\n    language: state.utility.language,\n    countries: retrieveCountryValues(state.utility.countryValues),\n    genders: retrieveBaseProperties(state.utility.genderValues),\n    titles: retrieveBaseProperties(state.utility.titleValues),\n    ims: retrieveBaseProperties(state.utility.ims),\n    websites: retrieveBaseProperties(state.utility.websites),\n    translatedProps: retrieveMainProperties(state.utility[\"my0:Person\"]),\n    translatedPropsAddr: retrieveMainProperties(state.utility[\"my0:Address\"]),\n    translatedPropsWeb: retrieveMainProperties(state.utility[\"my0:Website\"]),\n    translatedPropsIM: retrieveMainProperties(\n      state.utility[\"my0:InstantMessaging\"]\n    ),\n    aboutperson: state.cv[\"my0:aboutPerson\"],\n    error: state.utility.error\n  };\n};\n\nexport default connect(\n  mapstateToProps,\n  {\n    fetchCountries,\n    updateAboutPerson,\n    fetchGenders,\n    fetchTitleProperties,\n    fetchAllWebsiteTypess,\n    fetchMainPropertiess,\n    fetchAllIMTypess,\n    createIM,\n    updateIM,\n    removeIM,\n    updateError,\n    createWebsite,\n    updateWebsite,\n    removeWebsite\n  }\n)(FormPersonal);\n"]},"metadata":{},"sourceType":"module"}