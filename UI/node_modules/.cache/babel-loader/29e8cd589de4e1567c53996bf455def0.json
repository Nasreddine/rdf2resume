{"ast":null,"code":"/*******************************************************************************************************************/\n\n/*******************************************************************************************************************/\n\n/********************************* QUERIES FOR DROPDOWNS VALUES ****************************************************/\n\n/*******************************************************************************************************************/\n\n/*******************************************************************************************************************/\nconst prefixes = \"prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>\\n prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\\n prefix xsd: <https://www.w3.org/2001/XMLSchema#>\\n prefix owl: <http://www.w3.org/2002/07/owl#>\\n prefix ns0: <http://protege.stanford.edu/system#>\\n prefix country: <http://www.bpiresearch.com/BPMO/2004/03/03/cdl/Countries#>\\n prefix dc: <http://purl.org/dc/terms/>\\n prefix dbo: <http://dbpedia.org/resource/classes#>\\n prefix esco: <http://data.europa.eu/esco/model>\\n  prefix my0: <http://example.com/rdf2resume_ontology.rdf#>\\n prefix myvalue0: <http://example.com/rdf2resume_value_ontology.rdf#>\\n \";\nexport const fetchMainProperties = object => {\n  return prefixes + 'SELECT DISTINCT\\n?object ?enlabel ?delabel ?itlabel ?frlabel\\nWHERE {\\n?object rdfs:domain ' + object + '.\\n ?object rdfs:label ?enlabel, ?delabel, ?itlabel, ?frlabel.\\nFILTER(lang(?enlabel) = \"en\")\\nFILTER(lang(?delabel) = \"de\")\\nFILTER(lang(?itlabel) = \"it\")\\nFILTER(lang(?frlabel) = \"fr\")}';\n};\nexport const retrieveMainProperties = object => {\n  let objectNames = [];\n  object.map(obj => {\n    objectNames.push({\n      \"@type\": obj.object.value,\n      \"en\": obj.enlabel.value,\n      \"de\": obj.delabel.value,\n      \"it\": obj.itlabel.value,\n      \"fr\": obj.frlabel.value\n    });\n    return \"\";\n  });\n  return objectNames;\n};\nexport const fetchMainPropertiesLanguage = () => {\n  return prefixes + 'SELECT DISTINCT\\n?object ?enlabel ?delabel ?itlabel ?frlabel\\nWHERE {\\n?object rdfs:domain  my0:LanguageSkill.\\n ?object rdfs:label ?enlabel, ?delabel, ?itlabel, ?frlabel.\\nFILTER(lang(?enlabel) = \"en\")\\nFILTER(lang(?delabel) = \"de\")\\nFILTER(lang(?itlabel) = \"it\")\\nFILTER(lang(?frlabel) = \"fr\")';\n};\nexport const retrieveMainPropertiesLanguage = object => {\n  let objectNames = [];\n  object.map(obj => {\n    objectNames.push({\n      \"@type\": obj.object.value,\n      \"en\": obj.enlabel.value,\n      \"de\": obj.delabel.value,\n      \"it\": obj.itlabel.value,\n      \"fr\": obj.frlabel.value\n    });\n    return \"\";\n  });\n  return objectNames;\n};\nexport const fetchAllCountries = () => {\n  return prefixes + 'SELECT DISTINCT\\n?isoCountry\\n?objectURI\\n?enlabel ?delabel ?itlabel ?frlabel\\nWHERE {\\n?isoCountry a country:ISO3166DefinedCountry;\\n country:referencesCountry ?objectURI.\\n?objectURI country:nameEnglish ?enlabel, ?delabel, ?itlabel, ?frlabel.\\n FILTER(lang(?enlabel)= \"en\") \\n FILTER(lang(?delabel)= \"de\") \\n FILTER(lang(?itlabel)= \"it\") \\n FILTER(lang(?frlabel)= \"fr\") \\n}';\n};\nexport const retrieveCountryValues = countriesObject => {\n  let countryNames = [];\n  countriesObject.map(obj => {\n    countryNames.push({\n      \"@type\": obj.objectURI.value,\n      \"en\": obj.enlabel.value,\n      \"de\": obj.delabel.value,\n      \"it\": obj.itlabel.value,\n      \"fr\": obj.frlabel.value\n    });\n    return \"\";\n  });\n  return countryNames;\n};\nexport const fetchBaseProperties = object => {\n  return prefixes + 'SELECT DISTINCT\\n?object ?enlabel ?delabel ?itlabel ?frlabel\\nWHERE {\\n?object a ' + object + '.\\n ?object rdfs:label ?enlabel, ?delabel, ?itlabel, ?frlabel.\\nFILTER(lang(?enlabel) = \"en\")\\nFILTER(lang(?delabel) = \"de\")\\nFILTER(lang(?itlabel) = \"it\")\\nFILTER(lang(?frlabel) = \"fr\")}';\n};\nexport const retrieveBaseProperties = object => {\n  let objectNames = [];\n  object.map(obj => {\n    objectNames.push({\n      \"@type\": obj.object.value,\n      \"en\": obj.enlabel.value,\n      \"de\": obj.delabel.value,\n      \"it\": obj.itlabel.value,\n      \"fr\": obj.frlabel.value\n    });\n    return \"\";\n  });\n  return objectNames;\n}; // export const fetchAllRegions = () => {\n//   return prefixes + 'SELECT DISTINCT\\n?objectURI\\n?enlabel ?delabel ?itlabel ?frlabel\\nWHERE {\\n?objectURI a mybase0:RegionProperty;\\nrdfs:label ?enlabel ?delabel ?itlabel ?frlabel.\\n FILTER(lang(?enlabel)= \"en\") \\n FILTER(lang(?delabel)= \"de\") \\n FILTER(lang(?itlabel)= \"it\") \\n FILTER(lang(?frlabel)= \"fr\") \\n}'\n// };\n// export const retrieveRegionsValues = objt => {\n//   let objtNames = [];\n//   objt.map(obj => {\n//     objtNames.push({ \n//       \"@type\": obj.objectURI.value, \n//       \"en\": obj.enlabel.value,\n//       \"de\": obj.delabel.value,\n//       \"it\": obj.itlabel.value,\n//       \"fr\": obj.frlabel.value\n//     })\n//     return \"\";\n//   });\n//   return objtNames;\n// };\n// export const fetchAllGenders = () => {\n//   return prefixes + 'SELECT DISTINCT\\n?objectURI\\n?enlabel ?delabel ?itlabel ?frlabel\\nWHERE {\\n?objectURI a mybase0:GenderProperty;\\nrdfs:label ?enlabel ?delabel ?itlabel ?frlabel.\\n FILTER(lang(?enlabel)= \"en\") \\n FILTER(lang(?delabel)= \"de\") \\n FILTER(lang(?itlabel)= \"it\") \\n FILTER(lang(?frlabel)= \"fr\") \\n}'\n// };\n// export const retrieveGenderValues = gendersObject => {\n//   let genderNames = [];\n//   gendersObject.map(obj => {\n//     genderNames.push({ \n//       \"@type\": obj.objectURI.value, \n//       \"en\": obj.enlabel.value,\n//       \"de\": obj.delabel.value,\n//       \"it\": obj.itlabel.value,\n//       \"fr\": obj.frlabel.value\n//     })\n//     return \"\";\n//   });\n//   return genderNames;\n// };\n// export const fetchAllPatentStatuses = () => {\n//   return prefixes + 'SELECT DISTINCT\\n?objectURI\\n?enlabel ?delabel ?itlabel ?frlabel\\nWHERE {\\n?objectURI a mybase0:StatusProperty;\\nrdfs:label ?enlabel ?delabel ?itlabel ?frlabel.\\n FILTER(lang(?enlabel)= \"en\") \\n FILTER(lang(?delabel)= \"de\") \\n FILTER(lang(?itlabel)= \"it\") \\n FILTER(lang(?frlabel)= \"fr\") \\n}'\n// };\n// export const retrievePatentStatusValues = patentsObject => {\n//   let patentNames = [];\n//   patentsObject.map(obj => {\n//     patentNames.push({ \n//       \"@type\": obj.objectURI.value, \n//       \"en\": obj.enlabel.value,\n//       \"de\": obj.delabel.value,\n//       \"it\": obj.itlabel.value,\n//       \"fr\": obj.frlabel.value\n//     })\n//     return \"\";\n//   });\n//   return patentNames;\n// };\n// export const fetchAllIMTypes = () => {\n//   return prefixes + 'SELECT DISTINCT\\n?objectURI\\n?enlabel ?delabel ?itlabel ?frlabel\\nWHERE {\\n?objectURI a mybase0:InstantMessagingTypeProperty;\\nrdfs:label ?enlabel ?delabel ?itlabel ?frlabel.\\n FILTER(lang(?enlabel)= \"en\") \\n FILTER(lang(?delabel)= \"de\") \\n FILTER(lang(?itlabel)= \"it\") \\n FILTER(lang(?frlabel)= \"fr\") \\n}'\n// };\n// export const retrieveIMValues = IMObject => {\n//   let IMNames = [];\n//   IMObject.map(obj => {\n//     IMNames.push({ \n//       \"@type\": obj.objectURI.value, \n//       \"en\": obj.enlabel.value,\n//       \"de\": obj.delabel.value,\n//       \"it\": obj.itlabel.value,\n//       \"fr\": obj.frlabel.value\n//     })\n//     return \"\";\n//   });\n//   return IMNames;\n// };\n// export const fetchAllWebsiteTypes = () => {\n//   return prefixes + 'SELECT DISTINCT\\n?objectURI\\n?enlabel ?delabel ?itlabel ?frlabel\\nWHERE {\\n?objectURI a mybase0:WebsiteTypeProperty;\\nrdfs:label ?enlabel ?delabel ?itlabel ?frlabel.\\n FILTER(lang(?enlabel)= \"en\") \\n FILTER(lang(?delabel)= \"de\") \\n FILTER(lang(?itlabel)= \"it\") \\n FILTER(lang(?frlabel)= \"fr\") \\n}'\n// };\n// export const retrieveWebsiteValues = WebsiteObject => {\n//   let WebsiteNames = [];\n//   WebsiteObject.map(obj => {\n//     WebsiteNames.push({ \n//       \"@type\": obj.objectURI.value, \n//       \"en\": obj.enlabel.value,\n//       \"de\": obj.delabel.value,\n//       \"it\": obj.itlabel.value,\n//       \"fr\": obj.frlabel.value\n//     })\n//     return \"\";\n//   });\n//   return WebsiteNames;\n// };\n// export const fetchAllLanguageSkillsProficiencies = () => {\n//   return prefixes + 'SELECT DISTINCT\\n?objectURI\\n?enlabel ?delabel ?itlabel ?frlabel\\n?comment\\nWHERE {\\n?objectURI a mybase0:LanguageSkillProficiencyProperty  ;\\nrdfs:label ?enlabel ?delabel ?itlabel ?frlabel;\\nrdfs:comment ?comment. \\n FILTER(lang(?enlabel)= \"en\") \\n FILTER(lang(?delabel)= \"de\") \\n FILTER(lang(?itlabel)= \"it\") \\n FILTER(lang(?frlabel)= \"fr\") \\n}'\n// };\n// export const retrieveLngAssessment = lngAssessmentObj => {\n//   let lngAssessmentValues = [];\n//   lngAssessmentObj.map(obj => {\n//     lngAssessmentValues.push({ \n//       \"@type\": obj.objectURI.value, \n//       \"en\": obj.enlabel.value,\n//       \"de\": obj.delabel.value,\n//       \"it\": obj.itlabel.value,\n//       \"fr\": obj.frlabel.value \n//     })\n//     return \"\";\n//   });\n//   return lngAssessmentValues;\n// };\n// export const fetchAllTitleProperties = () => {\n//   return prefixes + 'SELECT DISTINCT\\n?objectURI\\n?enlabel ?delabel ?itlabel ?frlabel\\nWHERE {\\n?objectURI a mybase0:TitleProperty  ;\\nrdfs:label ?enlabel ?delabel ?itlabel ?frlabel.\\n FILTER(lang(?enlabel)= \"en\") \\n FILTER(lang(?delabel)= \"de\") \\n FILTER(lang(?itlabel)= \"it\") \\n FILTER(lang(?frlabel)= \"fr\") \\n}'\n// };\n// export const retrieveTitleValues = titlesObject => {\n//   let titleNames = [];\n//   titlesObject.map(obj => {\n//     titleNames.push({ \n//       \"@type\": obj.objectURI.value, \n//       \"en\": obj.enlabel.value,\n//       \"de\": obj.delabel.value,\n//       \"it\": obj.itlabel.value,\n//       \"fr\": obj.frlabel.value \n//     });\n//     return \"\";\n//   });\n//   return titleNames;\n// };\n// export const fetchAllCompanySizes = () => {\n//   return prefixes + 'SELECT DISTINCT\\n?objectURI\\n?enlabel ?delabel ?itlabel ?frlabel\\nWHERE {\\n?objectURI a mybase0:CompanySize  ;\\nrdfs:label ?enlabel ?delabel ?itlabel ?frlabel.\\n FILTER(lang(?enlabel)= \"en\") \\n FILTER(lang(?delabel)= \"de\") \\n FILTER(lang(?itlabel)= \"it\") \\n FILTER(lang(?frlabel)= \"fr\") \\n}'\n// };\n// export const retrieveCompanySizes = companySizesObj => {\n//   let companySizesValue = [];\n//   companySizesObj.map(obj => {\n//     companySizesValue.push({ \n//       \"@type\": obj.objectURI.value, \n//       \"en\": obj.enlabel.value,\n//       \"de\": obj.delabel.value,\n//       \"it\": obj.itlabel.value,\n//       \"fr\": obj.frlabel.value \n//     });\n//     return \"\";\n//   });\n//   return companySizesValue;\n// };\n// export const fetchAllCVJobModes = () => {\n//   return prefixes + 'SELECT DISTINCT\\n?objectURI\\n?enlabel ?delabel ?itlabel ?frlabel\\n WHERE {\\n?objectURI a mybase0:CVJobMode;\\nrdfs:label ?enlabel ?delabel ?itlabel ?frlabel.\\n FILTER(lang(?enlabel)= \"en\") \\n FILTER(lang(?delabel)= \"de\") \\n FILTER(lang(?itlabel)= \"it\") \\n FILTER(lang(?frlabel)= \"fr\") \\n}'\n// };\n// export const retrieveJobModes = modesObject => {\n//   let jobModeValues = [];\n//   modesObject.map(obj => {\n//     jobModeValues.push({ \n//       \"@type\": obj.objectURI.value, \n//       \"en\": obj.enlabel.value,\n//       \"de\": obj.delabel.value,\n//       \"it\": obj.itlabel.value,\n//       \"fr\": obj.frlabel.value \n//     });\n//     return \"\";\n//   });\n//   return jobModeValues;\n// };\n// export const fetchAllCVCareerLevels = () => {\n//   return prefixes + 'SELECT DISTINCT\\n?objectURI\\n?enlabel ?delabel ?itlabel ?frlabel\\nWHERE {\\n?objectURI a mybase0:CVCareerLevel  ;\\nrdfs:label ?enlabel ?delabel ?itlabel ?frlabel.\\n FILTER(lang(?enlabel)= \"en\") \\n FILTER(lang(?delabel)= \"de\") \\n FILTER(lang(?itlabel)= \"it\") \\n FILTER(lang(?frlabel)= \"fr\") \\n}'\n// };\n// export const retrieveCareerLevels = careerLevelsObject => {\n//   let careerValues = [];\n//   careerLevelsObject.map(obj => {\n//     careerValues.push({ \n//       \"@type\": obj.objectURI.value, \n//       \"en\": obj.enlabel.value,\n//       \"de\": obj.delabel.value,\n//       \"it\": obj.itlabel.value,\n//       \"fr\": obj.frlabel.value \n//     });\n//     return \"\";\n//   });\n//   return careerValues;\n// };\n// export const fetchAllEduDegrees = () => {\n//   return prefixes + 'SELECT DISTINCT\\n?objectURI\\n?enlabel ?delabel ?itlabel ?frlabel\\nWHERE {\\n?objectURI a mybase0:EduDegree  ;\\nrdfs:label ?enlabel ?delabel ?itlabel ?frlabel.\\n FILTER(lang(?enlabel)= \"en\") \\n FILTER(lang(?delabel)= \"de\") \\n FILTER(lang(?itlabel)= \"it\") \\n FILTER(lang(?frlabel)= \"fr\") \\n}'\n// };\n// export const retrieveDegreeValues = DegreesObj => {\n//   let degreesValues = [];\n//   DegreesObj.map(obj => {\n//     degreesValues.push({ \n//       \"@type\": obj.objectURI.value, \n//       \"en\": obj.enlabel.value,\n//       \"de\": obj.delabel.value,\n//       \"it\": obj.itlabel.value,\n//       \"fr\": obj.frlabel.value \n//     })\n//     return \"\";\n//   });\n//   return degreesValues;\n// };\n// export const fetchAllOtherCVInfoTypes = () => {\n//   return prefixes + 'SELECT DISTINCT\\n?objectURI\\n?enlabel ?delabel ?itlabel ?frlabel\\nWHERE {\\n?objectURI a mybase0:OtherCVInfoType  ;\\n rdfs:label ?enlabel ?delabel ?itlabel ?frlabel.\\n FILTER(lang(?enlabel)= \"en\") \\n FILTER(lang(?delabel)= \"de\") \\n FILTER(lang(?itlabel)= \"it\") \\n FILTER(lang(?frlabel)= \"fr\") \\n}'\n// };\n// export const retrieveOtherTypes = OthersObjs => {\n//   let typesNames = [];\n//   OthersObjs.map(obj => {\n//     typesNames.push({ \n//       \"@type\": obj.objectURI.value, \n//       \"en\": obj.enlabel.value,\n//       \"de\": obj.delabel.value,\n//       \"it\": obj.itlabel.value,\n//       \"fr\": obj.frlabel.value \n//     });\n//     return \"\";\n//   });\n//   return typesNames;\n// };\n// export const fetchAllIndustryTypes = () => {\n//   return prefixes + 'SELECT DISTINCT\\n?objectURI\\n?enlabel ?delabel ?itlabel ?frlabel\\nWHERE {\\n?objectURI a mybase0:IndustryType  ;\\n rdfs:label ?enlabel ?delabel ?itlabel ?frlabel.\\n FILTER(lang(?enlabel)= \"en\") \\n FILTER(lang(?delabel)= \"de\") \\n FILTER(lang(?itlabel)= \"it\") \\n FILTER(lang(?frlabel)= \"fr\") \\n}'\n// };\n// export const retrieveIndustryTypes = IndustryObjs => {\n//   let IndustryNames = [];\n//   IndustryObjs.map(obj => {\n//     IndustryNames.push({ \n//       \"@type\": obj.objectURI.value, \n//       \"en\": obj.enlabel.value,\n//       \"de\": obj.delabel.value,\n//       \"it\": obj.itlabel.value,\n//       \"fr\": obj.frlabel.value \n//     });\n//     return \"\";\n//   });\n//   return IndustryNames;\n// };","map":{"version":3,"sources":["/home/eelezi/thesis/rdf2resume/src/utilities/utilityQueries.js"],"names":["prefixes","fetchMainProperties","object","retrieveMainProperties","objectNames","map","obj","push","value","enlabel","delabel","itlabel","frlabel","fetchMainPropertiesLanguage","retrieveMainPropertiesLanguage","fetchAllCountries","retrieveCountryValues","countriesObject","countryNames","objectURI","fetchBaseProperties","retrieveBaseProperties"],"mappings":"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":["/*******************************************************************************************************************/\n/*******************************************************************************************************************/\n/********************************* QUERIES FOR DROPDOWNS VALUES ****************************************************/\n/*******************************************************************************************************************/\n/*******************************************************************************************************************/\n\nconst prefixes = \"prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>\\n prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\\n prefix xsd: <https://www.w3.org/2001/XMLSchema#>\\n prefix owl: <http://www.w3.org/2002/07/owl#>\\n prefix ns0: <http://protege.stanford.edu/system#>\\n prefix country: <http://www.bpiresearch.com/BPMO/2004/03/03/cdl/Countries#>\\n prefix dc: <http://purl.org/dc/terms/>\\n prefix dbo: <http://dbpedia.org/resource/classes#>\\n prefix esco: <http://data.europa.eu/esco/model>\\n  prefix my0: <http://example.com/rdf2resume_ontology.rdf#>\\n prefix myvalue0: <http://example.com/rdf2resume_value_ontology.rdf#>\\n \";\n\nexport const fetchMainProperties = (object) => {\n  return prefixes + 'SELECT DISTINCT\\n?object ?enlabel ?delabel ?itlabel ?frlabel\\nWHERE {\\n?object rdfs:domain ' + object + '.\\n ?object rdfs:label ?enlabel, ?delabel, ?itlabel, ?frlabel.\\nFILTER(lang(?enlabel) = \"en\")\\nFILTER(lang(?delabel) = \"de\")\\nFILTER(lang(?itlabel) = \"it\")\\nFILTER(lang(?frlabel) = \"fr\")}'\n};\n\nexport const retrieveMainProperties = object => {\n  let objectNames = [];\n  object.map(obj => {\n    objectNames.push( { \n      \"@type\": obj.object.value,\n      \"en\": obj.enlabel.value,\n      \"de\": obj.delabel.value,\n      \"it\": obj.itlabel.value,\n      \"fr\": obj.frlabel.value\n     });\n    return \"\";\n  });\n  return objectNames;\n};\n\nexport const fetchMainPropertiesLanguage = () => {\n  return prefixes + 'SELECT DISTINCT\\n?object ?enlabel ?delabel ?itlabel ?frlabel\\nWHERE {\\n?object rdfs:domain  my0:LanguageSkill.\\n ?object rdfs:label ?enlabel, ?delabel, ?itlabel, ?frlabel.\\nFILTER(lang(?enlabel) = \"en\")\\nFILTER(lang(?delabel) = \"de\")\\nFILTER(lang(?itlabel) = \"it\")\\nFILTER(lang(?frlabel) = \"fr\")'\n};\n\nexport const retrieveMainPropertiesLanguage = object => {\n  let objectNames = [];\n  object.map(obj => {\n    objectNames.push( { \n      \"@type\": obj.object.value,\n      \"en\": obj.enlabel.value,\n      \"de\": obj.delabel.value,\n      \"it\": obj.itlabel.value,\n      \"fr\": obj.frlabel.value\n     });\n    return \"\";\n  });\n  return objectNames;\n};\n\nexport const fetchAllCountries = () => {\n  return prefixes + 'SELECT DISTINCT\\n?isoCountry\\n?objectURI\\n?enlabel ?delabel ?itlabel ?frlabel\\nWHERE {\\n?isoCountry a country:ISO3166DefinedCountry;\\n country:referencesCountry ?objectURI.\\n?objectURI country:nameEnglish ?enlabel, ?delabel, ?itlabel, ?frlabel.\\n FILTER(lang(?enlabel)= \"en\") \\n FILTER(lang(?delabel)= \"de\") \\n FILTER(lang(?itlabel)= \"it\") \\n FILTER(lang(?frlabel)= \"fr\") \\n}'\n};\n\nexport const retrieveCountryValues = countriesObject => {\n  let countryNames = [];\n  countriesObject.map(obj => {\n    countryNames.push( { \n      \"@type\": obj.objectURI.value,\n      \"en\": obj.enlabel.value,\n      \"de\": obj.delabel.value,\n      \"it\": obj.itlabel.value,\n      \"fr\": obj.frlabel.value\n     });\n    return \"\";\n  });\n  return countryNames;\n};\n\nexport const fetchBaseProperties = (object) => {\n  return prefixes + 'SELECT DISTINCT\\n?object ?enlabel ?delabel ?itlabel ?frlabel\\nWHERE {\\n?object a ' + object + '.\\n ?object rdfs:label ?enlabel, ?delabel, ?itlabel, ?frlabel.\\nFILTER(lang(?enlabel) = \"en\")\\nFILTER(lang(?delabel) = \"de\")\\nFILTER(lang(?itlabel) = \"it\")\\nFILTER(lang(?frlabel) = \"fr\")}'\n};\n\nexport const retrieveBaseProperties = object => {\n  let objectNames = [];\n  object.map(obj => {\n    objectNames.push( { \n      \"@type\": obj.object.value,\n      \"en\": obj.enlabel.value,\n      \"de\": obj.delabel.value,\n      \"it\": obj.itlabel.value,\n      \"fr\": obj.frlabel.value\n     });\n    return \"\";\n  });\n  return objectNames;\n};\n\n// export const fetchAllRegions = () => {\n//   return prefixes + 'SELECT DISTINCT\\n?objectURI\\n?enlabel ?delabel ?itlabel ?frlabel\\nWHERE {\\n?objectURI a mybase0:RegionProperty;\\nrdfs:label ?enlabel ?delabel ?itlabel ?frlabel.\\n FILTER(lang(?enlabel)= \"en\") \\n FILTER(lang(?delabel)= \"de\") \\n FILTER(lang(?itlabel)= \"it\") \\n FILTER(lang(?frlabel)= \"fr\") \\n}'\n// };\n\n// export const retrieveRegionsValues = objt => {\n//   let objtNames = [];\n//   objt.map(obj => {\n//     objtNames.push({ \n//       \"@type\": obj.objectURI.value, \n//       \"en\": obj.enlabel.value,\n//       \"de\": obj.delabel.value,\n//       \"it\": obj.itlabel.value,\n//       \"fr\": obj.frlabel.value\n//     })\n//     return \"\";\n//   });\n//   return objtNames;\n// };\n\n// export const fetchAllGenders = () => {\n//   return prefixes + 'SELECT DISTINCT\\n?objectURI\\n?enlabel ?delabel ?itlabel ?frlabel\\nWHERE {\\n?objectURI a mybase0:GenderProperty;\\nrdfs:label ?enlabel ?delabel ?itlabel ?frlabel.\\n FILTER(lang(?enlabel)= \"en\") \\n FILTER(lang(?delabel)= \"de\") \\n FILTER(lang(?itlabel)= \"it\") \\n FILTER(lang(?frlabel)= \"fr\") \\n}'\n// };\n\n// export const retrieveGenderValues = gendersObject => {\n//   let genderNames = [];\n//   gendersObject.map(obj => {\n//     genderNames.push({ \n//       \"@type\": obj.objectURI.value, \n//       \"en\": obj.enlabel.value,\n//       \"de\": obj.delabel.value,\n//       \"it\": obj.itlabel.value,\n//       \"fr\": obj.frlabel.value\n//     })\n//     return \"\";\n//   });\n//   return genderNames;\n// };\n\n// export const fetchAllPatentStatuses = () => {\n//   return prefixes + 'SELECT DISTINCT\\n?objectURI\\n?enlabel ?delabel ?itlabel ?frlabel\\nWHERE {\\n?objectURI a mybase0:StatusProperty;\\nrdfs:label ?enlabel ?delabel ?itlabel ?frlabel.\\n FILTER(lang(?enlabel)= \"en\") \\n FILTER(lang(?delabel)= \"de\") \\n FILTER(lang(?itlabel)= \"it\") \\n FILTER(lang(?frlabel)= \"fr\") \\n}'\n// };\n\n// export const retrievePatentStatusValues = patentsObject => {\n//   let patentNames = [];\n//   patentsObject.map(obj => {\n//     patentNames.push({ \n//       \"@type\": obj.objectURI.value, \n//       \"en\": obj.enlabel.value,\n//       \"de\": obj.delabel.value,\n//       \"it\": obj.itlabel.value,\n//       \"fr\": obj.frlabel.value\n//     })\n//     return \"\";\n//   });\n//   return patentNames;\n// };\n\n// export const fetchAllIMTypes = () => {\n//   return prefixes + 'SELECT DISTINCT\\n?objectURI\\n?enlabel ?delabel ?itlabel ?frlabel\\nWHERE {\\n?objectURI a mybase0:InstantMessagingTypeProperty;\\nrdfs:label ?enlabel ?delabel ?itlabel ?frlabel.\\n FILTER(lang(?enlabel)= \"en\") \\n FILTER(lang(?delabel)= \"de\") \\n FILTER(lang(?itlabel)= \"it\") \\n FILTER(lang(?frlabel)= \"fr\") \\n}'\n// };\n\n// export const retrieveIMValues = IMObject => {\n//   let IMNames = [];\n//   IMObject.map(obj => {\n//     IMNames.push({ \n//       \"@type\": obj.objectURI.value, \n//       \"en\": obj.enlabel.value,\n//       \"de\": obj.delabel.value,\n//       \"it\": obj.itlabel.value,\n//       \"fr\": obj.frlabel.value\n//     })\n//     return \"\";\n//   });\n//   return IMNames;\n// };\n\n// export const fetchAllWebsiteTypes = () => {\n//   return prefixes + 'SELECT DISTINCT\\n?objectURI\\n?enlabel ?delabel ?itlabel ?frlabel\\nWHERE {\\n?objectURI a mybase0:WebsiteTypeProperty;\\nrdfs:label ?enlabel ?delabel ?itlabel ?frlabel.\\n FILTER(lang(?enlabel)= \"en\") \\n FILTER(lang(?delabel)= \"de\") \\n FILTER(lang(?itlabel)= \"it\") \\n FILTER(lang(?frlabel)= \"fr\") \\n}'\n// };\n\n// export const retrieveWebsiteValues = WebsiteObject => {\n//   let WebsiteNames = [];\n//   WebsiteObject.map(obj => {\n//     WebsiteNames.push({ \n//       \"@type\": obj.objectURI.value, \n//       \"en\": obj.enlabel.value,\n//       \"de\": obj.delabel.value,\n//       \"it\": obj.itlabel.value,\n//       \"fr\": obj.frlabel.value\n//     })\n//     return \"\";\n//   });\n//   return WebsiteNames;\n// };\n\n// export const fetchAllLanguageSkillsProficiencies = () => {\n//   return prefixes + 'SELECT DISTINCT\\n?objectURI\\n?enlabel ?delabel ?itlabel ?frlabel\\n?comment\\nWHERE {\\n?objectURI a mybase0:LanguageSkillProficiencyProperty  ;\\nrdfs:label ?enlabel ?delabel ?itlabel ?frlabel;\\nrdfs:comment ?comment. \\n FILTER(lang(?enlabel)= \"en\") \\n FILTER(lang(?delabel)= \"de\") \\n FILTER(lang(?itlabel)= \"it\") \\n FILTER(lang(?frlabel)= \"fr\") \\n}'\n// };\n\n// export const retrieveLngAssessment = lngAssessmentObj => {\n//   let lngAssessmentValues = [];\n//   lngAssessmentObj.map(obj => {\n//     lngAssessmentValues.push({ \n//       \"@type\": obj.objectURI.value, \n//       \"en\": obj.enlabel.value,\n//       \"de\": obj.delabel.value,\n//       \"it\": obj.itlabel.value,\n//       \"fr\": obj.frlabel.value \n//     })\n//     return \"\";\n//   });\n//   return lngAssessmentValues;\n// };\n\n// export const fetchAllTitleProperties = () => {\n//   return prefixes + 'SELECT DISTINCT\\n?objectURI\\n?enlabel ?delabel ?itlabel ?frlabel\\nWHERE {\\n?objectURI a mybase0:TitleProperty  ;\\nrdfs:label ?enlabel ?delabel ?itlabel ?frlabel.\\n FILTER(lang(?enlabel)= \"en\") \\n FILTER(lang(?delabel)= \"de\") \\n FILTER(lang(?itlabel)= \"it\") \\n FILTER(lang(?frlabel)= \"fr\") \\n}'\n// };\n\n// export const retrieveTitleValues = titlesObject => {\n//   let titleNames = [];\n//   titlesObject.map(obj => {\n//     titleNames.push({ \n//       \"@type\": obj.objectURI.value, \n//       \"en\": obj.enlabel.value,\n//       \"de\": obj.delabel.value,\n//       \"it\": obj.itlabel.value,\n//       \"fr\": obj.frlabel.value \n//     });\n//     return \"\";\n//   });\n//   return titleNames;\n// };\n\n// export const fetchAllCompanySizes = () => {\n//   return prefixes + 'SELECT DISTINCT\\n?objectURI\\n?enlabel ?delabel ?itlabel ?frlabel\\nWHERE {\\n?objectURI a mybase0:CompanySize  ;\\nrdfs:label ?enlabel ?delabel ?itlabel ?frlabel.\\n FILTER(lang(?enlabel)= \"en\") \\n FILTER(lang(?delabel)= \"de\") \\n FILTER(lang(?itlabel)= \"it\") \\n FILTER(lang(?frlabel)= \"fr\") \\n}'\n// };\n\n\n// export const retrieveCompanySizes = companySizesObj => {\n//   let companySizesValue = [];\n//   companySizesObj.map(obj => {\n//     companySizesValue.push({ \n//       \"@type\": obj.objectURI.value, \n//       \"en\": obj.enlabel.value,\n//       \"de\": obj.delabel.value,\n//       \"it\": obj.itlabel.value,\n//       \"fr\": obj.frlabel.value \n//     });\n//     return \"\";\n//   });\n//   return companySizesValue;\n// };\n\n// export const fetchAllCVJobModes = () => {\n//   return prefixes + 'SELECT DISTINCT\\n?objectURI\\n?enlabel ?delabel ?itlabel ?frlabel\\n WHERE {\\n?objectURI a mybase0:CVJobMode;\\nrdfs:label ?enlabel ?delabel ?itlabel ?frlabel.\\n FILTER(lang(?enlabel)= \"en\") \\n FILTER(lang(?delabel)= \"de\") \\n FILTER(lang(?itlabel)= \"it\") \\n FILTER(lang(?frlabel)= \"fr\") \\n}'\n// };\n\n// export const retrieveJobModes = modesObject => {\n//   let jobModeValues = [];\n//   modesObject.map(obj => {\n//     jobModeValues.push({ \n//       \"@type\": obj.objectURI.value, \n//       \"en\": obj.enlabel.value,\n//       \"de\": obj.delabel.value,\n//       \"it\": obj.itlabel.value,\n//       \"fr\": obj.frlabel.value \n//     });\n//     return \"\";\n//   });\n//   return jobModeValues;\n// };\n\n// export const fetchAllCVCareerLevels = () => {\n//   return prefixes + 'SELECT DISTINCT\\n?objectURI\\n?enlabel ?delabel ?itlabel ?frlabel\\nWHERE {\\n?objectURI a mybase0:CVCareerLevel  ;\\nrdfs:label ?enlabel ?delabel ?itlabel ?frlabel.\\n FILTER(lang(?enlabel)= \"en\") \\n FILTER(lang(?delabel)= \"de\") \\n FILTER(lang(?itlabel)= \"it\") \\n FILTER(lang(?frlabel)= \"fr\") \\n}'\n// };\n\n// export const retrieveCareerLevels = careerLevelsObject => {\n//   let careerValues = [];\n//   careerLevelsObject.map(obj => {\n//     careerValues.push({ \n//       \"@type\": obj.objectURI.value, \n//       \"en\": obj.enlabel.value,\n//       \"de\": obj.delabel.value,\n//       \"it\": obj.itlabel.value,\n//       \"fr\": obj.frlabel.value \n//     });\n//     return \"\";\n//   });\n//   return careerValues;\n// };\n\n// export const fetchAllEduDegrees = () => {\n//   return prefixes + 'SELECT DISTINCT\\n?objectURI\\n?enlabel ?delabel ?itlabel ?frlabel\\nWHERE {\\n?objectURI a mybase0:EduDegree  ;\\nrdfs:label ?enlabel ?delabel ?itlabel ?frlabel.\\n FILTER(lang(?enlabel)= \"en\") \\n FILTER(lang(?delabel)= \"de\") \\n FILTER(lang(?itlabel)= \"it\") \\n FILTER(lang(?frlabel)= \"fr\") \\n}'\n// };\n\n// export const retrieveDegreeValues = DegreesObj => {\n//   let degreesValues = [];\n//   DegreesObj.map(obj => {\n//     degreesValues.push({ \n//       \"@type\": obj.objectURI.value, \n//       \"en\": obj.enlabel.value,\n//       \"de\": obj.delabel.value,\n//       \"it\": obj.itlabel.value,\n//       \"fr\": obj.frlabel.value \n//     })\n//     return \"\";\n//   });\n//   return degreesValues;\n// };\n\n// export const fetchAllOtherCVInfoTypes = () => {\n//   return prefixes + 'SELECT DISTINCT\\n?objectURI\\n?enlabel ?delabel ?itlabel ?frlabel\\nWHERE {\\n?objectURI a mybase0:OtherCVInfoType  ;\\n rdfs:label ?enlabel ?delabel ?itlabel ?frlabel.\\n FILTER(lang(?enlabel)= \"en\") \\n FILTER(lang(?delabel)= \"de\") \\n FILTER(lang(?itlabel)= \"it\") \\n FILTER(lang(?frlabel)= \"fr\") \\n}'\n// };\n\n// export const retrieveOtherTypes = OthersObjs => {\n//   let typesNames = [];\n//   OthersObjs.map(obj => {\n//     typesNames.push({ \n//       \"@type\": obj.objectURI.value, \n//       \"en\": obj.enlabel.value,\n//       \"de\": obj.delabel.value,\n//       \"it\": obj.itlabel.value,\n//       \"fr\": obj.frlabel.value \n//     });\n//     return \"\";\n//   });\n//   return typesNames;\n// };\n\n// export const fetchAllIndustryTypes = () => {\n//   return prefixes + 'SELECT DISTINCT\\n?objectURI\\n?enlabel ?delabel ?itlabel ?frlabel\\nWHERE {\\n?objectURI a mybase0:IndustryType  ;\\n rdfs:label ?enlabel ?delabel ?itlabel ?frlabel.\\n FILTER(lang(?enlabel)= \"en\") \\n FILTER(lang(?delabel)= \"de\") \\n FILTER(lang(?itlabel)= \"it\") \\n FILTER(lang(?frlabel)= \"fr\") \\n}'\n// };\n\n// export const retrieveIndustryTypes = IndustryObjs => {\n//   let IndustryNames = [];\n//   IndustryObjs.map(obj => {\n//     IndustryNames.push({ \n//       \"@type\": obj.objectURI.value, \n//       \"en\": obj.enlabel.value,\n//       \"de\": obj.delabel.value,\n//       \"it\": obj.itlabel.value,\n//       \"fr\": obj.frlabel.value \n//     });\n//     return \"\";\n//   });\n//   return IndustryNames;\n// };\n\n"]},"metadata":{},"sourceType":"module"}