{"ast":null,"code":"import _objectSpread from \"/home/eelezi/thesis/rdf2resume/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/eelezi/thesis/rdf2resume/src/components/Dashboard/Forms/Modals/FormProject/ProjectModal.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Modal, Row, Col, Button } from \"react-bootstrap\";\nimport CustomTextarea from \"../../../../core/CustomTextarea\";\nimport CustomCheckbox from \"../../../../core/CustomCheckbox\";\nimport CustomInput from \"../../../../core/CustomInput\";\nimport { createProject, updateProject } from \"../../../../../actions\";\nimport { fetchMainPropertiess } from \"../../../../../actions/utilityActions\";\nimport { retrieveMainProperties } from \"../../../../../utilities/utilityQueries\";\nimport { cancelLabel, resetLabel, saveLabel, updateLabel, projectAddTitle, projectUpdateTitle } from \"../../../../../translations/translations\";\n\nclass ProjectModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      project: {\n        \"@type\": \"my0:Project\",\n        \"my0:projectName\": \"\",\n        \"my0:projectIsCurrent\": \"\",\n        \"my0:projectStartDate\": \"\",\n        \"my0:projectEndDate\": \"\",\n        \"my0:projectCreator\": \"\",\n        \"my0:projectURL\": \"\",\n        \"my0:projectDescription\": \"\"\n      }\n    };\n\n    this.setInitialValues = () => {\n      if (this.props.id !== null && this.props.isUpdate === true) {\n        let inputRef = this.props.initialValues;\n\n        let project = _objectSpread({}, this.state.project);\n\n        project[\"my0:projectName\"] = inputRef[\"my0:projectName\"];\n        project[\"my0:projectIsCurrent\"] = inputRef[\"my0:projectIsCurrent\"];\n        project[\"my0:projectStartDate\"] = inputRef[\"my0:projectStartDate\"];\n        project[\"my0:projectEndDate\"] = inputRef[\"my0:projectEndDate\"];\n        project[\"my0:projectCreator\"] = inputRef[\"my0:projectCreator\"];\n        project[\"my0:projectURL\"] = inputRef[\"my0:projectURL\"];\n        project[\"my0:projectDescription\"] = inputRef[\"my0:projectDescription\"];\n        this.setState({\n          project\n        });\n      }\n    };\n\n    this.clearForm = () => {\n      if (!this.props.isUpdate) {\n        this.setState({\n          project: {\n            \"@type\": \"my0:Project\",\n            \"my0:projectName\": \"\",\n            \"my0:projectIsCurrent\": \"\",\n            \"my0:projectStartDate\": \"\",\n            \"my0:projectEndDate\": \"\",\n            \"my0:projectCreator\": \"\",\n            \"my0:projectURL\": \"\",\n            \"my0:projectDescription\": \"\"\n          }\n        });\n      } else {\n        this.setInitialValues();\n      }\n    };\n\n    this.handleInputChange = e => {\n      let obj = _objectSpread({}, this.state.project);\n\n      let label = e.target.id;\n      obj[label] = e.target.value;\n      this.setState({\n        project: obj\n      });\n    };\n\n    this.handleCheckboxChange = e => {\n      let project = _objectSpread({}, this.state.project);\n\n      project[e.target.id] = e.target.checked;\n      this.setState({\n        project\n      });\n    };\n\n    this.handleSave = () => {\n      this.props.createProject(this.state.project);\n    };\n\n    this.handleUpdate = () => {\n      this.props.updateProject({\n        object: this.state.project,\n        index: this.props.id\n      });\n    };\n\n    this.handleRenderingSubmitButton = lang => {\n      let isDisabled = this.state.project[\"my0:projectName\"] === \"\";\n\n      if (!this.props.isUpdate) {\n        return React.createElement(Button, {\n          disabled: isDisabled,\n          type: \"submit\",\n          variant: \"primary\",\n          onClick: this.handleSave,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, saveLabel[lang]);\n      } else {\n        return React.createElement(Button, {\n          disabled: isDisabled,\n          type: \"submit\",\n          variant: \"primary\",\n          onClick: this.handleUpdate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, updateLabel[lang]);\n      }\n    };\n  }\n\n  componentWillMount() {\n    this.props.fetchMainPropertiess(\"my0:Project\");\n    this.setInitialValues();\n  }\n\n  findInArray(data, name) {\n    let length = data.length;\n\n    for (let i = 0; i < length; i++) {\n      let index = data[i][\"@type\"].indexOf(name);\n      let newlength = data[i][\"@type\"].length;\n\n      if (index >= 0 && index + name.length >= newlength) {\n        return i;\n      }\n    }\n  }\n\n  renderLabel(translated, name, lang) {\n    let index = this.findInArray(translated, name);\n\n    if (translated[index] === undefined || translated[index][lang] === undefined) {\n      return name;\n    } else {\n      return translated[index][lang];\n    }\n  }\n\n  render() {\n    let _this$state$project = this.state.project,\n        projectName = _this$state$project[\"my0:projectName\"],\n        projectIsCurrent = _this$state$project[\"my0:projectIsCurrent\"],\n        projectStartDate = _this$state$project[\"my0:projectStartDate\"],\n        projectEndDate = _this$state$project[\"my0:projectEndDate\"],\n        projectCreator = _this$state$project[\"my0:projectCreator\"],\n        projectURL = _this$state$project[\"my0:projectURL\"],\n        projectDescription = _this$state$project[\"my0:projectDescription\"];\n    let onHide = this.props.onHide;\n    let lang = this.props.language;\n    let translatedProps = this.props.translatedProps;\n    return React.createElement(Modal, {\n      show: this.props.show,\n      onHide: this.props.onHide,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      className: \"reference-modal\",\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      id: \"contained-modal-title-vcenter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, this.props.isUpdate ? projectUpdateTitle[lang] : projectAddTitle[lang])))), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: {\n        alignItems: \"flex-start\",\n        margin: \"0 40px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: {\n        justifyContent: \"flex-start\",\n        alignItems: \"flex-start\",\n        display: \"flex\",\n        margin: \"0px\",\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 9,\n      style: {\n        paddingLeft: \"0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:projectName\",\n      name: \"project\",\n      label: this.renderLabel(translatedProps, \"projectName\", lang) + \" *\",\n      type: \"text\",\n      value: projectName,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    })), React.createElement(Col, {\n      md: 3,\n      style: {\n        paddingRight: \"0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(CustomCheckbox, {\n      id: \"my0:projectIsCurrent\",\n      type: \"checkbox\",\n      label: this.renderLabel(translatedProps, \"projectIsCurrent\", lang),\n      checked: projectIsCurrent,\n      handleChange: this.handleCheckboxChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      style: {\n        justifyContent: \"flex-start\",\n        alignItems: \"flex-start\",\n        display: \"flex\",\n        margin: \"0px\",\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 6,\n      style: {\n        paddingLeft: \"0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:projectStartDate\",\n      name: \"project\",\n      label: this.renderLabel(translatedProps, \"projectStartDate\", lang),\n      type: \"date\",\n      value: projectStartDate,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    })), React.createElement(Col, {\n      md: 6,\n      style: {\n        paddingRight: \"0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:projectEndDate\",\n      name: \"project\",\n      label: this.renderLabel(translatedProps, \"projectEndDate\", lang),\n      type: \"date\",\n      value: projectEndDate,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        marginTop: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:projectCreator\",\n      name: \"project\",\n      label: this.renderLabel(translatedProps, \"projectCreator\", lang),\n      type: \"text\",\n      value: projectCreator,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        marginTop: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:projectURL\",\n      name: \"project\",\n      label: this.renderLabel(translatedProps, \"projectURL\", lang),\n      type: \"text\",\n      value: projectURL,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        marginTop: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(CustomTextarea, {\n      id: \"my0:projectDescription\",\n      name: \"project\",\n      label: this.renderLabel(translatedProps, \"projectDescription\", lang),\n      value: projectDescription,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    })))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, this.handleRenderingSubmitButton(lang), React.createElement(Button, {\n      className: \"btn-reset\",\n      onClick: this.clearForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, resetLabel[lang]), React.createElement(Button, {\n      variant: \"danger\",\n      onClick: onHide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, cancelLabel[lang])));\n  }\n\n}\n\nconst mapstateToProps = (state, ownProps) => {\n  return {\n    initialValues: state.cv[\"my0:hasProject\"][ownProps.id],\n    language: state.utility.language,\n    translatedProps: retrieveMainProperties(state.utility[\"my0:Project\"])\n  };\n};\n\nexport default connect(mapstateToProps, {\n  createProject,\n  updateProject,\n  fetchMainPropertiess\n})(ProjectModal);","map":{"version":3,"sources":["/home/eelezi/thesis/rdf2resume/src/components/Dashboard/Forms/Modals/FormProject/ProjectModal.jsx"],"names":["React","Component","connect","Modal","Row","Col","Button","CustomTextarea","CustomCheckbox","CustomInput","createProject","updateProject","fetchMainPropertiess","retrieveMainProperties","cancelLabel","resetLabel","saveLabel","updateLabel","projectAddTitle","projectUpdateTitle","ProjectModal","state","project","setInitialValues","props","id","isUpdate","inputRef","initialValues","setState","clearForm","handleInputChange","e","obj","label","target","value","handleCheckboxChange","checked","handleSave","handleUpdate","object","index","handleRenderingSubmitButton","lang","isDisabled","componentWillMount","findInArray","data","name","length","i","indexOf","newlength","renderLabel","translated","undefined","render","projectName","projectIsCurrent","projectStartDate","projectEndDate","projectCreator","projectURL","projectDescription","onHide","language","translatedProps","show","alignItems","margin","justifyContent","display","width","paddingLeft","paddingRight","marginTop","mapstateToProps","ownProps","cv","utility"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Modal, Row, Col, Button } from \"react-bootstrap\";\nimport CustomTextarea from \"../../../../core/CustomTextarea\";\nimport CustomCheckbox from \"../../../../core/CustomCheckbox\";\nimport CustomInput from \"../../../../core/CustomInput\";\nimport { createProject, updateProject } from \"../../../../../actions\";\nimport { fetchMainPropertiess } from \"../../../../../actions/utilityActions\";\nimport { retrieveMainProperties } from \"../../../../../utilities/utilityQueries\";\nimport {\n  cancelLabel,\n  resetLabel,\n  saveLabel,\n  updateLabel,\n  projectAddTitle,\n  projectUpdateTitle\n} from \"../../../../../translations/translations\";\n\nclass ProjectModal extends Component {\n  state = {\n    project: {\n      \"@type\": \"my0:Project\",\n      \"my0:projectName\": \"\",\n      \"my0:projectIsCurrent\": \"\",\n      \"my0:projectStartDate\": \"\",\n      \"my0:projectEndDate\": \"\",\n      \"my0:projectCreator\": \"\",\n      \"my0:projectURL\": \"\",\n      \"my0:projectDescription\": \"\"\n    }\n  };\n\n  componentWillMount() {\n    this.props.fetchMainPropertiess(\"my0:Project\");\n    this.setInitialValues();\n  }\n\n  setInitialValues = () => {\n    if (this.props.id !== null && this.props.isUpdate === true) {\n      let inputRef = this.props.initialValues;\n      let project = { ...this.state.project };\n      project[\"my0:projectName\"] = inputRef[\"my0:projectName\"];\n      project[\"my0:projectIsCurrent\"] = inputRef[\"my0:projectIsCurrent\"];\n      project[\"my0:projectStartDate\"] = inputRef[\"my0:projectStartDate\"];\n      project[\"my0:projectEndDate\"] = inputRef[\"my0:projectEndDate\"];\n      project[\"my0:projectCreator\"] = inputRef[\"my0:projectCreator\"];\n      project[\"my0:projectURL\"] = inputRef[\"my0:projectURL\"];\n      project[\"my0:projectDescription\"] = inputRef[\"my0:projectDescription\"];\n      this.setState({\n        project\n      });\n    }\n  };\n\n  clearForm = () => {\n    if (!this.props.isUpdate) {\n      this.setState({\n        project: {\n          \"@type\": \"my0:Project\",\n          \"my0:projectName\": \"\",\n          \"my0:projectIsCurrent\": \"\",\n          \"my0:projectStartDate\": \"\",\n          \"my0:projectEndDate\": \"\",\n          \"my0:projectCreator\": \"\",\n          \"my0:projectURL\": \"\",\n          \"my0:projectDescription\": \"\"\n        }\n      });\n    } else {\n      this.setInitialValues();\n    }\n  };\n\n  handleInputChange = e => {\n    let obj = { ...this.state.project };\n    let label = e.target.id;\n    obj[label] = e.target.value;\n    this.setState({\n      project: obj\n    });\n  };\n\n  handleCheckboxChange = e => {\n    let project = { ...this.state.project };\n    project[e.target.id] = e.target.checked;\n    this.setState({\n      project\n    });\n  };\n\n  handleSave = () => {\n    this.props.createProject(this.state.project);\n  };\n\n  handleUpdate = () => {\n    this.props.updateProject({\n      object: this.state.project,\n      index: this.props.id\n    });\n  };\n\n  findInArray(data, name) {\n    let length = data.length;\n    for (let i = 0; i < length; i++) {\n      let index = data[i][\"@type\"].indexOf(name);\n      let newlength = data[i][\"@type\"].length;\n      if (index >= 0 && index + name.length >= newlength) {\n        return i;\n      }\n    }\n  }\n\n  renderLabel(translated, name, lang) {\n    let index = this.findInArray(translated, name);\n    if (\n      translated[index] === undefined ||\n      translated[index][lang] === undefined\n    ) {\n      return name;\n    } else {\n      return translated[index][lang];\n    }\n  }\n\n  handleRenderingSubmitButton = lang => {\n    let isDisabled = this.state.project[\"my0:projectName\"] === \"\";\n    if (!this.props.isUpdate) {\n      return (\n        <Button\n          disabled={isDisabled}\n          type=\"submit\"\n          variant=\"primary\"\n          onClick={this.handleSave}\n        >\n          {saveLabel[lang]}\n        </Button>\n      );\n    } else {\n      return (\n        <Button\n          disabled={isDisabled}\n          type=\"submit\"\n          variant=\"primary\"\n          onClick={this.handleUpdate}\n        >\n          {updateLabel[lang]}\n        </Button>\n      );\n    }\n  };\n\n  render() {\n    let {\n      \"my0:projectName\": projectName,\n      \"my0:projectIsCurrent\": projectIsCurrent,\n      \"my0:projectStartDate\": projectStartDate,\n      \"my0:projectEndDate\": projectEndDate,\n      \"my0:projectCreator\": projectCreator,\n      \"my0:projectURL\": projectURL,\n      \"my0:projectDescription\": projectDescription\n    } = this.state.project;\n\n    let { onHide } = this.props;\n\n    let lang = this.props.language;\n\n    let { translatedProps } = this.props;\n\n    return (\n      <Modal\n        show={this.props.show}\n        onHide={this.props.onHide}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        className=\"reference-modal\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            <Row>\n              <Col md={12}>\n                {this.props.isUpdate\n                  ? projectUpdateTitle[lang]\n                  : projectAddTitle[lang]}\n              </Col>\n            </Row>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Row style={{ alignItems: \"flex-start\", margin: \"0 40px\" }}>\n            <Row\n              style={{\n                justifyContent: \"flex-start\",\n                alignItems: \"flex-start\",\n                display: \"flex\",\n                margin: \"0px\",\n                width: \"100%\"\n              }}\n            >\n              <Col md={9} style={{ paddingLeft: \"0\" }}>\n                <CustomInput\n                  id=\"my0:projectName\"\n                  name=\"project\"\n                  label={\n                    this.renderLabel(translatedProps, \"projectName\", lang) +\n                    \" *\"\n                  }\n                  type=\"text\"\n                  value={projectName}\n                  handleChange={this.handleInputChange}\n                />\n              </Col>\n              <Col md={3} style={{ paddingRight: \"0\" }}>\n                <CustomCheckbox\n                  id=\"my0:projectIsCurrent\"\n                  type=\"checkbox\"\n                  label={this.renderLabel(\n                    translatedProps,\n                    \"projectIsCurrent\",\n                    lang\n                  )}\n                  checked={projectIsCurrent}\n                  handleChange={this.handleCheckboxChange}\n                />\n              </Col>\n            </Row>\n            <Row\n              style={{\n                justifyContent: \"flex-start\",\n                alignItems: \"flex-start\",\n                display: \"flex\",\n                margin: \"0px\",\n                width: \"100%\"\n              }}\n            >\n              <Col md={6} style={{ paddingLeft: \"0\" }}>\n                <CustomInput\n                  id=\"my0:projectStartDate\"\n                  name=\"project\"\n                  label={this.renderLabel(\n                    translatedProps,\n                    \"projectStartDate\",\n                    lang\n                  )}\n                  type=\"date\"\n                  value={projectStartDate}\n                  handleChange={this.handleInputChange}\n                />\n              </Col>\n              <Col md={6} style={{ paddingRight: \"0\" }}>\n                <CustomInput\n                  id=\"my0:projectEndDate\"\n                  name=\"project\"\n                  label={this.renderLabel(\n                    translatedProps,\n                    \"projectEndDate\",\n                    lang\n                  )}\n                  type=\"date\"\n                  value={projectEndDate}\n                  handleChange={this.handleInputChange}\n                />\n              </Col>\n            </Row>\n            <div style={{ width: \"100%\", marginTop: \"10px\" }}>\n              <CustomInput\n                id=\"my0:projectCreator\"\n                name=\"project\"\n                label={this.renderLabel(\n                  translatedProps,\n                  \"projectCreator\",\n                  lang\n                )}\n                type=\"text\"\n                value={projectCreator}\n                handleChange={this.handleInputChange}\n              />\n            </div>\n            <div style={{ width: \"100%\", marginTop: \"10px\" }}>\n              <CustomInput\n                id=\"my0:projectURL\"\n                name=\"project\"\n                label={this.renderLabel(translatedProps, \"projectURL\", lang)}\n                type=\"text\"\n                value={projectURL}\n                handleChange={this.handleInputChange}\n              />\n            </div>\n            <div style={{ width: \"100%\", marginTop: \"10px\" }}>\n              <CustomTextarea\n                id=\"my0:projectDescription\"\n                name=\"project\"\n                label={this.renderLabel(\n                  translatedProps,\n                  \"projectDescription\",\n                  lang\n                )}\n                value={projectDescription}\n                handleChange={this.handleInputChange}\n              />\n            </div>\n          </Row>\n        </Modal.Body>\n        <Modal.Footer>\n          {this.handleRenderingSubmitButton(lang)}\n          <Button className=\"btn-reset\" onClick={this.clearForm}>\n            {resetLabel[lang]}\n          </Button>\n          <Button variant=\"danger\" onClick={onHide}>\n            {cancelLabel[lang]}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapstateToProps = (state, ownProps) => {\n  return {\n    initialValues: state.cv[\"my0:hasProject\"][ownProps.id],\n    language: state.utility.language,\n    translatedProps: retrieveMainProperties(state.utility[\"my0:Project\"])\n  };\n};\n\nexport default connect(\n  mapstateToProps,\n  { createProject, updateProject, fetchMainPropertiess }\n)(ProjectModal);\n"]},"metadata":{},"sourceType":"module"}