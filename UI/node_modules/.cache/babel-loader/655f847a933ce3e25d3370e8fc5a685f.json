{"ast":null,"code":"var _jsxFileName = \"/home/eelezi/thesis/rdf2resume/UI/src/components/Dashboard/Forms/Modals/FormEducation/EducationView.jsx\";\nimport React, { Component } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faTrash, faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { removeEducation } from \"../../../../../actions\";\nimport EducationModal from \"./EducationModal\";\nimport { fetchCountries, fetchEduDegrees } from \"../../../../../actions/utilityActions\";\nimport { retrieveCountryValues, retrieveBaseProperties } from \"../../../../../utilities/utilityQueries\";\nimport { now } from '../../../../../translations/translations';\nimport { renderPartialDate } from \"../../../../../utilities/utilityFunctions\";\n\nclass EducationView extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editMode: false,\n      key: 0\n    };\n\n    this.handleCloseEdit = () => {\n      let key = this.state.key;\n      this.setState({\n        editMode: false,\n        key: ++key\n      });\n    };\n\n    this.handleShowEdit = () => {\n      let key = this.state.key;\n      this.setState({\n        editMode: true,\n        key: ++key\n      });\n    };\n\n    this.handleUpdateClick = () => {\n      this.setState({\n        editMode: true\n      });\n    };\n  }\n\n  findInArray(data, name) {\n    let length = data.length;\n\n    for (let i = 0; i < length; i++) {\n      let index = data[i][\"@type\"].indexOf(name);\n      let newlength = data[i][\"@type\"].length;\n\n      if (index >= 0 && index + name.length >= newlength) {\n        return i;\n      }\n    }\n  }\n\n  renderLabel(translated, name, lang) {\n    let index = this.findInArray(translated, name);\n\n    if (translated[index] === undefined || translated[index][lang] === undefined) {\n      return name;\n    } else {\n      return translated[index][lang];\n    }\n  }\n\n  findTranslatedValue(data, lang) {\n    let length = data.length;\n\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@language\"] === lang) {\n        return data[i][\"@value\"];\n      }\n    }\n  }\n\n  render() {\n    let _this$props$education = this.props.educationObj,\n        eduStartDate = _this$props$education[\"my0:eduStartDate\"],\n        eduGradDate = _this$props$education[\"my0:eduGradDate\"],\n        degreeFieldOfStudy = _this$props$education[\"my0:degreeFieldOfStudy\"],\n        degree = _this$props$education[\"my0:degree\"],\n        eduDescription = _this$props$education[\"my0:eduDescription\"],\n        isEduCurrent = _this$props$education[\"my0:isEduCurrent\"],\n        studiedIn = _this$props$education[\"my0:studiedIn\"];\n    let orgName = studiedIn[\"my0:orgName\"],\n        orgAddress = studiedIn[\"my0:orgAddress\"],\n        orgWebsite = studiedIn[\"my0:orgWebsite\"];\n    let city = orgAddress[\"my0:city\"],\n        country = orgAddress[\"my0:country\"];\n    let current = now;\n    let lang = this.props.language;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 2,\n      style: {\n        paddingLeft: '0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, renderPartialDate(eduStartDate), \" - \", isEduCurrent ? current[lang] : renderPartialDate(eduGradDate))), React.createElement(Col, {\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: {\n        justifyContent: \"flex-start\",\n        alignItems: \"flex-start\",\n        display: \"flex\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, this.findTranslatedValue(degreeFieldOfStudy, lang), \" | \", this.renderLabel(this.props.eduDegrees, degree, lang))), React.createElement(Row, {\n      style: {\n        justifyContent: \"flex-start\",\n        alignItems: \"flex-start\",\n        display: \"flex\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faMapMarkerAlt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), \" \", \" \", \" \", React.createElement(\"a\", {\n      href: orgWebsite,\n      className: \"inline-link\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, this.findTranslatedValue(orgName, lang)), \" , \", this.findTranslatedValue(city, lang), \" \", \" \", \" \", this.renderLabel(this.props.countries, country, lang)))), React.createElement(Col, {\n      md: 2,\n      style: {\n        display: \"flex\",\n        justifyContent: \"flex-end\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faEdit,\n      onClick: () => this.handleUpdateClick(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(FontAwesomeIcon, {\n      icon: faTrash,\n      onClick: () => this.props.removeEducation(this.props.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(Col, {\n      md: 8,\n      style: {\n        paddingLeft: '0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, this.findTranslatedValue(eduDescription, lang)), React.createElement(Col, {\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    })))), React.createElement(EducationModal, {\n      show: this.state.editMode,\n      isUpdate: true,\n      id: this.props.id,\n      onHide: this.handleCloseEdit,\n      key: this.state.key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapstateToProps = state => {\n  return {\n    countries: retrieveCountryValues(state.utility.countryValues),\n    eduDegrees: retrieveBaseProperties(state.utility.eduDegreeValues),\n    language: state.utility.language\n  };\n};\n\nexport default connect(mapstateToProps, {\n  removeEducation,\n  fetchCountries,\n  fetchEduDegrees\n})(EducationView);","map":{"version":3,"sources":["/home/eelezi/thesis/rdf2resume/UI/src/components/Dashboard/Forms/Modals/FormEducation/EducationView.jsx"],"names":["React","Component","Row","Col","connect","FontAwesomeIcon","faEdit","faTrash","faMapMarkerAlt","removeEducation","EducationModal","fetchCountries","fetchEduDegrees","retrieveCountryValues","retrieveBaseProperties","now","renderPartialDate","EducationView","state","editMode","key","handleCloseEdit","setState","handleShowEdit","handleUpdateClick","findInArray","data","name","length","i","index","indexOf","newlength","renderLabel","translated","lang","undefined","findTranslatedValue","render","props","educationObj","eduStartDate","eduGradDate","degreeFieldOfStudy","degree","eduDescription","isEduCurrent","studiedIn","orgName","orgAddress","orgWebsite","city","country","current","language","paddingLeft","justifyContent","alignItems","display","eduDegrees","countries","id","mapstateToProps","utility","countryValues","eduDegreeValues"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faEdit,\n  faTrash,\n  faMapMarkerAlt\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { removeEducation } from \"../../../../../actions\";\nimport EducationModal from \"./EducationModal\";\nimport {\n  fetchCountries,\n  fetchEduDegrees\n} from \"../../../../../actions/utilityActions\";\nimport {\n  retrieveCountryValues,\n  retrieveBaseProperties\n} from \"../../../../../utilities/utilityQueries\";\nimport { now } from '../../../../../translations/translations';\nimport { renderPartialDate } from \"../../../../../utilities/utilityFunctions\";\n\nclass EducationView extends Component {\n  state = {\n    editMode: false,\n    key: 0\n  };\n\n  handleCloseEdit = () => {\n    let key = this.state.key\n    this.setState({ editMode: false, key: ++key });\n  };\n\n  handleShowEdit = () => {\n    let key = this.state.key\n    this.setState({ editMode: true, key: ++key });\n  };\n\n  handleUpdateClick = () => {\n    this.setState({\n      editMode: true\n    });\n  };\n\n  findInArray(data, name) {\n    let length = data.length;\n    for (let i = 0; i < length; i++) {\n      let index = data[i][\"@type\"].indexOf(name);\n      let newlength = data[i][\"@type\"].length;\n      if (index >= 0 && index + name.length >= newlength) {\n        return i;\n      }\n    }\n  }\n\n  renderLabel(translated, name, lang) {\n    let index = this.findInArray(translated, name);\n    if (\n      translated[index] === undefined ||\n      translated[index][lang] === undefined\n    ) {\n      return name;\n    } else {\n      return translated[index][lang];\n    }\n  }\n\n  findTranslatedValue(data, lang) {\n    let length = data.length;\n    for (let i = 0; i < length; i++) {\n      if (data[i][\"@language\"] === lang) {\n        return data[i][\"@value\"];\n      }\n    }\n  }\n\n  render() {\n\n    let {\n      \"my0:eduStartDate\": eduStartDate,\n      \"my0:eduGradDate\": eduGradDate,\n      \"my0:degreeFieldOfStudy\": degreeFieldOfStudy,\n      \"my0:degree\": degree,\n      // \"my0:eduMinor\" : eduMinor,\n      \"my0:eduDescription\": eduDescription,\n      \"my0:isEduCurrent\": isEduCurrent,\n      \"my0:studiedIn\": studiedIn\n    } = this.props.educationObj;\n\n    let {\n      \"my0:orgName\": orgName,\n      \"my0:orgAddress\": orgAddress,\n      \"my0:orgWebsite\": orgWebsite,\n    } = studiedIn;\n\n    let {\n      \"my0:city\": city,\n      \"my0:country\": country\n      // \"my0:street\" : street,\n      // \"my0:postalCode\" : postalCode,\n    } = orgAddress;\n\n    let current = now;\n\n    let lang = this.props.language;\n\n\n    return (\n      <React.Fragment>\n        <div className=\"card\">\n          <div className=\"card-header\">\n            <Col md={2} style={{ paddingLeft: '0' }}>\n              <p>\n                {renderPartialDate(eduStartDate)} - {isEduCurrent ? current[lang] : renderPartialDate(eduGradDate)}\n              </p>\n            </Col>\n            <Col md={6}>\n              <Row\n                style={{\n                  justifyContent: \"flex-start\",\n                  alignItems: \"flex-start\",\n                  display: \"flex\"\n                }}\n              >\n                <b>\n                  {this.findTranslatedValue(degreeFieldOfStudy, lang)} | {this.renderLabel(this.props.eduDegrees, degree, lang)}\n                </b>\n              </Row>\n              <Row\n                style={{\n                  justifyContent: \"flex-start\",\n                  alignItems: \"flex-start\",\n                  display: \"flex\"\n                }}\n              >\n                <b>\n                  <FontAwesomeIcon icon={faMapMarkerAlt} /> {` `}\n                  {` `}\n                  <a\n                    href={orgWebsite}\n                    className=\"inline-link\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {this.findTranslatedValue(orgName, lang)}\n                  </a>{\" , \"}\n                  {\n                    this.findTranslatedValue(city, lang)\n                  } {` `}{\" \"}\n                  {this.renderLabel(this.props.countries, country, lang)}\n                </b>\n              </Row>\n            </Col>\n            <Col md={2} style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n              <FontAwesomeIcon\n                icon={faEdit}\n                onClick={() => this.handleUpdateClick()}\n              />\n              <FontAwesomeIcon\n                icon={faTrash}\n                onClick={() => this.props.removeEducation(this.props.id)}\n              />\n            </Col>\n          </div>\n          <div className=\"card-body\">\n            <Row>\n              <Col md={2}>\n              </Col>\n              <Col md={8} style={{ paddingLeft: '0' }}>\n                {this.findTranslatedValue(eduDescription, lang)}\n              </Col>\n              <Col md={2}>\n              </Col>\n            </Row>\n          </div>\n        </div>\n        <EducationModal\n          show={this.state.editMode}\n          isUpdate={true}\n          id={this.props.id}\n          onHide={this.handleCloseEdit}\n          key={this.state.key}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapstateToProps = (state) => {\n  return {\n    countries: retrieveCountryValues(state.utility.countryValues),\n    eduDegrees: retrieveBaseProperties(state.utility.eduDegreeValues),\n    language: state.utility.language\n  };\n};\n\nexport default connect(\n  mapstateToProps,\n  { removeEducation, fetchCountries, fetchEduDegrees }\n)(EducationView);\n"]},"metadata":{},"sourceType":"module"}