{"ast":null,"code":"import _objectSpread from \"/home/eelezi/thesis/rdf2resume/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/eelezi/thesis/rdf2resume/src/components/Dashboard/Forms/Modals/FormPublication/PublicationModal.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Modal, Row, Col, Button } from \"react-bootstrap\";\nimport CustomTextarea from \"../../../../core/CustomTextarea\";\nimport CustomInput from \"../../../../core/CustomInput\";\nimport { createPublication, updatePublication } from \"../../../../../actions\";\nimport { fetchMainPropertiess } from \"../../../../../actions/utilityActions\";\nimport { retrieveMainProperties } from \"../../../../../utilities/utilityQueries\";\nimport { cancelLabel, resetLabel, saveLabel, updateLabel, publicationUpdateTitle, publicationAddTitle } from \"../../../../../translations/translations\";\n\nclass PublicationModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      publication: {\n        \"@type\": \"my0:Publication\",\n        \"my0:publicationTitle\": \"\",\n        \"my0:publicationPublisher\": \"\",\n        \"my0:publicationDate\": \"\",\n        \"my0:publicationAuthor\": \"\",\n        \"my0:publicationURL\": \"\",\n        \"my0:publicationDescription\": \"\"\n      }\n    };\n\n    this.setInitialValues = () => {\n      if (this.props.id !== null && this.props.isUpdate === true) {\n        let inputRef = this.props.initialValues;\n\n        let publication = _objectSpread({}, this.state.publication);\n\n        publication[\"my0:publicationTitle\"] = inputRef[\"my0:publicationTitle\"];\n        publication[\"my0:publicationPublisher\"] = inputRef[\"my0:publicationPublisher\"];\n        publication[\"my0:publicationDate\"] = inputRef[\"my0:publicationDate\"];\n        publication[\"my0:publicationAuthor\"] = inputRef[\"my0:publicationAuthor\"];\n        publication[\"my0:publicationURL\"] = inputRef[\"my0:publicationURL\"];\n        publication[\"my0:publicationDescription\"] = inputRef[\"my0:publicationDescription\"];\n        this.setState({\n          publication\n        });\n      }\n    };\n\n    this.clearForm = () => {\n      if (!this.props.isUpdate) {\n        this.setState({\n          publication: {\n            \"@type\": \"my0:Publication\",\n            \"my0:publicationTitle\": \"\",\n            \"my0:publicationPublisher\": \"\",\n            \"my0:publicationDate\": \"\",\n            \"my0:publicationAuthor\": \"\",\n            \"my0:publicationURL\": \"\",\n            \"my0:publicationDescription\": \"\"\n          }\n        });\n      } else {\n        this.setInitialValues();\n      }\n    };\n\n    this.handleInputChange = e => {\n      let obj = _objectSpread({}, this.state.publication);\n\n      let label = e.target.id;\n      obj[label] = e.target.value;\n      this.setState({\n        publication: obj\n      });\n    };\n\n    this.handleSave = () => {\n      this.props.createPublication(this.state.publication);\n    };\n\n    this.handleUpdate = () => {\n      this.props.updatePublication({\n        object: this.state.publication,\n        index: this.props.id\n      });\n    };\n\n    this.handleRenderingSubmitButton = lang => {\n      let disabled = this.state.publication[\"my0:publicationTitle\"] === \"\";\n\n      if (!this.props.isUpdate) {\n        return React.createElement(Button, {\n          disabled: disabled,\n          type: \"submit\",\n          variant: \"primary\",\n          onClick: this.handleSave,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, saveLabel[lang]);\n      } else {\n        return React.createElement(Button, {\n          disabled: disabled,\n          type: \"submit\",\n          variant: \"primary\",\n          onClick: this.handleUpdate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, updateLabel[lang]);\n      }\n    };\n  }\n\n  componentWillMount() {\n    this.props.fetchMainPropertiess(\"my0:Publication\");\n    this.setInitialValues();\n  }\n\n  findInArray(data, name) {\n    let length = data.length;\n\n    for (let i = 0; i < length; i++) {\n      let index = data[i][\"@type\"].indexOf(name);\n      let newlength = data[i][\"@type\"].length;\n\n      if (index >= 0 && index + name.length >= newlength) {\n        return i;\n      }\n    }\n  }\n\n  renderLabel(translated, name, lang) {\n    let index = this.findInArray(translated, name);\n\n    if (translated[index] === undefined || translated[index][lang] === undefined) {\n      return name;\n    } else {\n      return translated[index][lang];\n    }\n  }\n\n  render() {\n    let _this$state$publicati = this.state.publication,\n        publicationTitle = _this$state$publicati[\"my0:publicationTitle\"],\n        publicationPublisher = _this$state$publicati[\"my0:publicationPublisher\"],\n        publicationDate = _this$state$publicati[\"my0:publicationDate\"],\n        publicationAuthor = _this$state$publicati[\"my0:publicationAuthor\"],\n        publicationURL = _this$state$publicati[\"my0:publicationURL\"],\n        publicationDescription = _this$state$publicati[\"my0:publicationDescription\"];\n    let onHide = this.props.onHide;\n    let lang = this.props.language;\n    let translatedProps = this.props.translatedProps;\n    return React.createElement(Modal, {\n      show: this.props.show,\n      onHide: this.props.onHide,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      className: \"reference-modal\",\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      id: \"contained-modal-title-vcenter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, this.props.isUpdate ? publicationUpdateTitle[lang] : publicationAddTitle[lang])))), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: {\n        alignItems: \"flex-start\",\n        margin: \"0 40px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: {\n        justifyContent: \"flex-start\",\n        alignItems: \"flex-start\",\n        display: \"flex\",\n        margin: \"0px\",\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 9,\n      style: {\n        paddingLeft: \"0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:publicationTitle\",\n      name: \"publication\",\n      label: this.renderLabel(translatedProps, \"publicationTitle\", lang) + \" *\",\n      type: \"text\",\n      value: publicationTitle,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    })), React.createElement(Col, {\n      md: 3,\n      style: {\n        paddingRight: \"0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:publicationDate\",\n      name: \"publication\",\n      label: this.renderLabel(translatedProps, \"publicationDate\", lang),\n      type: \"date\",\n      value: publicationDate,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        marginTop: \"5px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:publicationPublisher\",\n      name: \"publication\",\n      label: this.renderLabel(translatedProps, \"publicationPublisher\", lang),\n      type: \"text\",\n      value: publicationPublisher,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        marginTop: \"5px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:publicationAuthor\",\n      name: \"publication\",\n      label: this.renderLabel(translatedProps, \"publicationAuthor\", lang),\n      type: \"text\",\n      value: publicationAuthor,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        marginTop: \"5px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:publicationURL\",\n      name: \"publication\",\n      label: this.renderLabel(translatedProps, \"publicationURL\", lang),\n      value: publicationURL,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        marginTop: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(CustomTextarea, {\n      id: \"my0:publicationDescription\",\n      name: \"publication\",\n      label: this.renderLabel(translatedProps, \"publicationDescription\", lang),\n      value: publicationDescription,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    })))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, this.handleRenderingSubmitButton(lang), React.createElement(Button, {\n      className: \"btn-reset\",\n      onClick: this.clearForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, resetLabel[lang]), React.createElement(Button, {\n      variant: \"danger\",\n      onClick: onHide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, cancelLabel[lang])));\n  }\n\n}\n\nconst mapstateToProps = (state, ownProps) => {\n  return {\n    initialValues: state.cv[\"my0:hasPublication\"][ownProps.id],\n    language: state.utility.language,\n    translatedProps: retrieveMainProperties(state.utility[\"my0:Publication\"])\n  };\n};\n\nexport default connect(mapstateToProps, {\n  createPublication,\n  updatePublication,\n  fetchMainPropertiess\n})(PublicationModal);","map":{"version":3,"sources":["/home/eelezi/thesis/rdf2resume/src/components/Dashboard/Forms/Modals/FormPublication/PublicationModal.jsx"],"names":["React","Component","connect","Modal","Row","Col","Button","CustomTextarea","CustomInput","createPublication","updatePublication","fetchMainPropertiess","retrieveMainProperties","cancelLabel","resetLabel","saveLabel","updateLabel","publicationUpdateTitle","publicationAddTitle","PublicationModal","state","publication","setInitialValues","props","id","isUpdate","inputRef","initialValues","setState","clearForm","handleInputChange","e","obj","label","target","value","handleSave","handleUpdate","object","index","handleRenderingSubmitButton","lang","disabled","componentWillMount","findInArray","data","name","length","i","indexOf","newlength","renderLabel","translated","undefined","render","publicationTitle","publicationPublisher","publicationDate","publicationAuthor","publicationURL","publicationDescription","onHide","language","translatedProps","show","alignItems","margin","justifyContent","display","width","paddingLeft","paddingRight","marginTop","mapstateToProps","ownProps","cv","utility"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Modal, Row, Col, Button } from \"react-bootstrap\";\nimport CustomTextarea from \"../../../../core/CustomTextarea\";\nimport CustomInput from \"../../../../core/CustomInput\";\nimport { createPublication, updatePublication } from \"../../../../../actions\";\nimport { fetchMainPropertiess } from \"../../../../../actions/utilityActions\";\nimport { retrieveMainProperties } from \"../../../../../utilities/utilityQueries\";\nimport {\n  cancelLabel,\n  resetLabel,\n  saveLabel,\n  updateLabel,\n  publicationUpdateTitle,\n  publicationAddTitle\n} from \"../../../../../translations/translations\";\n\nclass PublicationModal extends Component {\n  state = {\n    publication: {\n      \"@type\": \"my0:Publication\",\n      \"my0:publicationTitle\": \"\",\n      \"my0:publicationPublisher\": \"\",\n      \"my0:publicationDate\": \"\",\n      \"my0:publicationAuthor\": \"\",\n      \"my0:publicationURL\": \"\",\n      \"my0:publicationDescription\": \"\"\n    }\n  };\n\n  componentWillMount() {\n    this.props.fetchMainPropertiess(\"my0:Publication\");\n    this.setInitialValues();\n  }\n\n  setInitialValues = () => {\n    if (this.props.id !== null && this.props.isUpdate === true) {\n      let inputRef = this.props.initialValues;\n      let publication = { ...this.state.publication };\n      publication[\"my0:publicationTitle\"] = inputRef[\"my0:publicationTitle\"];\n      publication[\"my0:publicationPublisher\"] =\n        inputRef[\"my0:publicationPublisher\"];\n      publication[\"my0:publicationDate\"] = inputRef[\"my0:publicationDate\"];\n      publication[\"my0:publicationAuthor\"] = inputRef[\"my0:publicationAuthor\"];\n      publication[\"my0:publicationURL\"] = inputRef[\"my0:publicationURL\"];\n      publication[\"my0:publicationDescription\"] =\n        inputRef[\"my0:publicationDescription\"];\n      this.setState({\n        publication\n      });\n    }\n  };\n\n  clearForm = () => {\n    if (!this.props.isUpdate) {\n      this.setState({\n        publication: {\n          \"@type\": \"my0:Publication\",\n          \"my0:publicationTitle\": \"\",\n          \"my0:publicationPublisher\": \"\",\n          \"my0:publicationDate\": \"\",\n          \"my0:publicationAuthor\": \"\",\n          \"my0:publicationURL\": \"\",\n          \"my0:publicationDescription\": \"\"\n        }\n      });\n    } else {\n      this.setInitialValues();\n    }\n  };\n\n  handleInputChange = e => {\n    let obj = { ...this.state.publication };\n    let label = e.target.id;\n    obj[label] = e.target.value;\n    this.setState({\n      publication: obj\n    });\n  };\n\n  handleSave = () => {\n    this.props.createPublication(this.state.publication);\n  };\n\n  handleUpdate = () => {\n    this.props.updatePublication({\n      object: this.state.publication,\n      index: this.props.id\n    });\n  };\n\n  findInArray(data, name) {\n    let length = data.length;\n    for (let i = 0; i < length; i++) {\n      let index = data[i][\"@type\"].indexOf(name);\n      let newlength = data[i][\"@type\"].length;\n      if (index >= 0 && index + name.length >= newlength) {\n        return i;\n      }\n    }\n  }\n\n  renderLabel(translated, name, lang) {\n    let index = this.findInArray(translated, name);\n    if (\n      translated[index] === undefined ||\n      translated[index][lang] === undefined\n    ) {\n      return name;\n    } else {\n      return translated[index][lang];\n    }\n  }\n\n  handleRenderingSubmitButton = lang => {\n    let disabled = this.state.publication[\"my0:publicationTitle\"] === \"\";\n    if (!this.props.isUpdate) {\n      return (\n        <Button\n          disabled={disabled}\n          type=\"submit\"\n          variant=\"primary\"\n          onClick={this.handleSave}\n        >\n          {saveLabel[lang]}\n        </Button>\n      );\n    } else {\n      return (\n        <Button\n          disabled={disabled}\n          type=\"submit\"\n          variant=\"primary\"\n          onClick={this.handleUpdate}\n        >\n          {updateLabel[lang]}\n        </Button>\n      );\n    }\n  };\n\n  render() {\n    let {\n      \"my0:publicationTitle\": publicationTitle,\n      \"my0:publicationPublisher\": publicationPublisher,\n      \"my0:publicationDate\": publicationDate,\n      \"my0:publicationAuthor\": publicationAuthor,\n      \"my0:publicationURL\": publicationURL,\n      \"my0:publicationDescription\": publicationDescription\n    } = this.state.publication;\n\n    let { onHide } = this.props;\n\n    let lang = this.props.language;\n\n    let { translatedProps } = this.props;\n\n    return (\n      <Modal\n        show={this.props.show}\n        onHide={this.props.onHide}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        className=\"reference-modal\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            <Row>\n              <Col md={12}>\n                {this.props.isUpdate\n                  ? publicationUpdateTitle[lang]\n                  : publicationAddTitle[lang]}\n              </Col>\n            </Row>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Row style={{ alignItems: \"flex-start\", margin: \"0 40px\" }}>\n            <Row\n              style={{\n                justifyContent: \"flex-start\",\n                alignItems: \"flex-start\",\n                display: \"flex\",\n                margin: \"0px\",\n                width: \"100%\"\n              }}\n            >\n              <Col md={9} style={{ paddingLeft: \"0\" }}>\n                <CustomInput\n                  id=\"my0:publicationTitle\"\n                  name=\"publication\"\n                  label={\n                    this.renderLabel(\n                      translatedProps,\n                      \"publicationTitle\",\n                      lang\n                    ) + \" *\"\n                  }\n                  type=\"text\"\n                  value={publicationTitle}\n                  handleChange={this.handleInputChange}\n                />\n              </Col>\n              <Col md={3} style={{ paddingRight: \"0\" }}>\n                <CustomInput\n                  id=\"my0:publicationDate\"\n                  name=\"publication\"\n                  label={this.renderLabel(\n                    translatedProps,\n                    \"publicationDate\",\n                    lang\n                  )}\n                  type=\"date\"\n                  value={publicationDate}\n                  handleChange={this.handleInputChange}\n                />\n              </Col>\n            </Row>\n            <div style={{ width: \"100%\", marginTop: \"5px\" }}>\n              <CustomInput\n                id=\"my0:publicationPublisher\"\n                name=\"publication\"\n                label={this.renderLabel(\n                  translatedProps,\n                  \"publicationPublisher\",\n                  lang\n                )}\n                type=\"text\"\n                value={publicationPublisher}\n                handleChange={this.handleInputChange}\n              />\n            </div>\n            <div style={{ width: \"100%\", marginTop: \"5px\" }}>\n              <CustomInput\n                id=\"my0:publicationAuthor\"\n                name=\"publication\"\n                label={this.renderLabel(\n                  translatedProps,\n                  \"publicationAuthor\",\n                  lang\n                )}\n                type=\"text\"\n                value={publicationAuthor}\n                handleChange={this.handleInputChange}\n              />\n            </div>\n            <div style={{ width: \"100%\", marginTop: \"5px\" }}>\n              <CustomInput\n                id=\"my0:publicationURL\"\n                name=\"publication\"\n                label={this.renderLabel(\n                  translatedProps,\n                  \"publicationURL\",\n                  lang\n                )}\n                value={publicationURL}\n                handleChange={this.handleInputChange}\n              />\n            </div>\n            <div style={{ width: \"100%\", marginTop: \"10px\" }}>\n              <CustomTextarea\n                id=\"my0:publicationDescription\"\n                name=\"publication\"\n                label={this.renderLabel(\n                  translatedProps,\n                  \"publicationDescription\",\n                  lang\n                )}\n                value={publicationDescription}\n                handleChange={this.handleInputChange}\n              />\n            </div>\n          </Row>\n        </Modal.Body>\n        <Modal.Footer>\n          {this.handleRenderingSubmitButton(lang)}\n          <Button className=\"btn-reset\" onClick={this.clearForm}>\n            {resetLabel[lang]}\n          </Button>\n          <Button variant=\"danger\" onClick={onHide}>\n            {cancelLabel[lang]}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapstateToProps = (state, ownProps) => {\n  return {\n    initialValues: state.cv[\"my0:hasPublication\"][ownProps.id],\n    language: state.utility.language,\n    translatedProps: retrieveMainProperties(state.utility[\"my0:Publication\"])\n  };\n};\n\nexport default connect(\n  mapstateToProps,\n  { createPublication, updatePublication, fetchMainPropertiess }\n)(PublicationModal);\n"]},"metadata":{},"sourceType":"module"}