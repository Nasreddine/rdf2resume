{"ast":null,"code":"import _objectSpread from \"/home/eelezi/thesis/rdf2resume/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/eelezi/thesis/rdf2resume/src/components/Dashboard/Forms/Modals/FormReference/ReferenceModal.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Modal, Button, Row, Col } from \"react-bootstrap\";\nimport { Combobox } from \"react-widgets\";\nimport CustomInput from \"../../../../core/CustomInput\";\nimport { createReference, updateReference } from \"../../../../../actions\";\nimport { fetchCountries, fetchTitleProperties, fetchMainPropertiess } from \"../../../../../actions/utilityActions\";\nimport { retrieveCountryValues, retrieveMainProperties, retrieveBaseProperties } from \"../../../../../utilities/utilityQueries\";\nimport { cancelLabel, resetLabel, saveLabel, updateLabel, referenceAddTitle, referenceUpdateTitle } from \"../../../../../translations/translations\";\n\nclass ReferenceModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      reference: {\n        \"@type\": \"my0:Reference\",\n        \"my0:referenceBy\": {\n          \"@type\": \"my0:Person\",\n          \"my0:title\": \"\",\n          \"my0:firstName\": \"\",\n          \"my0:lastName\": \"\",\n          \"my0:address\": {\n            \"@type\": \"my0:Address\",\n            \"my0:city\": \"\",\n            \"my0:country\": \"\",\n            \"my0:street\": \"\",\n            \"my0:postalCode\": \"\"\n          },\n          \"my0:phoneNumber\": \"\",\n          \"my0:email\": \"\",\n          \"my0:currentJob\": {\n            \"@type\": \"my0:WorkHistory\",\n            \"my0:jobTitle\": \"\",\n            \"my0:employedIn\": {\n              \"@type\": \"my0:Company\",\n              \"my0:organizationName\": \"\"\n            }\n          }\n        }\n      }\n    };\n\n    this.setInitialValues = () => {\n      if (this.props.id !== null && this.props.isUpdate === true) {\n        let inputRef = this.props.initialValues;\n\n        let reference = _objectSpread({}, this.state.reference);\n\n        reference[\"my0:referenceBy\"] = inputRef[\"my0:referenceBy\"];\n        this.setState({\n          reference\n        });\n      }\n    };\n\n    this.clearForm = () => {\n      if (!this.props.isUpdate) {\n        this.setState({\n          reference: {\n            \"@type\": \"my0:Reference\",\n            \"my0:referenceBy\": {\n              \"@type\": \"my0:Person\",\n              \"my0:title\": \"\",\n              \"my0:firstName\": \"\",\n              \"my0:lastName\": \"\",\n              \"my0:address\": {\n                \"@type\": \"my0:Address\",\n                \"my0:city\": \"\",\n                \"my0:country\": \"\",\n                \"my0:street\": \"\",\n                \"my0:postalCode\": \"\"\n              },\n              \"my0:hasTelephoneNumber\": \"\",\n              \"my0:email\": \"\",\n              \"my0:currentJob\": {\n                \"@type\": \"my0:WorkHistory\",\n                \"my0:jobTitle\": \"\",\n                \"my0:employedIn\": {\n                  \"@type\": \"my0:Company\",\n                  \"my0:organizationName\": \"\"\n                }\n              }\n            }\n          }\n        });\n      } else {\n        this.setInitialValues();\n      }\n    };\n\n    this.handleSelectChange = (value, id, name) => {\n      let obj = _objectSpread({}, this.state.reference);\n\n      let label = id;\n\n      if (name === \"person\") {\n        obj[\"my0:referenceBy\"][label] = value[\"@type\"];\n      } else if (name === \"address\") {\n        obj[\"my0:referenceBy\"][\"my0:address\"][label] = value[\"@type\"];\n      } else if (name === \"workHistory\") {\n        obj[\"my0:referenceBy\"][\"my0:currentJob\"][label] = value[\"@type\"];\n      } else if (name === \"organization\") {\n        obj[\"my0:referenceBy\"][\"my0:currentJob\"][\"my0:employedIn\"][label] = value[\"@type\"];\n      } else {\n        obj[label] = value[\"@type\"];\n      }\n\n      this.setState({\n        reference: obj\n      });\n    };\n\n    this.handleInputChange = e => {\n      let obj = _objectSpread({}, this.state.reference);\n\n      let label = e.target.id;\n\n      if (e.target.name === \"person\") {\n        obj[\"my0:referenceBy\"][label] = e.target.value;\n      } else if (e.target.name === \"address\") {\n        obj[\"my0:referenceBy\"][\"my0:address\"][label] = e.target.value;\n      } else if (e.target.name === \"workHistory\") {\n        obj[\"my0:referenceBy\"][\"my0:currentJob\"][label] = e.target.value;\n      } else if (e.target.name === \"organization\") {\n        obj[\"my0:referenceBy\"][\"my0:currentJob\"][\"my0:employedIn\"][label] = e.target.value;\n      } else {\n        obj[label] = e.target.value;\n      }\n\n      this.setState({\n        reference: obj\n      });\n    };\n\n    this.handleSave = () => {\n      this.props.createReference(this.state.reference);\n    };\n\n    this.handleUpdate = () => {\n      this.props.updateReference({\n        object: this.state.reference,\n        index: this.props.id\n      });\n    };\n\n    this.handleRenderingSubmitButton = lang => {\n      let disabled = this.state.reference[\"my0:referenceBy\"][\"my0:firstName\"] === \"\" || this.state.reference[\"my0:referenceBy\"][\"my0:lastName\"] === \"\" || this.state.reference[\"my0:referenceBy\"][\"my0:currentJob\"][\"my0:jobTitle\"] === \"\" || this.state.reference[\"my0:referenceBy\"][\"my0:currentJob\"][\"my0:employedIn\"][\"my0:organizationName\"] === \"\";\n\n      if (!this.props.isUpdate) {\n        return React.createElement(Button, {\n          disabled: disabled,\n          type: \"submit\",\n          variant: \"primary\",\n          onClick: this.handleSave,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, saveLabel[lang]);\n      } else {\n        return React.createElement(Button, {\n          disabled: disabled,\n          type: \"submit\",\n          variant: \"primary\",\n          onClick: this.handleUpdate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, updateLabel[lang]);\n      }\n    };\n  }\n\n  componentWillMount() {\n    this.props.fetchCountries();\n    this.props.fetchTitleProperties();\n    this.props.fetchMainPropertiess(\"my0:Person\");\n    this.props.fetchMainPropertiess(\"my0:Organization\");\n    this.props.fetchMainPropertiess(\"my0:Address\");\n    this.props.fetchMainPropertiess(\"my0:WorkHistory\");\n    this.setInitialValues();\n  }\n\n  findInArray(data, name) {\n    let length = data.length;\n\n    for (let i = 0; i < length; i++) {\n      let index = data[i][\"@type\"].indexOf(name);\n      let newlength = data[i][\"@type\"].length;\n\n      if (index >= 0 && index + name.length >= newlength) {\n        return i;\n      }\n    }\n  }\n\n  renderLabel(translated, name, lang) {\n    let index = this.findInArray(translated, name);\n\n    if (translated[index] === undefined || translated[index][lang] === undefined) {\n      return name;\n    } else {\n      return translated[index][lang];\n    }\n  }\n\n  render() {\n    let _this$state$reference = this.state.reference[\"my0:referenceBy\"],\n        title = _this$state$reference[\"my0:title\"],\n        firstName = _this$state$reference[\"my0:firstName\"],\n        lastName = _this$state$reference[\"my0:lastName\"],\n        email = _this$state$reference[\"my0:email\"],\n        hasTelephoneNumber = _this$state$reference[\"my0:phoneNumber\"],\n        currentJob = _this$state$reference[\"my0:currentJob\"],\n        address = _this$state$reference[\"my0:address\"];\n    let jobTitle = currentJob[\"my0:jobTitle\"],\n        employedIn = currentJob[\"my0:employedIn\"];\n    let organizationName = employedIn[\"my0:organizationName\"];\n    let lang = this.props.language;\n    let _this$props = this.props,\n        translatedProps = _this$props.translatedProps,\n        translatedPropsAddr = _this$props.translatedPropsAddr,\n        translatedPropsOrg = _this$props.translatedPropsOrg,\n        translatedPropsWork = _this$props.translatedPropsWork;\n    const onHide = this.props.onHide;\n    return React.createElement(Modal, {\n      show: this.props.show,\n      onHide: this.props.onHide,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      className: \"reference-modal\",\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      id: \"contained-modal-title-vcenter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, this.props.isUpdate ? referenceUpdateTitle[lang] : referenceAddTitle[lang])))), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 4,\n      style: {\n        marginTop: \"7px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: {\n        width: \"100%\",\n        justifyContent: \"left\",\n        marginLeft: \"0px\",\n        marginBottom: \"8px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label-rw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, this.renderLabel(translatedProps, \"title\", lang)), React.createElement(Combobox, {\n      name: \"title\",\n      placeholder: this.renderLabel(translatedProps, \"title\", lang),\n      data: this.props.titles,\n      textField: lang,\n      valueField: \"@type\",\n      value: title,\n      caseSensitive: false,\n      minLength: 3,\n      filter: \"contains\",\n      onChange: value => this.handleSelectChange(value, \"my0:title\", \"person\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:firstName\",\n      name: \"person\",\n      label: this.renderLabel(translatedProps, \"firstName\", lang) + \" *\",\n      type: \"text\",\n      value: firstName,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    })), React.createElement(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:lastName\",\n      label: this.renderLabel(translatedProps, \"lastName\", lang) + \" *\",\n      name: \"person\",\n      type: \"text\",\n      value: lastName,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:jobTitle\",\n      name: \"workHistory\",\n      label: this.renderLabel(translatedPropsWork, \"jobTitle\", lang) + \" *\",\n      type: \"text\",\n      value: jobTitle,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    })), React.createElement(Col, {\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:organizationName\",\n      name: \"organization\",\n      label: this.renderLabel(translatedPropsOrg, \"organizationName\", lang) + \" *\",\n      type: \"text\",\n      value: organizationName,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:street\",\n      name: \"address\",\n      label: this.renderLabel(translatedPropsAddr, \"street\", lang),\n      type: \"text\",\n      value: address[\"my0:street\"],\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:postalCode\",\n      label: this.renderLabel(translatedPropsAddr, \"postalCode\", lang),\n      name: \"address\",\n      type: \"text\",\n      value: address[\"my0:postalCode\"],\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    })), React.createElement(Col, {\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      id: \"my0:city\",\n      name: \"address\",\n      label: this.renderLabel(translatedPropsAddr, \"city\", lang),\n      type: \"text\",\n      value: address[\"my0:city\"],\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      style: {\n        width: \"100%\",\n        justifyContent: \"left\",\n        marginLeft: \"0px\",\n        marginBottom: \"8px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label-rw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, this.renderLabel(translatedPropsAddr, \"country\", lang)), React.createElement(Combobox, {\n      name: \"my0:country\",\n      placeholder: this.renderLabel(translatedPropsAddr, \"country\", lang),\n      data: this.props.countries,\n      textField: lang,\n      valueField: \"@type\",\n      value: address[\"my0:country\"],\n      caseSensitive: false,\n      minLength: 3,\n      filter: \"contains\",\n      onChange: value => this.handleSelectChange(value, \"my0:country\", \"address\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }))), React.createElement(CustomInput, {\n      id: \"my0:phoneNumber\",\n      name: \"person\",\n      label: this.renderLabel(translatedProps, \"phoneNumber\", lang),\n      type: \"text\",\n      value: hasTelephoneNumber,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }), React.createElement(CustomInput, {\n      id: \"my0:email\",\n      label: this.renderLabel(translatedProps, \"email\", lang) + \" *\",\n      name: \"person\",\n      type: \"text\",\n      value: email,\n      handleChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    })), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }, this.handleRenderingSubmitButton(lang), React.createElement(Button, {\n      className: \"btn-reset\",\n      onClick: this.clearForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }, resetLabel[lang]), React.createElement(Button, {\n      variant: \"danger\",\n      onClick: onHide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }, cancelLabel[lang])));\n  }\n\n}\n\nconst mapstateToProps = (state, ownProps) => {\n  return {\n    initialValues: state.cv[\"my0:hasReference\"][ownProps.id],\n    language: state.utility.language,\n    countries: retrieveCountryValues(state.utility.countryValues),\n    titles: retrieveBaseProperties(state.utility.titleValues),\n    translatedPropsOrg: retrieveMainProperties(state.utility[\"my0:Organization\"]),\n    translatedPropsAddr: retrieveMainProperties(state.utility[\"my0:Address\"]),\n    translatedProps: retrieveMainProperties(state.utility[\"my0:Person\"]),\n    translatedPropsWork: retrieveMainProperties(state.utility[\"my0:WorkHistory\"])\n  };\n};\n\nexport default connect(mapstateToProps, {\n  createReference,\n  fetchCountries,\n  fetchTitleProperties,\n  updateReference,\n  fetchMainPropertiess\n})(ReferenceModal);","map":{"version":3,"sources":["/home/eelezi/thesis/rdf2resume/src/components/Dashboard/Forms/Modals/FormReference/ReferenceModal.jsx"],"names":["React","Component","connect","Modal","Button","Row","Col","Combobox","CustomInput","createReference","updateReference","fetchCountries","fetchTitleProperties","fetchMainPropertiess","retrieveCountryValues","retrieveMainProperties","retrieveBaseProperties","cancelLabel","resetLabel","saveLabel","updateLabel","referenceAddTitle","referenceUpdateTitle","ReferenceModal","state","reference","setInitialValues","props","id","isUpdate","inputRef","initialValues","setState","clearForm","handleSelectChange","value","name","obj","label","handleInputChange","e","target","handleSave","handleUpdate","object","index","handleRenderingSubmitButton","lang","disabled","componentWillMount","findInArray","data","length","i","indexOf","newlength","renderLabel","translated","undefined","render","title","firstName","lastName","email","hasTelephoneNumber","currentJob","address","jobTitle","employedIn","organizationName","language","translatedProps","translatedPropsAddr","translatedPropsOrg","translatedPropsWork","onHide","show","marginTop","width","justifyContent","marginLeft","marginBottom","titles","countries","mapstateToProps","ownProps","cv","utility","countryValues","titleValues"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Modal, Button, Row, Col } from \"react-bootstrap\";\nimport { Combobox } from \"react-widgets\";\nimport CustomInput from \"../../../../core/CustomInput\";\nimport { createReference, updateReference } from \"../../../../../actions\";\nimport {\n  fetchCountries,\n  fetchTitleProperties,\n  fetchMainPropertiess\n} from \"../../../../../actions/utilityActions\";\nimport {\n  retrieveCountryValues,\n  retrieveMainProperties,\n  retrieveBaseProperties\n} from \"../../../../../utilities/utilityQueries\";\nimport {\n  cancelLabel,\n  resetLabel,\n  saveLabel,\n  updateLabel,\n  referenceAddTitle,\n  referenceUpdateTitle\n} from \"../../../../../translations/translations\";\n\nclass ReferenceModal extends Component {\n  state = {\n    reference: {\n      \"@type\": \"my0:Reference\",\n      \"my0:referenceBy\": {\n        \"@type\": \"my0:Person\",\n        \"my0:title\": \"\",\n        \"my0:firstName\": \"\",\n        \"my0:lastName\": \"\",\n        \"my0:address\": {\n          \"@type\": \"my0:Address\",\n          \"my0:city\": \"\",\n          \"my0:country\": \"\",\n          \"my0:street\": \"\",\n          \"my0:postalCode\": \"\"\n        },\n        \"my0:phoneNumber\": \"\",\n        \"my0:email\": \"\",\n        \"my0:currentJob\": {\n          \"@type\": \"my0:WorkHistory\",\n          \"my0:jobTitle\": \"\",\n          \"my0:employedIn\": {\n            \"@type\": \"my0:Company\",\n            \"my0:organizationName\": \"\"\n          }\n        }\n      }\n    }\n  };\n\n  componentWillMount() {\n    this.props.fetchCountries();\n    this.props.fetchTitleProperties();\n    this.props.fetchMainPropertiess(\"my0:Person\");\n    this.props.fetchMainPropertiess(\"my0:Organization\");\n    this.props.fetchMainPropertiess(\"my0:Address\");\n    this.props.fetchMainPropertiess(\"my0:WorkHistory\");\n    this.setInitialValues();\n  }\n\n  setInitialValues = () => {\n    if (this.props.id !== null && this.props.isUpdate === true) {\n      let inputRef = this.props.initialValues;\n      let reference = { ...this.state.reference };\n      reference[\"my0:referenceBy\"] = inputRef[\"my0:referenceBy\"];\n      this.setState({\n        reference\n      });\n    }\n  };\n\n  clearForm = () => {\n    if (!this.props.isUpdate) {\n      this.setState({\n        reference: {\n          \"@type\": \"my0:Reference\",\n          \"my0:referenceBy\": {\n            \"@type\": \"my0:Person\",\n            \"my0:title\": \"\",\n            \"my0:firstName\": \"\",\n            \"my0:lastName\": \"\",\n            \"my0:address\": {\n              \"@type\": \"my0:Address\",\n              \"my0:city\": \"\",\n              \"my0:country\": \"\",\n              \"my0:street\": \"\",\n              \"my0:postalCode\": \"\"\n            },\n            \"my0:hasTelephoneNumber\": \"\",\n            \"my0:email\": \"\",\n            \"my0:currentJob\": {\n              \"@type\": \"my0:WorkHistory\",\n              \"my0:jobTitle\": \"\",\n              \"my0:employedIn\": {\n                \"@type\": \"my0:Company\",\n                \"my0:organizationName\": \"\"\n              }\n            }\n          }\n        }\n      });\n    } else {\n      this.setInitialValues();\n    }\n  };\n\n  handleSelectChange = (value, id, name) => {\n    let obj = { ...this.state.reference };\n    let label = id;\n    if (name === \"person\") {\n      obj[\"my0:referenceBy\"][label] = value[\"@type\"];\n    } else if (name === \"address\") {\n      obj[\"my0:referenceBy\"][\"my0:address\"][label] = value[\"@type\"];\n    } else if (name === \"workHistory\") {\n      obj[\"my0:referenceBy\"][\"my0:currentJob\"][label] = value[\"@type\"];\n    } else if (name === \"organization\") {\n      obj[\"my0:referenceBy\"][\"my0:currentJob\"][\"my0:employedIn\"][label] =\n        value[\"@type\"];\n    } else {\n      obj[label] = value[\"@type\"];\n    }\n    this.setState({\n      reference: obj\n    });\n  };\n\n  handleInputChange = e => {\n    let obj = { ...this.state.reference };\n    let label = e.target.id;\n    if (e.target.name === \"person\") {\n      obj[\"my0:referenceBy\"][label] = e.target.value;\n    } else if (e.target.name === \"address\") {\n      obj[\"my0:referenceBy\"][\"my0:address\"][label] = e.target.value;\n    } else if (e.target.name === \"workHistory\") {\n      obj[\"my0:referenceBy\"][\"my0:currentJob\"][label] = e.target.value;\n    } else if (e.target.name === \"organization\") {\n      obj[\"my0:referenceBy\"][\"my0:currentJob\"][\"my0:employedIn\"][label] =\n        e.target.value;\n    } else {\n      obj[label] = e.target.value;\n    }\n    this.setState({\n      reference: obj\n    });\n  };\n\n  handleSave = () => {\n    this.props.createReference(this.state.reference);\n  };\n\n  handleUpdate = () => {\n    this.props.updateReference({\n      object: this.state.reference,\n      index: this.props.id\n    });\n  };\n\n  handleRenderingSubmitButton = lang => {\n    let disabled =\n      this.state.reference[\"my0:referenceBy\"][\"my0:firstName\"] === \"\" ||\n      this.state.reference[\"my0:referenceBy\"][\"my0:lastName\"] === \"\" ||\n      this.state.reference[\"my0:referenceBy\"][\"my0:currentJob\"][\n        \"my0:jobTitle\"\n      ] === \"\" ||\n      this.state.reference[\"my0:referenceBy\"][\"my0:currentJob\"][\n        \"my0:employedIn\"\n      ][\"my0:organizationName\"] === \"\";\n    if (!this.props.isUpdate) {\n      return (\n        <Button\n          disabled={disabled}\n          type=\"submit\"\n          variant=\"primary\"\n          onClick={this.handleSave}\n        >\n          {saveLabel[lang]}\n        </Button>\n      );\n    } else {\n      return (\n        <Button\n          disabled={disabled}\n          type=\"submit\"\n          variant=\"primary\"\n          onClick={this.handleUpdate}\n        >\n          {updateLabel[lang]}\n        </Button>\n      );\n    }\n  };\n\n  findInArray(data, name) {\n    let length = data.length;\n    for (let i = 0; i < length; i++) {\n      let index = data[i][\"@type\"].indexOf(name);\n      let newlength = data[i][\"@type\"].length;\n      if (index >= 0 && index + name.length >= newlength) {\n        return i;\n      }\n    }\n  }\n\n  renderLabel(translated, name, lang) {\n    let index = this.findInArray(translated, name);\n    if (\n      translated[index] === undefined ||\n      translated[index][lang] === undefined\n    ) {\n      return name;\n    } else {\n      return translated[index][lang];\n    }\n  }\n\n  render() {\n    let {\n      \"my0:title\": title,\n      \"my0:firstName\": firstName,\n      \"my0:lastName\": lastName,\n      \"my0:email\": email,\n      \"my0:phoneNumber\": hasTelephoneNumber,\n      \"my0:currentJob\": currentJob,\n      \"my0:address\": address\n    } = this.state.reference[\"my0:referenceBy\"];\n\n    let { \"my0:jobTitle\": jobTitle, \"my0:employedIn\": employedIn } = currentJob;\n\n    let { \"my0:organizationName\": organizationName } = employedIn;\n\n    let lang = this.props.language;\n\n    let {\n      translatedProps,\n      translatedPropsAddr,\n      translatedPropsOrg,\n      translatedPropsWork\n    } = this.props;\n\n    const { onHide } = this.props;\n    return (\n      <Modal\n        show={this.props.show}\n        onHide={this.props.onHide}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        className=\"reference-modal\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            <Row>\n              <Col md={12}>\n                {this.props.isUpdate\n                  ? referenceUpdateTitle[lang]\n                  : referenceAddTitle[lang]}\n              </Col>\n            </Row>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Row>\n            <Col md={4} style={{ marginTop: \"7px\" }}>\n              <Row\n                style={{\n                  width: \"100%\",\n                  justifyContent: \"left\",\n                  marginLeft: \"0px\",\n                  marginBottom: \"8px\"\n                }}\n              >\n                <label className=\"label-rw\">\n                  {this.renderLabel(translatedProps, \"title\", lang)}\n                </label>\n                <Combobox\n                  name=\"title\"\n                  placeholder={this.renderLabel(translatedProps, \"title\", lang)}\n                  data={this.props.titles}\n                  textField={lang}\n                  valueField=\"@type\"\n                  value={title}\n                  caseSensitive={false}\n                  minLength={3}\n                  filter=\"contains\"\n                  onChange={value =>\n                    this.handleSelectChange(value, \"my0:title\", \"person\")\n                  }\n                />\n              </Row>\n            </Col>\n            <Col md={4}>\n              <CustomInput\n                id=\"my0:firstName\"\n                name=\"person\"\n                label={\n                  this.renderLabel(translatedProps, \"firstName\", lang) + \" *\"\n                }\n                type=\"text\"\n                value={firstName}\n                handleChange={this.handleInputChange}\n              />\n            </Col>\n            <Col md={4}>\n              <CustomInput\n                id=\"my0:lastName\"\n                label={\n                  this.renderLabel(translatedProps, \"lastName\", lang) + \" *\"\n                }\n                name=\"person\"\n                type=\"text\"\n                value={lastName}\n                handleChange={this.handleInputChange}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              <CustomInput\n                id=\"my0:jobTitle\"\n                name=\"workHistory\"\n                label={\n                  this.renderLabel(translatedPropsWork, \"jobTitle\", lang) + \" *\"\n                }\n                type=\"text\"\n                value={jobTitle}\n                handleChange={this.handleInputChange}\n              />\n            </Col>\n            <Col md={6}>\n              <CustomInput\n                id=\"my0:organizationName\"\n                name=\"organization\"\n                label={\n                  this.renderLabel(\n                    translatedPropsOrg,\n                    \"organizationName\",\n                    lang\n                  ) + \" *\"\n                }\n                type=\"text\"\n                value={organizationName}\n                handleChange={this.handleInputChange}\n              />\n            </Col>\n          </Row>\n          <div>\n            <CustomInput\n              id=\"my0:street\"\n              name=\"address\"\n              label={this.renderLabel(translatedPropsAddr, \"street\", lang)}\n              type=\"text\"\n              value={address[\"my0:street\"]}\n              handleChange={this.handleInputChange}\n            />\n            <Row>\n              <Col md={6}>\n                <CustomInput\n                  id=\"my0:postalCode\"\n                  label={this.renderLabel(\n                    translatedPropsAddr,\n                    \"postalCode\",\n                    lang\n                  )}\n                  name=\"address\"\n                  type=\"text\"\n                  value={address[\"my0:postalCode\"]}\n                  handleChange={this.handleInputChange}\n                />\n              </Col>\n              <Col md={6}>\n                <CustomInput\n                  id=\"my0:city\"\n                  name=\"address\"\n                  label={this.renderLabel(translatedPropsAddr, \"city\", lang)}\n                  type=\"text\"\n                  value={address[\"my0:city\"]}\n                  handleChange={this.handleInputChange}\n                />\n              </Col>\n            </Row>\n            <Row\n              style={{\n                width: \"100%\",\n                justifyContent: \"left\",\n                marginLeft: \"0px\",\n                marginBottom: \"8px\"\n              }}\n            >\n              <label className=\"label-rw\">\n                {this.renderLabel(translatedPropsAddr, \"country\", lang)}\n              </label>\n              <Combobox\n                name=\"my0:country\"\n                placeholder={this.renderLabel(\n                  translatedPropsAddr,\n                  \"country\",\n                  lang\n                )}\n                data={this.props.countries}\n                textField={lang}\n                valueField=\"@type\"\n                value={address[\"my0:country\"]}\n                caseSensitive={false}\n                minLength={3}\n                filter=\"contains\"\n                onChange={value =>\n                  this.handleSelectChange(value, \"my0:country\", \"address\")\n                }\n              />\n            </Row>\n          </div>\n          <CustomInput\n            id=\"my0:phoneNumber\"\n            name=\"person\"\n            label={this.renderLabel(translatedProps, \"phoneNumber\", lang)}\n            type=\"text\"\n            value={hasTelephoneNumber}\n            handleChange={this.handleInputChange}\n          />\n          <CustomInput\n            id=\"my0:email\"\n            label={this.renderLabel(translatedProps, \"email\", lang) + \" *\"}\n            name=\"person\"\n            type=\"text\"\n            value={email}\n            handleChange={this.handleInputChange}\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          {this.handleRenderingSubmitButton(lang)}\n          <Button className=\"btn-reset\" onClick={this.clearForm}>\n            {resetLabel[lang]}\n          </Button>\n          <Button variant=\"danger\" onClick={onHide}>\n            {cancelLabel[lang]}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapstateToProps = (state, ownProps) => {\n  return {\n    initialValues: state.cv[\"my0:hasReference\"][ownProps.id],\n    language: state.utility.language,\n    countries: retrieveCountryValues(state.utility.countryValues),\n    titles: retrieveBaseProperties(state.utility.titleValues),\n    translatedPropsOrg: retrieveMainProperties(\n      state.utility[\"my0:Organization\"]\n    ),\n    translatedPropsAddr: retrieveMainProperties(state.utility[\"my0:Address\"]),\n    translatedProps: retrieveMainProperties(state.utility[\"my0:Person\"]),\n    translatedPropsWork: retrieveMainProperties(\n      state.utility[\"my0:WorkHistory\"]\n    )\n  };\n};\n\nexport default connect(\n  mapstateToProps,\n  {\n    createReference,\n    fetchCountries,\n    fetchTitleProperties,\n    updateReference,\n    fetchMainPropertiess\n  }\n)(ReferenceModal);\n"]},"metadata":{},"sourceType":"module"}